{"source": "github", "repo": "mytechnotalent/Reverse-Engineering", "file": "README.md", "url": "https://github.com/mytechnotalent/Reverse-Engineering/blob/main/README.md", "content": "<img src=\"https://github.com/mytechnotalent/Reverse-Engineering/blob/main/Reverse%20Engineering.png?raw=true\">\n\nA FREE comprehensive reverse engineering tutorial covering x86, x64, 32-bit/64-bit ARM, 8-bit AVR and 32-bit RISC-V architectures.\n\n<br>\n\n## Join DC540 Discord [HERE](https://discord.gg/TC9V9RCr5U)\n\n<br>\n\n## Book\n## Reverse Engineering E-BOOK [HERE](https://0xinfection.github.io/reversing)\n## Reverse Engineering PDF [HERE](https://0xinfection.github.io/reversing/reversing-for-everyone.pdf)\nAssembled by @0xInfection (Twitter)\n\n<br>\n\n## Neural Network Hacking\n## Hacking Neural Networks [HERE](https://github.com/mytechnotalent/HNN)\n## Reverse Engineering GPT [HERE](https://github.com/mytechnotalent/RE-GPT)\n\n<br>\n\n## Network\n## Turbo Scanner [HERE](https://github.com/mytechnotalent/turbo-scanner)\n## Turbo Attack [HERE](https://github.com/mytechnotalent/turbo-attack)\n\n<br>\n\n## Windows Kernel Hacking\n## Windows Process Lifecycle [HERE](https://github.com/mytechnotalent/windows-process-lifecycle)\n## Windows Kernel Debugging [HERE](https://github.com/mytechnotalent/windows-kernel-debugging)\n\n<br>\n\n## Windows Assembler\n## 0x0000-ASM-Hello-World [HERE](https://github.com/mytechnotalent/0x0000-ASM-Hello-World)\n## 0x0001-ASM-Hello-World [HERE](https://github.com/mytechnotalent/0x0001-ASM-Hello-World)\n## UiDll [HERE](https://github.com/mytechnotalent/UiDll)\n\n<br>\n\n## Robotics\n## C Robot [HERE](https://github.com/mytechnotalent/C-Robot)\n## Rust Robot [HERE](https://github.com/mytechnotalent/Rust-Robot)\n\n<br>\n\n## Embedded Assembler Drivers\n## ATmega328P Blink Driver [HERE](https://github.com/mytechnotalent/ATmega328P_Blink_Driver)\n## ATmega328P IO Driver [HERE](https://github.com/mytechnotalent/ATmega328P_IO_Driver)\n## ATmega328P UART Driver [HERE](https://github.com/mytechnotalent/ATmega328P_UART_Driver)\n## ATmega328P SSD1306 Driver [HERE](https://github.com/mytechnotalent/ATmega328P_SSD1306_Driver)\n## STM32F401 EEPROM Driver [HERE](https://github.com/mytechnotalent/STM32F401_EEPROM_Driver)\n## STM32F401 Button Interrupt Driver [HERE](https://github.com/mytechnotalent/STM32F401_Button_Interrupt_Driver)\n## STM32F401 SSD1306 Driver [HERE](https://github.com/mytechnotalent/STM32F401_SSD1306_Driver)\n## STM32F4 LoRa UART Driver [HERE](https://github.com/mytechnotalent/STM32F4_LoRa_UART_Driver)\n## RP2350 Blink Driver [HERE](https://github.com/mytechnotalent/RP2350_Blink_Driver)\n\n<br>\n\n## CTF's\n## DC540 Hacking Challenge 0x00001 [HERE](https://github.com/mytechnotalent/dc540-0x00001)\n## DC540 Hacking Challenge 0x00002 [MicroPython CTF] [HERE](https://github.com/mytechnotalent/dc540-0x00002)\n## DC540 Hacking Challenge 0x00003 [C CTF] [HERE](https://github.com/mytechnotalent/dc540-0x00003)\n## DC540 Hacking Challenge 0x00004 [C CTF] [HERE](https://github.com/mytechnotalent/dc540-0x00004)\n## DC540 Hacking Challenge 0x00005a [HERE](https://github.com/mytechnotalent/dc540-0x00005a)\n## DC540 Hacking Challenge 0x00005b [Assembler CTF] [HERE](https://github.com/mytechnotalent/dc540-0x00005b)\n## DC540 Hacking Challenge 0x00006 [UNKNOWN CTF] [HERE](https://github.com/mytechnotalent/dc540-0x00006)\n## DC540 Hacking Challenge 0x00007 [UNKNOWN CTF] [HERE](https://github.com/mytechnotalent/dc540-0x00007)\n## DC540 Hacking Challenge 0x00008 [UNKNOWN CTF] [HERE](https://github.com/mytechnotalent/dc540-0x00008)\n## DC540 Hacking Challenge 0x00009 [Windows CTF] [HERE](https://github.com/mytechnotalent/dc540-0x00009)\n\n<br>\n\n## STEM\n## Python For Kids [HERE](https://github.com/mytechnotalent/Python-For-Kids)\n\n<br>\n\n## x86 Course\n\n## Lesson 1: x86 Course (Part 1: Goals)\nThis tutorial will begin with the basic concepts of malware reverse engineering and graduate to an entry-level basic examination of Assembly Language.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 2: x86 Course (Part 2: Techniques)\nThis tutorial will address the two basic techniques that you can employ when analyzing malware. The first being static analysis and the other being dynamic analysis.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 3: x86 Course (Part 3: Types Of Malware)\nThis tutorial will address the basic forms of malware and how they work in simple terms.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 4: x86 Course (Part 4: x86 Assembly Intro)\nThis tutorial will address x86 Assembly Languages and their usage to produce object code for the aforementioned series of processors.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 5: x86 Course (Part 5: Binary Number System)\nThis tutorial will address the very basics of the binary number system.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 6: x86 Course (Part 6: Hexadecimal Number System)\nThis tutorial will address the very basics of the hexadecimal number system.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 7: x86 Course (Part 7: Transistors And Memory)\nThis tutorial will address the basics of transistors and memory.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 8: x86 Course (Part 8 - Bytes, Words, Double Words, etc...)\nThis tutorial will address the basics of memory and examine our first GDB debugger instance and examine our first real look into our computers memory and instructions.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 9: x86 Course (Part 9: x86 Basic Architecture)\nThis tutorial will address the basic architecture of an x86 processor.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 10: x86 Course (Part 10: General-purpose Registers)\nThis tutorial will address the general purpose x86 registers.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 11: x86 Course (Part 11: Segment Registers)\nThis tutorial will address the x86 segment registers.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 12: x86 Course (Part 12: Instruction Pointer Register)\nThis tutorial will address the x86 instruction pointer register.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 13: x86 Course (Part 13: Control Registers)\nThis tutorial will address the x86 control registers.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 14: x86 Course (Part 14: Flags)\nThis tutorial will address the status, control and systems flags.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 15: x86 Course (Part 15: Stack)\nThis tutorial will address the stack.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 16: x86 Course (Part 16: Heap)\nThis tutorial will address the heap.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 17: x86 Course (Part 17 â€“ How To Install Linux)\nThis tutorial will address how to install Ubuntu Linux on both Windows and MAC.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 18: x86 Course (Part 18 - vim Text Editor)\nThis tutorial will address how to install the vim text editor.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 19: x86 Course (Part 19 - Why Learn Assembly)\nThis tutorial will address the age old question of why to bother understanding the basics of Assembly Language.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 20: x86 Course (Part 20 - Instruction Code Handling)\nThis tutorial will address op codes and instruction code handling.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 21: x86 Course (Part 21 - How To Compile A Program)\nThis tutorial will address how to compile a basic x86 Assembly Program.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 22: x86 Course (Part 22 - ASM Program 1 [Moving Immediate Data])\nThis tutorial will address how to create our first real Assembly Program by moving immediate data.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 23: x86 Course (Part 23 - ASM Debugging 1 [Moving Immediate Data])\nThis tutorial will address how to debug our first real Assembly Program by moving immediate data.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 24: x86 Course (Part 24 - ASM Hacking 1 [Moving Immediate Data])\nThis tutorial will address how to hack our first real Assembly Program by moving immediate data.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 25: x86 Course (Part 25 - ASM Program 2 [Moving Data Between Registers])\nThis tutorial will address how to create our second real Assembly Program by moving between registers.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 26: x86 Course (Part 26 - ASM Debugging 2 [Moving Data Between Registers])\nThis tutorial will address how to debug our second real Assembly Program by moving between registers.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 27: x86 Course (Part 27 - ASM Hacking 2 [Moving Data Between Registers])\nThis tutorial will address how to hack our second real Assembly Program by moving between registers.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 28: x86 Course (Part 28 - ASM Program 3 [Moving Data Between Memory And Registers])\nThis tutorial will address how to create our third real Assembly Program by moving between memory and registers.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 29: x86 Course (Part 29 - ASM Debugging 3 [Moving Data Between Memory And Registers])\nThis tutorial will address how to debug our third real Assembly Program by moving between memory and registers.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 30: x86 Course (Part 30 - ASM Hacking 3 [Moving Data Between Memory And Registers])\nThis tutorial will address how to hack our third real Assembly Program by moving between memory and registers.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 31: x86 Course (Part 31 - ASM Program 4 [Moving Data Between Registers And Memory])\nThis tutorial will address how to create our fourth real Assembly Program by moving between registers and memory.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 32: x86 Course (Part 32 - ASM Debugging 4 [Moving Data Between Registers And Memory])\nThis tutorial will address how to debug our fourth real Assembly Program by moving between registers and memory.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 33: x86 Course (Part 33 - ASM Hacking 4 [Moving Data Between Registers And Memory])\nThis tutorial will address how to hack our fourth real Assembly Program by moving between registers and memory.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 34: x86 Course (Part 34 - ASM Program 5 [Indirect Addressing With Registers])\nThis tutorial will address how to create our fifth real Assembly Program by indirect addressing with registers.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 35: x86 Course (Part 35 - ASM Debugging 5 [Indirect Addressing With Registers])\nThis tutorial will address how to debug our fifth real Assembly Program by indirect addressing with registers.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 36: x86 Course (Part 36 - ASM Hacking 5 [Indirect Addressing With Registers])\nThis tutorial will address how to hack our fifth real Assembly Program by indirect addressing with registers.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 37: x86 Course (Part 37 - ASM Program 6 [CMOV Instructions])\nThis tutorial will address how to hack our sixth real Assembly Program with CMOV instructions.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 38: x86 Course (Part 38 - ASM Debugging 6 [CMOV Instructions])\nThis tutorial will address how to debug our sixth real Assembly Program with CMOV instructions.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 39: x86 Course (Part 39 - ASM Hacking 6 [CMOV Instructions])\nThis tutorial will address how to hack our sixth real Assembly Program with CMOV instructions.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 40: x86 Course (Part 40 - Conclusion)\nThis tutorial will conclude this x86 tutorial.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n<br>\n\n## ARM-32 Course 1\n\n## Lesson 41: ARM-32 Course 1 (Part 1 â€“ The Meaning Of Life)\nThis tutorial will introduce our ARM-32 Course 1 tutorial series.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 42: ARM-32 Course 1 (Part 2 - Number Systems)\nThis tutorial will discuss number systems such as binary, decimal and hexadecimal in detail.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 43: ARM-32 Course 1 (Part 3 - Binary Addition)\nThis tutorial will discuss binary addition.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 44: ARM-32 Course 1 (Part 4 - Binary Subtraction)\nThis tutorial will discuss binary subtraction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 45: ARM-32 Course 1 (Part 5 - Word Lengths)\nThis tutorial will discuss word lengths.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 46: ARM-32 Course 1 (Part 6 - Registers)\nThis tutorial will discuss registers.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 47: ARM-32 Course 1 (Part 7 - Program Counter)\nThis tutorial will discuss the program counter.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 48: ARM-32 Course 1 (Part 8 - CPSR)\nThis tutorial will discuss the CPSR.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 49: ARM-32 Course 1 (Part 9 - Link Register)\nThis tutorial will discuss the Link Register.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 50: ARM-32 Course 1 (Part 10 - Stack Pointer)\nThis tutorial will discuss the Stack Pointer.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 51: ARM-32 Course 1 (Part 11 - ARM Firmware Boot Procedures)\nThis tutorial will discuss ARM Firmware Boot Procedures.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 52: ARM-32 Course 1 (Part 12 - Von Neumann Architecture)\nThis tutorial will discuss Von Neumann Architecture.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 53: ARM-32 Course 1 (Part 13 - Instruction Pipeline)\nThis tutorial will discuss the instruction pipeline.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 54: ARM-32 Course 1 (Part 14 - ADD)\nThis tutorial will discuss the add instruction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 55: ARM-32 Course 1 (Part 15 - Debugging ADD)\nThis tutorial will discuss debugging the add instruction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 56: ARM-32 Course 1 (Part 16 - Hacking ADD)\nThis tutorial will discuss hacking the add instruction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 57: ARM-32 Course 1 (Part 17 - ADDS)\nThis tutorial will discuss the adds instruction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 58: ARM-32 Course 1 (Part 18 â€“ Debugging ADDS)\nThis tutorial will discuss debugging the adds instruction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 59: ARM-32 Course 1 (Part 19 â€“ Hacking ADDS)\nThis tutorial will discuss hacking the adds instruction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 60: ARM-32 Course 1 (Part 20 â€“ ADC)\nThis tutorial will discuss the ADC instruction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 61: ARM-32 Course 1 (Part 21 â€“ Debugging ADC)\nThis tutorial will discuss debugging the ADC instruction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 62: ARM-32 Course 1 (Part 22 â€“ Hacking ADC)\nThis tutorial will discuss hacking the ADC instruction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook. \n\n## Lesson 63: ARM-32 Course 1 (Part 23 â€“ SUB)\nThis tutorial will discuss the SUB instruction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 64: ARM-32 Course 1 (Part 24 â€“ Debugging SUB)\nThis tutorial will discuss debugging the SUB instruction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook. \n\n## Lesson 65: ARM-32 Course 1 (Part 25 â€“ Hacking SUB)\nThis tutorial will discuss hacking the SUB instruction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n<br>\n\n## ARM-32 Course 2\n\n## Lesson 66: ARM-32 Course 2 (Part 1 â€“ The Meaning Of Life Part 2)\nThis tutorial will introduce our ARM-32 Course 2 course.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 67: ARM-32 Course 2 (Part 2 â€“ Number Systems)\nThis tutorial will discuss number systems.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 68: ARM-32 Course 2 (Part 3 â€“ Binary Addition)\nThis tutorial will discuss binary addition.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 69: ARM-32 Course 2 (Part 4 â€“ Binary Subtraction)\nThis tutorial will discuss binary subtraction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 70: ARM-32 Course 2 (Part 5 â€“ Word Lengths)\nThis tutorial will discuss word lengths.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook. \n\n## Lesson 71: ARM-32 Course 2 (Part 6 â€“ Registers)\nThis tutorial will discuss registers.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 72: ARM-32 Course 2 (Part 7 â€“ Program Counter)\nThis tutorial will discuss program counter.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 73: ARM-32 Course 2 (Part 8 - CPSR)\nThis tutorial will discuss the CPSR.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 74: ARM-32 Course 2 (Part 9 - Link Register)\nThis tutorial will discuss the link register.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 75: ARM-32 Course 2 (Part 10 - Stack Pointer)\nThis tutorial will discuss the stack pointer.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 76: ARM-32 Course 2 (Part 11 - Firmware Boot Procedures)\nThis tutorial will discuss the firmware boot procedures.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 77: ARM-32 Course 2 (Part 12 - Von Neumann Architecture)\nThis tutorial will discuss the Von Neumann Architecture.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 78: ARM-32 Course 2 (Part 13 - Instruction Pipeline)\nThis tutorial will discuss the instruction pipeline.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 79: ARM-32 Course 2 (Part 14 - Hello World)\nThis tutorial will discuss the basics of a hello world program in ARM 32-bit.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 80: ARM-32 Course 2 (Part 15 - Debugging Hello World)\nThis tutorial will discuss debugging hello world.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 81: ARM-32 Course 2 (Part 16 - Hacking Hello World)\nThis tutorial will discuss hacking hello world.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 82: ARM-32 Course 2 (Part 17 - Constants)\nThis tutorial will discuss constants.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 83: ARM-32 Course 2 (Part 18 â€“ Debugging Constants)\nThis tutorial will discuss debugging constants.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 84: ARM-32 Course 2 (Part 19 â€“ Hacking Constants)\nThis tutorial will discuss hacking constants.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 85: ARM-32 Course 2 (Part 20 â€“ Character Variables)\nThis tutorial will discuss character variables.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 86: ARM-32 Course 2 (Part 21 â€“ Debugging Character Variables)\nThis tutorial will discuss debugging character variables.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 87: ARM-32 Course 2 (Part 22 â€“ Hacking Character Variables)\nThis tutorial will discuss hacking character variables.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 88: ARM-32 Course 2 (Part 23 â€“ Boolean Variables)\nThis tutorial will discuss boolean variables.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 89: ARM-32 Course 2 (Part 24 â€“ Debugging Boolean Variables)\nThis tutorial will discuss debugging boolean variables.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 90: ARM-32 Course 2 (Part 25 â€“ Hacking Boolean Variables)\nThis tutorial will discuss hacking boolean variables.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 91: ARM-32 Course 2 (Part 26 â€“ Integer Variables)\nThis tutorial will discuss integer variables.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 92: ARM-32 Course 2 (Part 27 â€“ Debugging Integer Variables)\nThis tutorial will discuss debugging integer variables.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 93: ARM-32 Course 2 (Part 28 â€“ Hacking Integer Variables)\nThis tutorial will discuss hacking integer variables.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 94: ARM-32 Course 2 (Part 29 â€“ Float Variables)\nThis tutorial will discuss float variables.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 95: ARM-32 Course 2 (Part 30 â€“ Debugging Float Variables)\nThis tutorial will discuss debugging float variables.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 96: ARM-32 Course 2 (Part 31 â€“ Hacking Float Variables)\nThis tutorial will discuss hacking float variables.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 97: ARM-32 Course 2 (Part 32 â€“ Double Variables)\nThis tutorial will discuss double variables.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 98: ARM-32 Course 2 (Part 33 â€“ Debugging Double Variables)\nThis tutorial will discuss debugging double variables.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 99: ARM-32 Course 2 (Part 34 â€“ Hacking Double Variables)\nThis tutorial will discuss hacking double variables.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 100: ARM-32 Course 2 (Part 35 â€“ SizeOf Operator)\nThis tutorial will discuss the sizeof operator.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 101: ARM-32 Course 2 (Part 36 â€“ Debugging SizeOf Operator)\nThis tutorial will discuss debugging sizeof operator.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 102: ARM-32 Course 2 (Part 37 â€“ Hacking SizeOf Operator)\nThis tutorial will discuss hacking sizeof operator.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 103: ARM-32 Course 2 (Part 38 â€“ Pre-Increment Operator)\nThis tutorial will discuss the pre-increment operator.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 104: ARM-32 Course 2 (Part 39 â€“ Debugging Pre-Increment Operator)\nThis tutorial will discuss debugging pre-increment operator.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 105: ARM-32 Course 2 (Part 40 â€“ Hacking Pre-Increment Operator)\nThis tutorial will discuss hacking pre-increment operator.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 106: ARM-32 Course 2 (Part 41 â€“ Post-Increment Operator)\nThis tutorial will discuss the post-increment operator.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 107: ARM-32 Course 2 (Part 42 â€“ Debugging Post-Increment Operator)\nThis tutorial will discuss debugging post-increment operator.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 108: ARM-32 Course 2 (Part 43 â€“ Hacking Post-Increment Operator)\nThis tutorial will discuss hacking post-increment operator.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 109: ARM-32 Course 2 (Part 44 â€“ Pre-Decrement Operator)\nThis tutorial will discuss the pre-decrement operator.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 110: ARM-32 Course 2 (Part 45 â€“ Debugging Pre-Decrement Operator)\nThis tutorial will discuss debugging pre-decrement operator.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 111: ARM-32 Course 2 (Part 46 â€“ Hacking Pre-Decrement Operator)\nThis tutorial will discuss hacking pre-decrement operator.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 112: ARM-32 Course 2 (Part 47 â€“ Post-Decrement Operator)\nThis tutorial will discuss post-decrement operator.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 113: ARM-32 Course 2 (Part 48 â€“ Debugging Post-Decrement Operator)\nThis tutorial will discuss debugging post-decrement operator.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 114: ARM-32 Course 2 (Part 49 â€“ Hacking Post-Decrement Operator)\nThis tutorial will discuss hacking post-decrement operator.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n<br>\n\n## ARM-32 Project Course\n\n## Lesson 115: ARM-32 Project (Part 1 â€“ Hacking Hello World)\nARM 32-bit Raspberry Pi Hacking Hello World example in Kali Linux.\n\n-> Click [HERE](https://github.com/mytechnotalent/0x01-ARM-32-Hacking-Hello-World) to read the project on GitHub.\n\n## Lesson 116: ARM-32 Project (Part 2 â€“ Hacking Int)\nARM 32-bit Raspberry Pi Hacking Int example in Kali Linux.\n\n-> Click [HERE](https://github.com/mytechnotalent/0x02-ARM-32-Hacking-Int) to read the project on GitHub.\n\n## Lesson 117: ARM-32 Project (Part 3 â€“ Hacking Float)\nARM 32-bit Raspberry Pi Hacking Float example in Kali Linux.\n\n-> Click [HERE](https://github.com/mytechnotalent/0x03-ARM-32-Hacking-Float) to read the project on GitHub.\n\n## Lesson 118: ARM-32 Project (Part 4 â€“ Hacking Double)\nARM 32-bit Raspberry Pi Hacking Double example in Kali Linux.\n\n-> Click [HERE](https://github.com/mytechnotalent/0x04-ARM-32-Hacking-Double) to read the project on GitHub.\n\n## Lesson 119: ARM-32 Project (Part 5 â€“ Hacking Char)\nARM 32-bit Raspberry Pi Hacking Char example in Kali Linux.\n\n-> Click [HERE](https://github.com/mytechnotalent/0x05-ARM-32-Hacking_Char) to read the project on GitHub.\n\n## Lesson 120: ARM-32 Project (Part 6 â€“ Hacking Char Pointer)\nARM 32-bit Raspberry Pi Char Pointer example in Kali Linux.\n\n-> Click [HERE](https://github.com/mytechnotalent/0x06-ARM-32-Hacking-Char-Pointer) to read the project on GitHub.\n\n<br>\n\n## x64 Course\n\n## Lesson 121: x64 Course (Part 1 â€“ The Cyber Revolution)\nThis tutorial will discuss the cyber revolution.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 122: x64 Course (Part 2 - Transistors)\nThis tutorial will discuss transistors.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 123: x64 Course (Part 3 - Logic Gates)\nThis tutorial will discuss logic gates.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 124: x64 Course (Part 4 - Number Systems)\nThis tutorial will discuss number systems.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 125: x64 Course (Part 5 - Binary Addition)\nThis tutorial will discuss binary addition.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 126: x64 Course (Part 6 - Binary Subtraction)\nThis tutorial will discuss binary subtraction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 127: x64 Course (Part 7 - Word Lengths)\nThis tutorial will discuss word lengths.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 128: x64 Course (Part 8 - General Architecture)\nThis tutorial will discuss the general architecture.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 129: x64 Course (Part 9 - Calling Conventions)\nThis tutorial will discuss calling conventions.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 130: x64 Course (Part 10 - Boolean Instructions)\nThis tutorial will discuss boolean instructions.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 131: x64 Course (Part 11 - Pointers)\nThis tutorial will discuss pointers.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 132: x64 Course (Part 12 - Load Effective Address)\nThis tutorial will discuss load effective address.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 133: x64 Course (Part 13 - The Data Segment)\nThis tutorial will discuss the data segment.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 134: x64 Course (Part 14 - SHL Instruction)\nThis tutorial will discuss the shl instruction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 135: x64 Course (Part 15 - SHR Instruction)\nThis tutorial will discuss the shr instruction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 136: x64 Course (Part 16 - ROL Instruction)\nThis tutorial will discuss rol instruction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 137: x64 Course (Part 17 - ROR Instruction)\nThis tutorial will discuss the ror instruction.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 138: x64 Course (Part 18 - Boot Sector Basics [Part 1])\nThis tutorial will discuss boot sector basics.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 139: x64 Course (Part 19 - Boot Sector Basics [Part 2])\nThis tutorial will discuss more boot sector basics.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 140: x64 Course (Part 20 - Boot Sector Basics [Part 3])\nThis tutorial will discuss more boot sector basics.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 141: x64 Course (Part 21 - Boot Sector Basics [Part 4])\nThis tutorial will discuss more boot sector basics.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 142: x64 Course (Part 22 - Boot Sector Basics [Part 5])\nThis tutorial will discuss more boot sector basics.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 143: x64 Course (Part 23 - Boot Sector Basics [Part 6])\nThis tutorial will discuss more boot sector basics.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 144: x64 Course (Part 24 - Boot Sector Basics [Part 7])\nThis tutorial will discuss more boot sector basics.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 145: x64 Course (Part 25 - Boot Sector Basics [Part 8])\nThis tutorial will discuss more boot sector basics.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 146: x64 Course (Part 26 - Boot Sector Basics [Part 9])\nThis tutorial will discuss more boot sector basics.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 147: x64 Course (Part 27 - x64 Assembly [Part 1])\nThis tutorial will discuss x64 assembly.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 148: x64 Course (Part 28 - x64 Assembly [Part 2])\nThis tutorial will discuss more x64 assembly.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 149: x64 Course (Part 29 - x64 Assembly [Part 3])\nThis tutorial will discuss more x64 assembly.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 150: x64 Course (Part 30 - x64 Assembly [Part 4])\nThis tutorial will discuss more x64 assembly.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 151: x64 Course (Part 31 - x64 Assembly [Part 5])\nThis tutorial will discuss more x64 assembly.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 152: x64 Course (Part 32 - x64 Assembly [Part 6])\nThis tutorial will discuss more x64 assembly.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 153: x64 Course (Part 33 - x64 Assembly [Part 7])\nThis tutorial will discuss more x64 assembly.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 154: x64 Course (Part 34 - x64 C++ 1 Code [Part 1])\nThis tutorial will discuss C++ code as it relates to 64-bit assembly.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 155: x64 Course (Part 35 - x64 C++ 2 Debug [Part 2])\nThis tutorial will discuss more C++ code as it relates to 64-bit assembly.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 156: x64 Course (Part 36 - x64 C++ 3 Hacking [Part 3])\nThis tutorial will discuss more C++ code as it relates to 64-bit assembly.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 157: x64 Course (Part 37 - x64 C & Genesis Of Life)\nThis tutorial will discuss c and how it relates to x64 assembly.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 158: x64 Course (Part 38 - x64 Networking Basics)\nThis tutorial will discuss x64 networking basics.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 159: x64 Course (Part 39 - Why C?)\nThis tutorial will discuss the power of the c language.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 160: x64 Course (Part 40 - Hacking Hello World!)\nThis tutorial will discuss hacking hello world.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 161: x64 Course (Part 41 - Hacking Variables!)\nThis tutorial will discuss hacking variables.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 162: x64 Course (Part 42 - Hacking Branches!)\nThis tutorial will discuss hacking branches.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 163: x64 Course (Part 43 - Hacking Pointers!)\nThis tutorial will discuss hacking pointers.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n<br>\n\n## ARM-64 Course\n\n## Lesson 164: ARM-64 Course (Part 1 - The Meaning Of Life)\nIn this lesson we will discuss the course concepts and the meaning of life.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 165: ARM-64 Course (Part 2 - Development Setup)\nIn this lesson we will discuss how to set up our development in 64-bit ARM with Kali Linux.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 166: ARM-64 Course (Part 3 - \"Hello World\")\nIn this lesson we will discuss how to write and compile a simple hello world program in C++.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 167: ARM-64 Course (Part 4 - Debugging \"Hello World\")\nIn this lesson we will debug our simple hello world program.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 168: ARM-64 Course (Part 5 - Hacking \"Hello World\")\nIn this lesson we will hack our simple hello world program.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 169: ARM-64 Course (Part 6 - Basic I/O)\nIn this lesson we will discuss how to write and compile a simple basicio program in C++ and discuss basic input validation.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 170: ARM-64 Course (Part 7 - Debugging Basic I/O)\nIn this lesson we will discuss how to debug a simple basicio program in C++ and discuss basic input validation.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 171: ARM-64 Course (Part 8 - Hacking Basic I/O)\nIn this lesson we will discuss how to hack a simple basicio program in C++ and discuss basic input validation.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 172: ARM-64 Course (Part 9 - Character Primitive Datatype)\nIn this lesson we will discuss the char primitive datatype.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 173: ARM-64 Course (Part 10 - Debugging Character Primitive Datatype)\nIn this lesson we will discuss debugging the char primitive datatype.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 174: ARM-64 Course (Part 11 - Hacking Character Primitive Datatype)\nIn this lesson we will discuss hacking the char primitive datatype.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 175: ARM-64 Course (Part 12 - Boolean Primitive Datatype)\nIn this lesson we will discuss the boolean primitive datatype.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 176: ARM-64 Course (Part 13 - Debugging Boolean Primitive Datatype)\nIn this lesson we will discuss debugging the boolean primitive datatype.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 177: ARM-64 Course (Part 14 - Hacking Boolean Primitive Datatype)\nIn this lesson we will discuss hacking the boolean primitive datatype.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 178: ARM-64 Course (Part 15 - Float Primitive Datatype)\nIn this lesson we will discuss the float primitive datatype.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 179: ARM-64 Course (Part 16 - Debugging Float Primitive Datatype)\nIn this lesson we will discuss debugging the float primitive datatype.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 180: ARM-64 Course (Part 17 - Hacking Float Primitive Datatype)\nIn this lesson we will discuss hacking the float primitive datatype.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 181: ARM-64 Course (Part 18 - Double Primitive Datatype)\nIn this lesson we will discuss the double primitive datatype.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 182: ARM-64 Course (Part 19 - Debugging Double Primitive Datatype)\nIn this lesson we will discuss debugging the double primitive datatype.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 183: ARM-64 Course (Part 20 - Hacking Double Primitive Datatype)\nIn this lesson we will discuss hacking the double primitive datatype.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n<br>\n\n## Pico Hacking Course\n\n## Lesson 184: Pico Hacking Course (Part 1 - The Why, The How...)\nIn this lesson we will discuss the basic setup of the development environment for the Raspberry Pi Pico.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n \n## Lesson 185: Pico Hacking Course (Part 2 - Hello World)\nIn this lesson we will discuss the basic Hello World program.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n \n## Lesson 186: Pico Hacking Course (Part 3 - Debugging Hello World)\nIn this lesson we will discuss debugging the basic Hello World program.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 187: Pico Hacking Course (Part 4 - Hacking Hello World)\nIn this lesson we will discuss hacking the basic Hello World program.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 188: Pico Hacking Course (Part 5 - char)\nIn this lesson we will discuss the char data type.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 189: Pico Hacking Course (Part 6 - Debugging char)\nIn this lesson we will discuss debugging the char data type.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 190: Pico Hacking Course (Part 7 - Hacking char)\nIn this lesson we will discuss hacking the char data type.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 191: Pico Hacking Course (Part 8 - int)\nIn this lesson we will discuss the int data type.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 192: Pico Hacking Course (Part 9 - Debugging int)\nIn this lesson we will discuss debugging the int data type.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 193: Pico Hacking Course (Part 10 - Hacking int)\nIn this lesson we will discuss hacking the int data type.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 194: Pico Hacking Course (Part 11 - float)\nIn this lesson we will discuss the float data type.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 195: Pico Hacking Course (Part 12 - Debugging float)\nIn this lesson we will discuss debugging the float data type.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 196: Pico Hacking Course (Part 13 - Hacking float)\nIn this lesson we will discuss hacking the float data type.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 197: Pico Hacking Course (Part 14 - double)\nIn this lesson we will discuss the double data type.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 198: Pico Hacking Course (Part 15 - Debugging double)\nIn this lesson we will discuss debugging the double data type.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 199: Pico Hacking Course (Part 16 - Hacking double)\nIn this lesson we will discuss hacking the double data type.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 200: Pico Hacking Course (Part 17 - \"ABSOLUTE POWER CORRUPTS ABSOLUTELY!\", The Tragic Tale Of Input...)\nIn this lesson we will discuss the concept of proper input handling.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 201: Pico Hacking Course (Part 18 - \"FOR 800 YEARS HAVE I TRAINED JEDI!\", The FORCE That IS Input...)\nIn this lesson we will discuss the importance of proper input handling in addition to breaking down our custom input function.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 202: Pico Hacking Course (Part 19 - Input)\nIn this lesson we will discuss creating an effective input architecture.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n## Lesson 203: Pico Hacking Course (Part 20 - Debugging Input)\nIn this lesson we will discuss debugging input.\n\n-> Click [HERE](https://0xinfection.github.io/reversing) to read the FREE ebook.\n\n<br>\n\n## Hacking Windows Course\n\n## Hacking Windows Course (Chapter 1 - Hello World)\nThis chapter covers the basics of designing a very simple Windows Assembly Language message box program in pure Assembly for both x86 and x64 architectures.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 2: Debugging Hello World x86)\nThis chapter covers the dynamic reverse engineering analysis, debugging, of the Hello World app in x86 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 3: Hacking Hello World x86)\nThis chapter covers the dynamic reverse engineering analysis, hacking, of the Hello World app in x86 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 4: Debugging Hello World x64)\nThis chapter covers the dynamic reverse engineering analysis, debugging, of the Hello World app in x64 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 5: Hacking Hello World x64)\nThis chapter covers the dynamic reverse engineering analysis, hacking, of the Hello World app in x64 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 6: Directories)\nThis chapter covers reviewing the Windows API CreateDirectoryW and RemoveDirectoryW functions in C.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 7: Debugging Directories x86)\nThis chapter covers dynamic reverse engineering analysis, debugging, the Windows API CreateDirectoryW and RemoveDirectoryW functions in x86 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 8: Hacking Directories x86)\nThis chapter covers dynamic reverse engineering analysis, hacking, the Windows API CreateDirectoryW and RemoveDirectoryW functions in x86 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 9: Debugging Directories x64)\nThis chapter covers dynamic reverse engineering analysis, debugging, the Windows API CreateDirectoryW and RemoveDirectoryW functions in x64 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 10: Hacking Directories x64)\nThis chapter covers dynamic reverse engineering analysis, hacking, the Windows API CreateDirectoryW and RemoveDirectoryW functions in x64 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 11: CopyFile)\nThis chapter covers reviewing the Windows API CopyFileW function in C.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 12: Debugging CopyFile x86)\nThis chapter covers dynamic reverse engineering analysis, debugging, the Windows API CopyFileW function in x86 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 13: Hacking CopyFile x86)\nThis chapter covers dynamic reverse engineering analysis, hacking, the Windows API CopyFileW function in x86 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 14: Debugging CopyFile x64)\nThis chapter covers dynamic reverse engineering analysis, debugging, the Windows API CopyFileW function in x64 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 15: Hacking CopyFile x86)\nThis chapter covers dynamic reverse engineering analysis, hacking, the Windows API CopyFileW function in x64 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 16: MoveFile)\nThis chapter covers reviewing the Windows API MoveFileW function in C.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 17: Debugging MoveFile x86)\nThis chapter covers dynamic reverse engineering analysis, debugging, the Windows API MoveFileW function in x86 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 18: Hacking MoveFile x86)\nThis chapter covers dynamic reverse engineering analysis, hacking, the Windows API MoveFileW function in x86 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 19: Debugging MoveFile x64)\nThis chapter covers dynamic reverse engineering analysis, debugging, the Windows API MoveFileW function in x64 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 20: Hacking MoveFile x64)\nThis chapter covers dynamic reverse engineering analysis, hacking, the Windows API MoveFileW function in x64 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 21: CreateFile)\nThis chapter covers reviewing the Windows API CreateFileW function in C.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 22: Debugging CreateFile x86)\nThis chapter covers dynamic reverse engineering analysis, debugging, the Windows API CreateFileW function in x86 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 23: Hacking CreateFile x86)\nThis chapter covers dynamic reverse engineering analysis, hacking, the Windows API CreateFileW function in x86 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 24: Debugging CreateFile x64)\nThis chapter covers dynamic reverse engineering analysis, hacking, the Windows API CreateFileW function in x64 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 25: Hacking CreateFile x64)\nThis chapter covers dynamic reverse engineering analysis, hacking, the Windows API CreateFileW function in x64 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n##  Hacking Windows Course (Chapter 26: WriteFile)\nThis chapter covers reviewing the Windows API WriteFile function in C.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 27: Debugging WriteFile x86)\nThis chapter covers dynamic reverse engineering analysis, debugging, the Windows API WriteFile function in x86 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 28: Hacking WriteFile x86)\nThis chapter covers dynamic reverse engineering analysis, hacking, the Windows API WriteFile function in x86 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 29: Debugging WriteFile x64)\nThis chapter covers dynamic reverse engineering analysis, debugging, the Windows API WriteFile function in x64 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n## Hacking Windows Course (Chapter 30: Hacking WriteFile x64)\nThis chapter covers dynamic reverse engineering analysis, hacking, the Windows API WriteFile function in x64 Assembly.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Windows/blob/main/Hacking_Windows.pdf) to read the FREE pdf book.\n\n<br>\n\n## Go Hacking Course\n\n## Go Hacking Course (Chapter 1: Hello Distributed System World)\nThis chapter covers the basics of setting up a dev environment and basic hello world style Go program for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Go-Hacking/blob/main/Go%20Hacking.pdf) to read the FREE pdf book.\n\n## Go Hacking Course (Chapter 2: Debugging Hello Distributed System World)\nThis chapter covers debugging of the basic hello world style Go program for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Go-Hacking/blob/main/Go%20Hacking.pdf) to read the FREE pdf book.\n\n## Go Hacking Course (Chapter 3: Hacking Hello Distributed System World)\nThis chapter covers hacking of the basic hello world style Go program for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Go-Hacking/blob/main/Go%20Hacking.pdf) to read the FREE pdf book.\n\n## Go Hacking Course (Chapter 4: Primitive Types)\nThis chapter covers Golang primitive types for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Go-Hacking/blob/main/Go%20Hacking.pdf) to read the FREE pdf book.\n\n## Go Hacking Course (Chapter 5: Debugging Primitive Types)\nThis chapter covers Golang debugging of the primitive types for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Go-Hacking/blob/main/Go%20Hacking.pdf) to read the FREE pdf book.\n\n## Go Hacking Course (Chapter 6: Hacking Primitive Types)\nThis chapter covers Golang hacking of the primitive types for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Go-Hacking/blob/main/Go%20Hacking.pdf) to read the FREE pdf book.\n\n## Go Hacking Course (Chapter 7: Control Flow)\nThis chapter covers Golang control flow for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Go-Hacking/blob/main/Go%20Hacking.pdf) to read the FREE pdf book.\n\n## Go Hacking Course (Chapter 8: Debugging Control Flow)\nThis chapter covers Golang debugging control flow for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Go-Hacking/blob/main/Go%20Hacking.pdf) to read the FREE pdf book.\n\n## Go Hacking Course (Chapter 9: Hacking Control Flow)\nThis chapter covers Golang hacking control flow for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Go-Hacking/blob/main/Go%20Hacking.pdf) to read the FREE pdf book.\n\n## Go Hacking Course (Chapter 10: Advanced Control Flow)\nThis chapter covers Golang advanced control flow for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Go-Hacking/blob/main/Go%20Hacking.pdf) to read the FREE pdf book.\n\n## Go Hacking Course (Chapter 11: Debugging Advanced Control Flow)\nThis chapter covers Golang debugging advanced control flow for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Go-Hacking/blob/main/Go%20Hacking.pdf) to read the FREE pdf book.\n\n## Go Hacking Course (Chapter 12: Hacking Advanced Control Flow)\nThis chapter covers Golang hacking advanced control flow for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Go-Hacking/blob/main/Go%20Hacking.pdf) to read the FREE pdf book.\n\n<br>\n\n## Hacking Rust Course\n\n## Hacking Rust Course (Chapter 1: Hello Rust)\nThis chapter covers the basics of setting up a dev environment and basic hello world style Rust program for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Rust/blob/main/Hacking%20Rust.pdf) to read the FREE pdf book.\n\n## Hacking Rust Course (Chapter 2: Debugging Hello Rust)\nThis chapter covers debugging the basic hello world style Rust program for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Rust/blob/main/Hacking%20Rust.pdf) to read the FREE pdf book.\n\n## Hacking Rust Course (Chapter 3: Hacking Hello Rust)\nThis chapter covers hacking the basic hello world style Rust program for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Rust/blob/main/Hacking%20Rust.pdf) to read the FREE pdf book.\n\n## Hacking Rust Course (Chapter 4: Scalar Data Types)\nThis chapter covers scalar data types within a Rust program for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Rust/blob/main/Hacking%20Rust.pdf) to read the FREE pdf book.\n\n## Hacking Rust Course (Chapter 5: Debugging Scalar Data Types)\nThis chapter covers debugging scalar data types within a Rust program for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Rust/blob/main/Hacking%20Rust.pdf) to read the FREE pdf book.\n\n## Hacking Rust Course (Chapter 6: Hacking Scalar Data Types)\nThis chapter covers hacking scalar data types within a Rust program for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Rust/blob/main/Hacking%20Rust.pdf) to read the FREE pdf book.\n\n## Hacking Rust Course (Chapter 7: Compound Data Types)\nThis chapter covers compound data types within a Rust program for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Rust/blob/main/Hacking%20Rust.pdf) to read the FREE pdf book.\n\n## Hacking Rust Course (Chapter 8: Debugging Compound Data Types)\nThis chapter covers debugging compound data types within a Rust program for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Rust/blob/main/Hacking%20Rust.pdf) to read the FREE pdf book.\n\n## Hacking Rust Course (Chapter 9: Hacking Compound Data Types)\nThis chapter covers hacking compound data types within a Rust program for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Rust/blob/main/Hacking%20Rust.pdf) to read the FREE pdf book.\n\n## Hacking Rust Course (Chapter 10: Functions)\nThis chapter covers functions within a Rust program for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Rust/blob/main/Hacking%20Rust.pdf) to read the FREE pdf book.\n\n## Hacking Rust Course (Chapter 11: Debugging Functions)\nThis chapter covers debugging functions within a Rust program for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Rust/blob/main/Hacking%20Rust.pdf) to read the FREE pdf book.\n\n## Hacking Rust Course (Chapter 12: Hacking Functions)\nThis chapter covers hacking functions within a Rust program for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Rust/blob/main/Hacking%20Rust.pdf) to read the FREE pdf book.\n\n## Hacking Rust Course (Chapter 13: Control Flow)\nThis chapter covers control flow within a Rust program for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Rust/blob/main/Hacking%20Rust.pdf) to read the FREE pdf book.\n\n## Hacking Rust Course (Chapter 14: Debugging Control Flow)\nThis chapter covers debugging control flow within a Rust program for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Rust/blob/main/Hacking%20Rust.pdf) to read the FREE pdf book.\n\n## Hacking Rust Course (Chapter 15: Hacking Control Flow)\nThis chapter covers hacking control flow within a Rust program for the x64 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Rust/blob/main/Hacking%20Rust.pdf) to read the FREE pdf book.\n\n<br>\n\n## Hacking Embedded Rust Course\n\n## Hacking Embedded Rust Course (Chapter 1: Wiring)\nThis chapter covers the basics of setting up wiring for an embedded Rust Pico.\n\n-> Click [HERE](https://github.com/mytechnotalent/rust_embassy_pico_project/blob/main/Hacking_Embedded_Rust.pdf) to read the FREE pdf book.\n\n## Hacking Embedded Rust Course (Chapter 2: Features)\nThis chapter covers the features of Reverse Engineering Rust Pico.\n\n-> Click [HERE](https://github.com/mytechnotalent/rust_embassy_pico_project/blob/main/Hacking_Embedded_Rust.pdf) to read the FREE pdf book.\n\n## Hacking Embedded Rust Course (Chapter 3: Project Structure)\nThis chapter covers the project structure of Reverse Engineering Rust Pico.\n\n-> Click [HERE](https://github.com/mytechnotalent/rust_embassy_pico_project/blob/main/Hacking_Embedded_Rust.pdf) to read the FREE pdf book.\n\n## Hacking Embedded Rust Course (Chapter 4: How It Works (Step-By-Step))\nThis chapter covers the project step-by-step of Reverse Engineering Rust Pico.\n\n-> Click [HERE](https://github.com/mytechnotalent/rust_embassy_pico_project/blob/main/Hacking_Embedded_Rust.pdf) to read the FREE pdf book.\n\n## Hacking Embedded Rust Course (Chapter 5: Embassy Executor Enqueue/Dequeue In Detail\nThis chapter covers the project step-by-step enqueue/dequeue of Reverse Engineering Rust Pico.\n\n-> Click [HERE](https://github.com/mytechnotalent/rust_embassy_pico_project/blob/main/Hacking_Embedded_Rust.pdf) to read the FREE pdf book.\n\n## Hacking Embedded Rust Course (Chapter 6: Building and Flashing)\nThis chapter covers the project step-by-step of building and flashing Reverse Engineering Rust Pico.\n\n-> Click [HERE](https://github.com/mytechnotalent/rust_embassy_pico_project/blob/main/Hacking_Embedded_Rust.pdf) to read the FREE pdf book.\n\n<br>\n\n## Hacking Embedded Rust Course w/ microbit\n\n## Hacking Embedded Rust Course w/ microbit (Chapter 1: Foundation Analysis and Binary Structure)\nThis chapter covers the foundation analysis and binary structure for an embedded Rust microbit.\n\n-> Click [HERE](https://github.com/mytechnotalent/rust_embassy_microbit_project/blob/main/Hacking_Embedded_Rust_w_microbit.pdf) to read the FREE pdf book.\n\n## Hacking Embedded Rust Course w/ microbit (Chapter 2: Embassy Async Runtime Deep Dive)\nThis chapter covers the Embassy async runtime for an embedded Rust microbit.\n\n-> Click [HERE](https://github.com/mytechnotalent/rust_embassy_microbit_project/blob/main/Hacking_Embedded_Rust_w_microbit.pdf) to read the FREE pdf book.\n\n## Hacking Embedded Rust Course w/ microbit (Chapter 3: Interrupt Handlers and Hardware Abstraction)\nThis chapter covers the interrupt handlers and hardware abstraction for an embedded Rust microbit.\n\n-> Click [HERE](https://github.com/mytechnotalent/rust_embassy_microbit_project/blob/main/Hacking_Embedded_Rust_w_microbit.pdf) to read the FREE pdf book.\n\n## Hacking Embedded Rust Course w/ microbit (Chapter 4: Advanced System Components)\nThis chapter covers the advanced system components for an embedded Rust microbit.\n\n-> Click [HERE](https://github.com/mytechnotalent/rust_embassy_microbit_project/blob/main/Hacking_Embedded_Rust_w_microbit.pdf) to read the FREE pdf book.\n\n## Hacking Embedded Rust Course w/ microbit (Chapter 5: Exploitation and Security Assessment)\nThis chapter covers the exploitation and security assessment for an embedded Rust microbit.\n\n-> Click [HERE](https://github.com/mytechnotalent/rust_embassy_microbit_project/blob/main/Hacking_Embedded_Rust_w_microbit.pdf) to read the FREE pdf book.\n\n<br>\n\n## Embedded Assembler Course\n\n## Embedded Assembler Course (Chapter 1: Toolchain)\nThis chapter covers the basics of setting up a dev environment and basic template firmware for the STM32F401CCU6 MCU.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Assembler/blob/main/Embedded-Assembler.pdf) to read the FREE pdf book.\n\n## Embedded Assembler Course (Chapter 2: Architecture Basics)\nThis chapter covers the basics of the STM32F401CCU6 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Assembler/blob/main/Embedded-Assembler.pdf) to read the FREE pdf book.\n\n## Embedded Assembler Course (Chapter 3: Vector Table)\nThis chapter covers the concept and development of the vector table within the STM32F401CCU6 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Assembler/blob/main/Embedded-Assembler.pdf) to read the FREE pdf book.\n\n## Embedded Assembler Course (Chapter 4: Linker Script)\nThis chapter covers the linker script concept and development within the STM32F401CCU6 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Assembler/blob/main/Embedded-Assembler.pdf) to read the FREE pdf book.\n\n## Embedded Assembler Course (Chapter 5: ELF File Analysis)\nThis chapter covers ELF file analysis and tools within the STM32F401CCU6 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Assembler/blob/main/Embedded-Assembler.pdf) to read the FREE pdf book.\n\n## Embedded Assembler Course (Chapter 6: ARM Cortex-M Registers)\nThis chapter covers the ARM Cortex-M registers within the STM32F401CCU6 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Assembler/blob/main/Embedded-Assembler.pdf) to read the FREE pdf book.\n\n## Embedded Assembler Course (Chapter 7: ARM Thumb2 Instruction Set)\nThis chapter covers the ARM Thumb2 instruction set within the STM32F401CCU6 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Assembler/blob/main/Embedded-Assembler.pdf) to read the FREE pdf book.\n\n## Embedded Assembler Course (Chapter 8: Load & Store Instructions)\nThis chapter covers the basic load & store instructions in addition to real-time hacking within the STM32F401CCU6 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Assembler/blob/main/Embedded-Assembler.pdf) to read the FREE pdf book.\n\n## Embedded Assembler Course (Chapter 9: Constants & Literal Values)\nThis chapter covers the basic constants & literal value examples within the STM32F401CCU6 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Assembler/blob/main/Embedded-Assembler.pdf) to read the FREE pdf book.\n\n## Embedded Assembler Course (Chapter 10: Conditional Execution)\nThis chapter covers the basic conditional execution within the STM32F401CCU6 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Assembler/blob/main/Embedded-Assembler.pdf) to read the FREE pdf book.\n\n## Embedded Assembler Course (Chapter 11: Functions, Interrupts, UART & STUXNET Simulation!)\nThis chapter covers functions, interrupts, UART and a simple STUXNET simulation within the STM32F401CCU6 architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Assembler/blob/main/Embedded-Assembler.pdf) to read the FREE pdf book.\n\n<br>\n\n## Embedded Hacking Course\n\n## Embedded Hacking Course (Chapter 1: hello, world)\nThis chapter covers the basics of setting up a dev environment and basic template firmware for the Pico 2 MCU in addition to printing hello, world.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 2: Debugging hello, world)\nThis chapter covers the debugging of our firmware for the Pico 2 MCU hello, world program.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 3: Hacking hello, world)\nThis chapter covers the hacking of our firmware for the Pico 2 MCU hello, world program.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 4: Embedded System Analysis)\nThis chapter covers a comprehensive embedded system analysis reviewing parts of the RP2350 datasheet and helpful firmware analysis tools.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 5: Intro To Variables)\nThis chapter covers an introduction to variables as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 6: Debugging Intro To Variables)\nThis chapter covers debugging an introduction to variables as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 7: Hacking Intro To Variables)\nThis chapter covers hacking an introduction to variables as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 8: Uninitialized Variables)\nThis chapter covers uninitialized variables as well as an intro to GPIO outputs as we blink an LED as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 9: Debugging Uninitialized Variables)\nThis chapter covers debugging uninitialized variables as well as an intro to GPIO outputs as we blink an LED as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 10: Hacking Uninitialized Variables)\nThis chapter covers hacking uninitialized variables as well as an intro to GPIO outputs as we blink an LED as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 11: Integer Data Type)\nThis chapter covers the integer data type in addition to a deeper assembler dive into GPIO outputs as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 12: Debugging Integer Data Type)\nThis chapter covers debugging the integer data type in addition to a deeper assembler dive into GPIO outputs as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 13: Hacking Integer Data Type)\nThis chapter covers hacking the integer data type in addition to a deeper assembler dive into GPIO outputs as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 14: Floating-Point Data Type)\nThis chapter covers the floating-point data type as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 15: Debugging Floating-Point Data Type)\nThis chapter covers debugging the floating-point data type as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 16: Hacking Floating-Point Data Type)\nThis chapter covers hacking the floating-point data type as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 17: Double Floating-Point Data Type)\nThis chapter covers the double floating-point data type as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 18: Debugging Double Floating-Point Data Type)\nThis chapter covers debugging the double floating-point data type as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 19: Hacking Double Floating-Point Data Type)\nThis chapter covers hacking the double floating-point data type as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 20: Static Variables)\nThis chapter covers static variables as well as an intro to GPIO inputs as we work with push buttons as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (hapter 21: Debugging Static Variables)\nThis chapter covers debugging static variables as well as an intro to GPIO inputs as we work with push buttons as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 22: Hacking Static Variables)\nThis chapter covers hacking static variables as well as an intro to GPIO inputs as we work with push buttons as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 23: Constants)\nThis chapter covers constants as well as an intro to I2C as we work a 1602 LCD as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 24: Debugging Constants)\nThis chapter covers debugging constants as well as an intro to I2C as we work a 1602 LCD as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 25: Hacking Constants)\nThis chapter covers hacking constants as well as an intro to I2C as we work a 1602 LCD as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 26: Operators)\nThis chapter covers operators as well as an intro to single-wire protocol as we work a DHT11 temperature sensor as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 27: Debugging Operators)\nThis chapter covers debugging operators as well as an intro to single-wire protocol as we work a DHT11 temperature sensor as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 28: Hacking Operators)\nThis chapter covers hacking operators as well as an intro to single-wire protocol as we work a DHT11 temperature sensor as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 29: Static Conditionals)\nThis chapter covers static conditionals as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 30: Debugging Static Conditionals)\nThis chapter covers debugging static conditionals as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 31: Hacking Static Conditionals)\nThis chapter covers hacking static conditionals as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 32: Dynamic Conditionals)\nThis chapter covers dynamic conditionals as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 33: Debugging Dynamic Conditionals)\nThis chapter covers debugging dynamic conditionals as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 34: Hacking Dynamic Conditionals)\nThis chapter covers hacking dynamic conditionals as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 35: Functions, w/o Param, w/o Return)\nThis chapter covers functions, w/o params and w/o a return value as well as an intro to infrared basics as we work a infrared receiver and infrared remote controller as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 36: Debugging Functions, w/o Param, w/o Return)\nThis chapter covers debugging functions, w/o params and w/o a return value as well as an intro to infrared basics as we work a infrared receiver and infrared remote controller as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 37: Hacking Functions, w/o Param, w/o Return)\nThis chapter covers hacking functions, w/o params and w/o a return value as well as an intro to infrared basics as we work a infrared receiver and infrared remote controller as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 38: Functions, w/ Param, w/ Return)\nThis chapter covers functions, w/ params and w/ a return value as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 39: Debugging Functions, w/ Param, w/ Return)\nThis chapter covers debugging functions, w/ params and w/ a return value as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n## Embedded Hacking Course (Chapter 40: Hacking Functions, w/ Param, w/ Return)\nThis chapter covers hacking functions, w/ params and w/ a return value as it relates to embedded development on the Pico 2.\n\n-> Click [HERE](https://github.com/mytechnotalent/Embedded-Hacking/blob/main/Embedded-Hacking.pdf) to read the FREE pdf book.\n\n<br>\n\n## Hacking Bits Course\n\n## Hacking Bits Course (Chapter 1: Ohm's Law - The Foundation of Electronics)\nThis chapter covers the basics Ohm's Law and basic electronics.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Bits/blob/main/hacking-bits.pdf) to read the FREE pdf book.\n\n## Hacking Bits Course (Chapter 2: The Binary Number System)\nThis chapter covers the basics of the binary number system.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Bits/blob/main/hacking-bits.pdf) to read the FREE pdf book.\n\n## Hacking Bits Course (Chapter 3: The Hexadecimal Number System)\nThis chapter covers the basics of the hexadecimal number system.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Bits/blob/main/hacking-bits.pdf) to read the FREE pdf book.\n\n## Hacking Bits Course (Chapter 4: The ATmega328P Architecture)\nThis chapter covers the basics of the ATmega328P Architecture.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Bits/blob/main/hacking-bits.pdf) to read the FREE pdf book.\n\n## Hacking Bits Course (Chapter 5: Tools)\nThis chapter covers the basics of setting up a toolchain and development environment.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Bits/blob/main/hacking-bits.pdf) to read the FREE pdf book.\n\n## Hacking Bits Course (Chapter 6: ATmega328P Datasheet)\nThis chapter covers the basics of the ATmega328P datasheet.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Bits/blob/main/hacking-bits.pdf) to read the FREE pdf book.\n\n## Hacking Bits Course (Chapter 7: Blink Driver in C)\nThis chapter covers the development and reverse engineering of a blink driver in AVR C.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Bits/blob/main/hacking-bits.pdf) to read the FREE pdf book.\n\n## Hacking Bits Course (Chapter 8: Blink Driver in Assembler)\nThis chapter covers the development of a blink driver in AVR Assembler.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Bits/blob/main/hacking-bits.pdf) to read the FREE pdf book.\n\n## Hacking Bits Course (Chapter 9: IO Driver in C)\nThis chapter covers the development and reverse engineering of an IO driver in C.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Bits/blob/main/hacking-bits.pdf) to read the FREE pdf book.\n\n## Hacking Bits Course (Chapter 10: STUXNET)\nThis chapter covers the development and reverse engineering of an servo motor in C including a mock STUXNET hack.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-Bits/blob/main/hacking-bits.pdf) to read the FREE pdf book.\n\n<br>\n\n## Hacking RISC-V Course\n\n## Hacking RISC-V Course (Chapter 1: Why RISC-V)\nThis chapter covers the \"why\" of learning RISC-V hacking as we discuss the rise of RISC-V and introduce our ESP32-C3 dev board.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-RISC-V/blob/main/Hacking-RISC-V.pdf) to read the FREE pdf book.\n\n## Hacking RISC-V Course (Chapter 2: Setup Environment)\nThis chapter covers setting up your development environment including everything you need to purchase and download including setup.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-RISC-V/blob/main/Hacking-RISC-V.pdf) to read the FREE pdf book.\n\n## Hacking RISC-V Course (Chapter 3: Hello, World)\nThis chapter covers creating your first project in PlatformIO and creating your first Assembler file to interact with your C environment.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-RISC-V/blob/main/Hacking-RISC-V.pdf) to read the FREE pdf book.\n\n## Hacking RISC-V Course (Chapter 4: Binary Numbers)\nThis chapter covers the basics of binary numbers and their general application for embedded systems.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-RISC-V/blob/main/Hacking-RISC-V.pdf) to read the FREE pdf book.\n\n## Hacking RISC-V Course (Chapter 5: Hexadecimal Numbers)\nThis chapter covers the basics of hexadecimal numbers and their general application for embedded systems.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-RISC-V/blob/main/Hacking-RISC-V.pdf) to read the FREE pdf book.\n\n## Hacking RISC-V Course (Chapter 6: Advanced OPS)\nThis chapter covers the advanced operations using hex and binary in addition to memory manipulation and bit-level operations for the RISC-V ESP32-C3.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-RISC-V/blob/main/Hacking-RISC-V.pdf) to read the FREE pdf book.\n\n## Hacking RISC-V Course (Chapter 7: Registers)\nThis chapter covers the registers for the RISC-V ESP32-C3.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-RISC-V/blob/main/Hacking-RISC-V.pdf) to read the FREE pdf book.\n\n## Hacking RISC-V Course (Chapter 8: ADD)\nThis chapter covers how to add within the RISC-V ESP32-C3.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-RISC-V/blob/main/Hacking-RISC-V.pdf) to read the FREE pdf book.\n\n## Hacking RISC-V Course (Chapter 9: Debugging ADD)\nThis chapter covers how to debug add within the RISC-V ESP32-C3.\n\n-> Click [HERE](https://github.com/mytechnotalent/Hacking-RISC-V/blob/main/Hacking-RISC-V.pdf) to read the FREE pdf book.\n\n<br>\n\n## License\n[Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0)\n", "timestamp": "2025-10-21T22:05:51.090267"}
