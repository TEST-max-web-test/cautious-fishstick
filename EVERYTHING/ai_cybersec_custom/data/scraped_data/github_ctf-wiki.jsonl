{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": ".github/PULL_REQUEST_TEMPLATE.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/.github/PULL_REQUEST_TEMPLATE.md", "content": "Thanks for contributing to CTF Wiki!\n\n**Before submitting this pull request, please read**\n- [Contribute](https://ctf-wiki.org/contribute/before-contributing/)\n- [CTF Wiki's Wiki](https://github.com/ctf-wiki/ctf-wiki/wiki)\n\n**Please remove these message before PR.**\n", "timestamp": "2025-10-24T11:40:07.389894"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "README-zh_CN.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/README-zh_CN.md", "content": "# CTF Wiki\n\n[![Discord](https://dcbadge.vercel.app/api/server/ekv7WDa9pq)](https://discord.gg/ekv7WDa9pq)\n\n[中文](./README-zh_CN.md)  [English](./README.md)\n\n欢迎来到 **CTF Wiki**。\n\n**CTF**（Capture The Flag，夺旗赛）起源于 1996 年 **DEFCON** 全球黑客大会，是网络安全爱好者之间的竞技游戏。\n\n**CTF** 竞赛涉及众多领域，内容繁杂。与此同时，安全技术的发展速度越来越快，**CTF** 题目的难度越来越高，初学者面对的门槛越来越高。而网上资料大都零散琐碎，初学者往往并不知道该如何系统性地学习 **CTF** 相关领域的知识，常需要花费大量时间，苦不堪言。\n\n为了使得热爱 **CTF** 的小伙伴们更好地入门 **CTF**，2016 年 10 月份，**CTF Wiki** 在 Github 有了第一次 commit。随着内容不断完善，**CTF Wiki** 受到了越来越多安全爱好者的喜爱，也渐渐有素未谋面的小伙伴们参与其中。 \n\n作为一个自由的站点，围绕 **CTF** 近几年赛题，**CTF Wiki** 对 **CTF** 中的各个方向的知识进行介绍，以便于初学者更好地学习 **CTF** 相关的知识。\n\n目前，**CTF Wiki** 主要包含 **CTF** 各大方向的基础知识，正在着力完善以下内容\n\n- CTF 竞赛中的进阶知识\n- CTF 竞赛中的优质题目\n\n关于上述部分待完善内容，请参见 CTF Wiki 的 [Projects](https://github.com/ctf-wiki/ctf-wiki/projects)，详细列举了正在做的事情以及待做事项。\n\n虽然 **CTF Wiki** 基于 **CTF**，却不会局限于 **CTF**。在未来，**CTF Wiki** 将会\n\n- 介绍安全研究中的工具\n- 更多地与安全实战结合\n\n此外，鉴于以下两点\n\n- 技术应该以开放的方式分享\n- 安全攻防技术在快速迭代更新，在面对新的防御技术时，旧的攻击技术随时可能失效\n\n因此，**CTF Wiki** 永远不会出版书籍。\n\n最后，**CTF Wiki** 源于社区，作为**独立的组织**，提倡**知识自由**，在未来也绝不会商业化，将始终保持**独立自由**的性质。\n\n## How to build？\n\n本文档目前采用 [mkdocs](https://github.com/mkdocs/mkdocs) 部署在 [https://ctf-wiki.org](https://ctf-wiki.org)。\n\n本项目可以直接部署在本地，具体方式如下：\n\n```shell\n# 1. clone\ngit clone https://github.com/ctf-wiki/ctf-wiki.git\n# 2. requirements\npip install -r requirements.txt\n# generate static file in site/\npython3 scripts/docs.py build-all\n# deploy at http://127.0.0.1:8008\npython3 scripts/docs.py serve\n```\n\n**mkdocs 本地部署的网站是动态更新的，即当你修改并保存 md 文件后，刷新页面就能随之动态更新。**\n\n\n你只是想本地浏览，并不想修改文档？试试 Docker 吧！\n\n```\ndocker run -d --name=ctf-wiki -p 4100:80 ctfwiki/ctf-wiki\n```\n随后即可在浏览器中访问 [http://localhost:4100/](http://localhost:4100/) 阅读 CTF Wiki 。\n\n## How to practice？\n\n首先，通过在线阅读来学习一些基本的安全知识。\n\n其次，CTF Wiki 还有两个姊妹项目\n\n- CTF Wiki 中涉及的题目在 [ctf-challenges](https://github.com/ctf-wiki/ctf-challenges) 仓库中，请根据对应的分类自行寻找。\n- CTF Wiki 中涉及的工具会不断补充到 [ctf-tools](https://github.com/ctf-wiki/ctf-tools) 仓库中。\n\n## How to make CTF Wiki Better？\n\n我们非常欢迎你为 Wiki 编写内容，将自己的所学所得与大家分享。我们期待着你的加入！\n\n**在你决定要贡献内容之前，请你务必看完 [CONTRIBUTING](https://ctf-wiki.org/en/contribute/before-contributing/)**。其中包含了详细的贡献方式。 \n\n非常感谢一起完善 CTF Wiki 的小伙伴们\n\n<a href=\"https://github.com/ctf-wiki/ctf-wiki/graphs/contributors\"><img src=\"https://contrib.rocks/image?repo=ctf-wiki/ctf-wiki\" /></a>\n\n## What can you get?\n\n- 快速学习新事物的能力\n- 不一样的思考方式\n- 乐于解决问题的心\n- 有趣的安全技术\n- 充实奋斗的时光\n\n在阅读 Wiki 之前，我们希望能给予你几点建议：\n\n- 学习 [提问的智慧](https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way)\n- 善用 Google 搜索能帮助你更好地提升自己\n- 至少掌握一门编程语言，比如 Python\n- 动手实践比什么都要管用\n- 保持对技术的好奇与渴望并坚持下去\n\n> 世界很大，互联网让世界变小，真的黑客们应该去思考并创造，无论当下是在破坏还是在创造，记住，未来，那条主线是创造的就对了。 ——by 余弦\n\n安全圈很小，安全的海洋很深。安全之路的探险，不如就从 **CTF Wiki** 开始！\n\n## Copyleft\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"><img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" /></a><br />本作品采用<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。\n\n", "timestamp": "2025-10-24T11:40:09.568938"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "README.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/README.md", "content": "# CTF Wiki\n\n[![Discord](https://dcbadge.vercel.app/api/server/ekv7WDa9pq)](https://discord.gg/ekv7WDa9pq)\n\n[中文](./README-zh_CN.md)  [English](./README.md)\n\nWelcome to **CTF Wiki**！\n\n**CTF** (Capture The Flag) started from **DEFCON CTF**, a competitive game among computer security enthusiasts, originally hosted in 1996.\n\n**CTF** covers a wide range of fields. Along with the evolving security technology, the difficulty of **CTF** challenges is getting harder and harder. As a result, the learning curve for beginners is getting steeper. Most online information is scattered and trivial. Beginners often don't know how to systematically learn **CTF**, which requires a lot of work and effort.\n\nIn order to let those people who are interested in **CTF**s start easily, in October 2016, **CTF Wiki** was established on Github. Along with gradually improved content over time, **CTF Wiki** has received lots of appreciation from security enthusiasts, many of those are guys that we think we would never meet.\n\nAs a freedom site, primarily focusing on recent CTFs, **CTF Wiki** introduces the knowledge and techniques in all aspects of **CTF** to make it easier for beginners to learn **CTF**.\n\nNow, **CTF Wiki** mainly contains the basic skills for **CTF**, but we are working hard to improve the following contents.\n\n- Advanced skills used in CTF\n- Special topics appearing in CTF\n\nFor the above-mentioned parts to be improved, please refer to [Projects](https://github.com/ctf-wiki/ctf-wiki/projects) which details what are planned.\n\nAlthough now **CTF Wiki** mainly focus **CTF**, it is not strictly limited to **CTF** topics. In the future, **CTF Wiki** will include\n\n- Tools used in security research\n- Increased discussion of security in the world\n\nIn addition, given the following two points\n\n- Information about technology should be openly shared.\n- As new techniques are always being developed, old techniques will start to fade over time and they should be replaced with new techniques.\n\nTherefore, **CTF Wiki** will never publish books.\n\nFinally, originating from the community, as an independent organization, **CTF Wiki** advocates **freedom of knowledge**, will **never be commercialized**, and will always maintain the character of **independence and freedom**.\n\n## How to build？\n\nCTF Wiki uses [mkdocs](https://github.com/mkdocs/mkdocs) to show its contents. And it is deployed at [https://ctf-wiki.org](https://ctf-wiki.org).\n\nIt can also be deployed locally, with the following steps:\n\n```shell\n# 1. clone\ngit clone https://github.com/ctf-wiki/ctf-wiki.git\n# 2. requirements\npip install -r requirements.txt\n# generate static file in site/\npython3 scripts/docs.py build-all\n# deploy at http://127.0.0.1:8008\npython3 scripts/docs.py serve\n```\n\n**A local instance of mkdocs is dynamically updated, for instance when a markdown file is modified, the corresponding page will be modified too.**\n\nIf you just want to view it statically, try Docker!\n\n```\ndocker run -d --name=ctf-wiki -p 4100:80 ctfwiki/ctf-wiki\n```\nAnd then access [http://localhost:4100/](http://localhost:4100/) .\n\n## How to practice？\n\nFirstly, learn some basic security knowledge through online reading.\n\nSecondly, CTF Wiki has two sister projects.\n\n- All of the challenges that are mentioned are in the [ctf-challenges](https://github.com/ctf-wiki/ctf-challenges) repository, you can locate them with their corresponding category.\n- The tools mentioned in the CTF Wiki are constantly added to the [ctf-tools](https://github.com/ctf-wiki/ctf-tools) repository.\n\n## How to make CTF Wiki Better？\n\nWe welcome to write content for the wiki and share what you have learned. \n\n**Before you decide to contribute content, please read [CONTRIBUTING](https://ctf-wiki.org/en/contribute/before-contributing/)**.\n\nThank you to all the people who have already contributed to CTF Wiki.\n\n<a href=\"https://github.com/ctf-wiki/ctf-wiki/graphs/contributors\"><img src=\"https://contrib.rocks/image?repo=ctf-wiki/ctf-wiki\" /></a>\n\n## What can you get?\n\n- Ability to learn new things quickly\n- Different ways of thinking\n- A love for solving problems\n- Interesting security techniques\n- Memorable and enriching experience\n\nBefore reading the Wiki, we hope to give you some advice:\n\n- Learn to ask [smart-questions](http://www.catb.org/~esr/faqs/smart-questions.html) .\n- Learn to use Google Search for self-improvement.\n- Be good at least one programming language, such as Python.\n- Practice is the most important learning tool.\n- Maintain the passions and desire to learn about new techniques.\n\nThe security circle is small and the areas of exploration is vast. Let's get started with **CTF Wiki**!\n", "timestamp": "2025-10-24T11:40:09.895463"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "docs/en/docs/contribute/basic-contribute-approach.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/docs/en/docs/contribute/basic-contribute-approach.md", "content": "# Basic Contribute Approach\n\nIf you're familiar with contributing a Github Project, You can directly jump to next section. Otherwise, please take a look at https://akrabat.com/the-beginners-guide-to-contributing-to-a-github-project/.", "timestamp": "2025-10-24T11:40:11.231524"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "docs/en/docs/contribute/before-contributing.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/docs/en/docs/contribute/before-contributing.md", "content": "# Before Contributing\n\nYou don't have to become a sophisticated CTFer before contributing to CTF Wiki. If you are enthusiastic about open source, and you enjoy sharing your piece of knowledge on CTF Wiki, please don't hesitate to join us.\n\nWhen you maintain CTF Wiki, no one will assign tasks to you. Feel free to commit when you find something imperfect.\n\nIf you find that somewhere is not well-written, you can discuss with the authors and make it a more reasonable structure.\n\n**Be sure to go over this guide before contributing.**\n", "timestamp": "2025-10-24T11:40:11.318664"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "docs/en/docs/contribute/documentation-requirement.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/docs/en/docs/contribute/documentation-requirement.md", "content": "# Document Requirements\n\nWhen you intend to contribute something, you should assure\n\n- Content format\n- Content structure\n- File name and file path\n\nmeet the following requirements.\n\n## Content format\n\n!!! note \n    For the basic content format, it is needed to be discussed.\n\nSome other requirements\n\n- In the future, we may consider to automatically generate a sequence number for every paragraph title, so we recommend **no** sequence number for paragraph titles.\n- As the challenges mentioned in the doc are placed in the `ctf-challenge` repository in order, we don't need to include a link to the challenge in the documentation. Moreover, every time the challenge's location in the repository changes, the challenge link also changes. Therefore, fixing the challenge link is a time-consuming and annoying task.\n\n## Content structure\n\nThe content must have the following characteristics\n\n- From easy to hard, the difficulty of content should be gradual.\n- Logical, every part should contain the following items\n  - Principle, explaining the principle corresponding to this content.\n  - Examples, give 1 to 2 typical examples.\n  - Exercises, give 1 to 2 typical exercises.\n\n## File name and file path\n\nDocument should be stored in the appropriate directory.\n\n- Figure. Please note that the image should be placed in a local folder. We should avoid referencing image from other websites. We recommend using a relative path `./figure` to reference the image.\n- **File names must be lowercase, separated by `-`, e.g. `file-name`**.\n- Regardless of the example or the exercise, the corresponding attachments should be stored in the corresponding directory in the `ctf-challenge` repository.", "timestamp": "2025-10-24T11:40:11.410624"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "docs/en/docs/contribute/translation.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/docs/en/docs/contribute/translation.md", "content": "# Translation\n\nCurrently, multi-language support mainly draws on the processing method of fastapi. It should be noted that during the translation process, we only need to ensure that the different languages ​​are consistent at the file level. Regarding the specific content of the document, you don't need to be too restrictive, just express the same meaning.\n\n## Improve existing language\n\nHere we take English as an example.\n\nFirst, we need to determine the two-letter code corresponding to English. By querying https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes, we can know that the corresponding code is `en`.\n\nAfter confirming the code, we can know the directory where the documentation of the language is located, namely `docs/en`.\n\nSuppose the document we want to translate is `docs/zh/docs/contribute/translation.md`. Then, we can copy the file to `docs/en/docs/contribute/translation.md`. At the same time, if the file depends on figures, we also need to copy the corresponding figure folder to the corresponding directory.\n\nThen, we can open the Chinese corresponding mkdocs.yml, namely `docs/zh/docs/mkdocs.yml`, and find the location of the file we want to translate, such as\n\n```yaml hl_lines=\"8\"\nnav:\n- Start:\n  - index.md\n  - discussion.md\n  - contribute/before-contributing.md\n  - contribute/basic-contribute-approach.md\n  - contribute/documentation-requirement.md\n  - contribute/translation.md\n```\nThen we should add the corresponding file at the corresponding hierarchical structure in the English configuration file.\n\n```yaml hl_lines=\"8\"\nnav:\n- Start:\n  - index.md\n  - discussion.md\n  - contribute/before-contributing.md\n  - contribute/basic-contribute-approach.md\n  - contribute/documentation-requirement.md\n  - contribute/translation.md\n```\n\nThen, we can translate it.\n\nFinally, we can use `python3 scripts/doc.py live en` to preview the modified content.\n\n## Add New language\n\nIf you plan to add a language that has not yet undergone any translation, such as Japanese (`jp`), you can use\n\n```python\npython3 scripts/doc.py new-lang jp\n```\n\nTo initialize. After that, you can contribute as in the previous section.", "timestamp": "2025-10-24T11:40:11.583970"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "docs/en/docs/discussion.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/docs/en/docs/discussion.md", "content": "# Discussion\n\nIf you have any question, feel free to choose [Github Discussion](https://github.com/ctf-wiki/ctf-wiki/discussions) or [![Discord](https://dcbadge.vercel.app/api/server/ekv7WDa9pq)](https://discord.gg/ekv7WDa9pq) to communicate with us.", "timestamp": "2025-10-24T11:40:11.731627"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "docs/en/docs/index.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/docs/en/docs/index.md", "content": "# Introduction\n\n[![Discord](https://dcbadge.vercel.app/api/server/ekv7WDa9pq)](https://discord.gg/ekv7WDa9pq)\n\n\nWelcome to **CTF Wiki**！\n\n**CTF** (Capture The Flag) started from **DEFCON CTF**, a competitive game among computer security enthusiasts, originally hosted in 1996.\n\n**CTF** covers a wide range of fields. Along with the evolving security technology, the difficulty of **CTF** challenges is getting harder and harder. As a result, the learning curve for beginners is getting steeper. Most online information is scattered and trivial. Beginners often don't know how to systematically learn **CTF**, which requires a lot of work and effort.\n\nIn order to let those people who are interested in **CTF**s start easily, in October 2016, **CTF Wiki** was established on Github. Along with gradually improved content over time, **CTF Wiki** has received lots of appreciation from security enthusiasts, many of those are guys that we think we would never meet.\n\nAs a freedom site, primarily focusing on recent CTFs, **CTF Wiki** introduces the knowledge and techniques in all aspects of **CTF** to make it easier for beginners to learn **CTF**.\n\nNow, **CTF Wiki** mainly contains the basic skills for **CTF**, but we are working hard to improve the following contents.\n\n- Advanced skills used in CTF\n- Special topics appearing in CTF\n\nFor the above-mentioned parts to be improved, please refer to [Projects](https://github.com/ctf-wiki/ctf-wiki/projects) which details what are planned.\n\nAlthough now **CTF Wiki** mainly focus **CTF**, it is not strictly limited to **CTF** topics. In the future, **CTF Wiki** will include\n\n- Tools used in security research\n- Increased discussion of security in the world\n\nIn addition, given the following two points\n\n- Information about technology should be openly shared.\n- As new techniques are always being developed, old techniques will start to fade over time and they should be replaced with new techniques.\n\nTherefore, **CTF Wiki** will never publish books.\n\nFinally, originating from the community, as an independent organization, **CTF Wiki** advocates **freedom of knowledge**, will **never be commercialized**, and will always maintain the character of **independence and freedom**.\n\n## Material Color Palette Theme\n\n### Color Scheme\n\nThe light mode and dark mode automatically changes depends on yor browser or system settings, or you could manually change it.\n\n<div class=\"tx-switch\">\n<button data-md-color-scheme=\"default\"><code>Default</code></button>\n<button data-md-color-scheme=\"slate\"><code>Slate</code></button>\n</div>\n<script>\n  var buttons = document.querySelectorAll(\"button[data-md-color-scheme]\")\n  Array.prototype.forEach.call(buttons, function(button) {\n    button.addEventListener(\"click\", function() {\n      document.body.dataset.mdColorScheme = this.dataset.mdColorScheme;\n      localStorage.setItem(\"data-md-color-scheme\",this.dataset.mdColorScheme);\n    })\n  })\n</script>\n\n### Primary colors\n\nClick on the color block to change the main color of the theme.\n\n<div class=\"tx-switch\">\n<button data-md-color-primary=\"red\"><code>Red</code></button>\n<button data-md-color-primary=\"pink\"><code>Pink</code></button>\n<button data-md-color-primary=\"purple\"><code>Purple</code></button>\n<button data-md-color-primary=\"deep-purple\"><code>Deep Purple</code></button>\n<button data-md-color-primary=\"indigo\"><code>Indigo</code></button>\n<button data-md-color-primary=\"blue\"><code>Blue</code></button>\n<button data-md-color-primary=\"light-blue\"><code>Light Blue</code></button>\n<button data-md-color-primary=\"cyan\"><code>Cyan</code></button>\n<button data-md-color-primary=\"teal\"><code>Teal</code></button>\n<button data-md-color-primary=\"green\"><code>Green</code></button>\n<button data-md-color-primary=\"light-green\"><code>Light Green</code></button>\n<button data-md-color-primary=\"lime\"><code>Lime</code></button>\n<button data-md-color-primary=\"yellow\"><code>Yellow</code></button>\n<button data-md-color-primary=\"amber\"><code>Amber</code></button>\n<button data-md-color-primary=\"orange\"><code>Orange</code></button>\n<button data-md-color-primary=\"deep-orange\"><code>Deep Orange</code></button>\n<button data-md-color-primary=\"brown\"><code>Brown</code></button>\n<button data-md-color-primary=\"grey\"><code>Grey</code></button>\n<button data-md-color-primary=\"blue-grey\"><code>Blue Grey</code></button>\n<button data-md-color-primary=\"white\"><code>White</code></button>\n</div>\n<script>\n  var buttons = document.querySelectorAll(\"button[data-md-color-primary]\");\n  Array.prototype.forEach.call(buttons, function(button) {\n    button.addEventListener(\"click\", function() {\n      document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary;\n      localStorage.setItem(\"data-md-color-primary\",this.dataset.mdColorPrimary);\n    })\n  })\n</script>\n\n### Accent colors\n\nClick on the color block to change the auxiliary color of the theme.\n\n<div class=\"tx-switch\">\n<button data-md-color-accent=\"red\"><code>Red</code></button>\n<button data-md-color-accent=\"pink\"><code>Pink</code></button>\n<button data-md-color-accent=\"purple\"><code>Purple</code></button>\n<button data-md-color-accent=\"deep-purple\"><code>Deep Purple</code></button>\n<button data-md-color-accent=\"indigo\"><code>Indigo</code></button>\n<button data-md-color-accent=\"blue\"><code>Blue</code></button>\n<button data-md-color-accent=\"light-blue\"><code>Light Blue</code></button>\n<button data-md-color-accent=\"cyan\"><code>Cyan</code></button>\n<button data-md-color-accent=\"teal\"><code>Teal</code></button>\n<button data-md-color-accent=\"green\"><code>Green</code></button>\n<button data-md-color-accent=\"light-green\"><code>Light Green</code></button>\n<button data-md-color-accent=\"lime\"><code>Lime</code></button>\n<button data-md-color-accent=\"yellow\"><code>Yellow</code></button>\n<button data-md-color-accent=\"amber\"><code>Amber</code></button>\n<button data-md-color-accent=\"orange\"><code>Orange</code></button>\n<button data-md-color-accent=\"deep-orange\"><code>Deep Orange</code></button>\n</div>\n<script>\n  var buttons = document.querySelectorAll(\"button[data-md-color-accent]\");\n  Array.prototype.forEach.call(buttons, function(button) {\n    button.addEventListener(\"click\", function() {\n      document.body.dataset.mdColorAccent = this.dataset.mdColorAccent;\n      localStorage.setItem(\"data-md-color-accent\",this.dataset.mdColorAccent);\n    })\n  })\n</script>\n\n<style>\nbutton[data-md-color-accent]> code {\n    background-color: var(--md-code-bg-color);\n    color: var(--md-accent-fg-color);\n  }\nbutton[data-md-color-primary] > code {\n    background-color: var(--md-code-bg-color);\n    color: var(--md-primary-fg-color);\n  }\nbutton[data-md-color-primary='white'] > code {\n    background-color: var(--md-primary-bg-color);\n    color: var(--md-primary-fg-color);\n  }\nbutton[data-md-color-accent],button[data-md-color-primary],button[data-md-color-scheme]{\n    width: 8.4rem;\n    margin-bottom: .4rem;\n    padding: 2.4rem .4rem .4rem;\n    transition: background-color .25s,opacity .25s;\n    border-radius: .2rem;\n    color: #fff;\n    font-size: .8rem;\n    text-align: left;\n    cursor: pointer;\n}\nbutton[data-md-color-accent]{\n  background-color: var(--md-accent-fg-color);\n}\nbutton[data-md-color-primary]{\n  background-color: var(--md-primary-fg-color);\n}\nbutton[data-md-color-scheme='default']{\n  background-color: hsla(0, 0%, 100%, 1);\n}\nbutton[data-md-color-scheme='slate']{\n  background-color: var(--md-default-bg-color);\n}\nbutton[data-md-color-accent]:hover, button[data-md-color-primary]:hover {\n    opacity: .75;\n}\n</style>", "timestamp": "2025-10-24T11:40:11.815627"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "docs/en/docs/introduction/history.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/docs/en/docs/introduction/history.md", "content": "# History of CTF Wiki\n\n> This section's contenth refers to Dr. Jianwei Zhuge's presentation \"The Past, Present and Future of CTF\" released on [i春秋](https://www.ichunqiu.com/).\n\n## Origin of CTF\n\nCTF (i.e. `Capture The Flag`) starts from the forth DEFON in 1996, which is an alternative of real-world cyber-attack competition games between legacy hackers, and has now become the most popular type of cyber-security competition all around the world.\n\n## Early Years of CTF\n\nAt the time when CTF competitions are at the beginning stage (1996-2001), there were no clear rules, no professionally built platform or environment. Each team need to prepare their own objective (defending their own objective, while attacking opponents' objective). Most of the organizers are just enthusiastic non-professional volunteers who assist in manual scoring.\n\nDue to the lack of an automated scoring system and technical competence among judges, many scoring delays and errors, unreliable network, and improper configuration, such approaches have caused great controversy and dissatisfaction at the time.\n\n## \"Modern\" CTF Competition\n\nA modern CTF competition should be held by professional organizers who will manage the competition platform, create challenges, and implement competitions with an automated scoring system.\n\nDuring the three years with LegitBS organizing the DEFCON CTF competition, a few modifications have been made:\n\n- The competition focuses on the inner workings of the computers, its security features and capabilities. Web exploitation has been completely ignored.\n- Various CPU architectures, operating systems, and languages.\n- The \"Zero-Sum\" scoring rule.\n- A wider skillset required: reverse engineering, vulnerability discovery, pwning, patching, network traffic analysis, system security, programming and debugging.", "timestamp": "2025-10-24T11:40:12.302517"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "docs/en/docs/introduction/mode.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/docs/en/docs/introduction/mode.md", "content": "# CTF Competition Types\n\n## Jeopardy: Problem Solving\n\nThe problem-solving (Jeopardy) is a common format in online CTF competitions. In a Jeopardy CTF, the participating teams can participate through the Internet or the on-site network. Furthermore, teams can use the online environment to communicate and share files, solve technical challenges, and submit the answers to score points.\n\nGenerally in a Jeopardy CTF the first three teams that solve a challenge will be rewarded with extra points. Typically, the first three solves are called the **first blood** , **second blood**, and the **third blood**. This scoring format not only rewards teams who can solve the challenge quickly, but also shows teamwork through collaboration.\n\nBesides that, there's also another popular rule focusing on \"decreasing participants' points\", which means to set a original point for a challenge at the start, and gradually get it lower according to the number of teams who have solved it. The point of a challenge will keep being decreased as more teams have successfully solved it, and stops at a lowest point and finally keep unchanged.\n\nCurrently, there are six main categories in CTF:\n\n- **Web – Web Application Exploitation**\n- **RE - Reverse Engineering**\n- **Pwn - Binary Exploitation**\n- **Crypto - Cryptography Security**\n- **Mobile - Mobile Security**\n- **Misc - Miscellaneous**\n\n## Belluminar: War Sharing\n\nBelluminar mode was developed by POC SECURITY from South Korea, and was introduced into China since World Hacking Masters Challenge (WCTF) in 2016.\n\nYou can refer to Belluminar's official website for more information: <http://belluminar.org/> .\n\n### Introduction to the Belluminar System\n\nHere's the introduction from Belluminar's official website:\n\n> Belluminar, hacking contest of POC, started at POC2015 in KOREA for the first time. Belluminar is from 'Bellum'(war in Latin) and 'seminar'. It is not a just hacking contest but a kind of\n> festival consisted of CTF & seminar for the solution about challenges. Only invited teams can join Belluminar. Each team can show its ability to attack what other teams want to protect and can\n> defend what others want to attack.\n\n### Stage of Making the Challenges\n\nFirst, each invited team must submit two challenges before the official competition. The teams will have 12 weeks to prepare their challenges. The score of making challenges accounted for 30% of the total team score.\n\n> Challenge 1: must be on the Linux platform;\n>\n> Challenge 2: No platform restriction(except Linux) No challenge type restriction (Pwn, Reverse...)\n\nTraditional Belluminar systems require each team to make two challenges. One of the challenges must be in Linux, while the other has no platform(except Linux) or challenge type restriction. Therefore, teams can show their skill and creativity.\n\nIn order to make the types of challenges more balanced, teams have to draw for their challenge type. This requires the team's skill level to be more comprehensive. In order to maintain balance, the two challenges might have different scores (For example, one might need to be the score of 200, while the other be the score of 100).\n\n### Submitting and Deploying Challenges\n\nBefore the deadline of challenge submitting , each team must submit a full document and a solve writeup of the challenges. The document must contain the challenge name, score, description, creator, knowledge needed, and source code of the challenge. However, the solve write-up only needs to include the operating environment, full solving process, and solve script/code.\n\nAfter the challenges have been submitted, the organizers will test the challenges and code. If issues were found, the person responsible for the challenge must help to solve the problems. Then, the challenges can be put on the competition platform.\n\n### During the Competition\n\nAfter entering the competition, each team can request to solve other teams' challenges. Typically there's no First Blood reward here. The ranking is based on the accumulated points earned by solving the challenges; points earned from challenges account for 60% of the overall points.\n\n### Discussion After the Competition\n\nAfter the game is over, each team need to prepare slides for their own challenges. During the sharing meeting, each team needs to have two members to share their intended solutions, learning process, knowledge points, etc. Once the presentative is over, open discussion begins. The two team representatives must answer questions from other players or judges. While they don’t have a time limit on answering questions, however, the time used is a variable in the scoring process.\n\n### Scoring Rules\n\nScores from creating challenges (30% of overall score) – 50% of the points are based on the level of details, completion, submit time, and the other 50% of the points coms from solved challenges. The formula is as follows: Score = MaxScore -- | N -- Expect＿N | N is the number of teams that solved this challenge. Expect＿N is the number of teams expected to solve this challenge. Only when the challenge’s difficulty is balanced, the number of teams solved this challenge will be closer to the number of teams expected to solve this challenge, the challenge’s creator will earn more points.\n\nScore from solving challenges (60% of overall score) – First Blood is not included in the calculation.\n\nScore from sharing – (10% of overall score) – Scores based on the content during the sharing meeting voted by players and judges (account for the time taken and other restrictions), will be calculated as an average.\n\n### Thoughts on the Belluminar System\n\nThe Belluminar system handed over the responsibility of creating challenges to the invited teams, where each team do their best to create challenges for each other. The difficulty and scope of the competition will not be restricted by the organizer, so the quality of the challenges will improve. The “Sharing” phase allows each team to explain their challenges. The open discussion process enables the sharing of creative ideas/methods. The “Sharing” phase after the competition is a great way for others players to learn.\n\n## Attack and Defense Mode - Attack & Defense\n\n### Overview\n\nThe Attack and Defense competitions are usually done offline, especially the final stages of some huge CTF competitions. In Attack and Defense mode, each team will have the same copy of a specific system environment, often referred to as the “Gamebox”. On the attacking side, teams need to discover vulnerabilities on services running on the opponent’s machine, then exploit them to score by obtaining the flag. On the defending side, teams need to patch existing vulnerabilities to stop losing points (usually defending and patching are the only way to stop losing points, of course, in some competitions successful defending can be rewarded with points).\n\nAn Attack and Defend competition not only tests the team’s technical skills but also tests the players' body (since most competitions last about 48 hours). At the same time, team members need to split up the tasks and work together on solving different problems.\n\nUsually, the competition organizer will disclose the details on the requirements 30 minutes or 1 day before the competition. During that time, you cannot attack. You need to get familiar with the given environment and prepare to defend based on the given requirements. You will need to discover the opponent Gamebox’s IP address using the given subnet.\n\nIf the two Attack and Defend sessions are between morning and afternoon, then the vulnerable services will get changed (in case players talk about them during the break). However, the IP address and what will not change.\n\nNormally, the organizer will provide ethernet cables, but not ethernet adopters.\n\n### Basic Rules\n\nThe general rules of attack and defense mode are as follows:\n\n- The teams will start with same points.\n- During each round, the organizer will update which service contains the released flag.\n- During each round, if a team’s vulnerable service and the attacker obtained the flag via the vulnerable service, then the team will lose some points and the attacker will gain some points.\n- During each round, if a team can keep the its services running normally, then that team won’t lose points. (if defended successful, the points will be rewarded)\n- If a team’s service goes down, then the team will lose points, which distributed to teams that had their service running normally. Often, service downtime and errors will result in more deduction of points.\n- If all teams’ service goes down during a round and it is determined to be unavoidable. Then, no points will be deducted.\n- During each round, if a service goes down and a team gets the flag, the team responsible for the service may get deduct double the points.\n- The uses of general defense methods are forbidden. The participating teams should backup all services before the competition. If a service gets lost or damaged, the organizer will not restore it.\n- It is forbidden to attack the competition platform, including but not limited obtaining root in Gameebox. The offender immediately banned from the competing.\n- If the team finds violations of other teams, please report them immediately and we will strictly review and make corresponding judgments.\n\n### Network Environment\n\nThe document will usually contain a network topology map (as shown below). Each team will maintain some Gamebox (one’s own server), vulnerable services are deployed on the Gamebox.\n\n![network](./figure/network.jpg)\n\nThe document will include the area of the players, the attack and defense zone, and the organizer’s or third party’s environment.\n\nPlayers environment includes (players need to configure or use DHCP to obtain the following configuration):\n\n- IP address\n- Gateway\n- Subnet\n- DNS server address\n\nAttack and defense environment includes:\n\n- The IP addresses of their own and the other teams' Gamebox.\n- The competition usually provides a table of team ids with their corresponding IP address to make planning easier.\n\nOrganizer environment includes:\n\n- Competition platform\n- Submit flag portal\n- Traffic dashboard\n\n### Accessing Gamebox\n\nThe document provides the login details. Normally, it's like the following:\n\n- Username is `ctf`.\n- Login to SSH using a password or private key.\n\n> Tips: Default passwords should be changed immediately and weak passwords should not be used.", "timestamp": "2025-10-24T11:40:12.376148"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "docs/en/docs/introduction/resources.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/docs/en/docs/introduction/resources.md", "content": "# Learning Resource\n!!! warning\n    Most of the resources on the current page are mainly websites from China (which may be inaccessible overseas) or are written in Chinese.\n\n    If you know of any global website or English-based website, can help to include it: [Contributing](https://ctf-wiki.org/en/contribute/before-contributing/).\n\n## Online Learning\n\n-   [IChunQiu Information Security Learning Platform](http://www.ichunqiu.com)\n-   [KanXue Security Documentation](https://www.kanxue.com/chm.htm)\n-   [CTFHub](https://www.ctfhub.com/)\n\n## Learning path\n\n-   [Knownsec R&D Checklist v3.1](http://blog.knownsec.com/Knownsec_RD_Checklist/index.html)\n-   [BUGBANK Skill Tree ](https://skills.bugbank.cn/)\n-   [Security Skill Tree Basic by evilcos](http://evilcos.me/security_skill_tree_basic/index.html)\n-   [Security Related Mind Map by phith0n](https://github.com/phith0n/Mind-Map)\n-   [Book recommendation for Information Security](https://github.com/riusksk/secbook)\n-   [CTFHub Skill Tree](https://www.ctfhub.com/#/skilltree)\n\n## Information\n\n-   [FreeBuf.COM](http://www.freebuf.com/)\n-   [AnQuanKe](https://www.anquanke.com/)\n-   [RoarTalk](http://www.4hou.com/)\n-   [Sec-News](https://wiki.ioin.in/)\n\n## Forums\n\n-   [52Pojie](http://www.52pojie.cn)\n-   [KanXue](http://bbs.pediy.com/)\n-   [Aliyun XianZhi Community](https://xz.aliyun.com/)\n-   [IChunQiu](https://bbs.ichunqiu.com/)\n\n## CTF Competition\n\n-   [XCTF Community](https://www.xctf.org.cn/)\n-   [CTFtime](https://ctftime.org/)\n-   [CTFHub Calendar](https://www.ctfhub.com/#/calendar)\n\n## CTF OJ\n\n-   [XCTF OJ](http://oj.xctf.org.cn)\n-   [IChunQiu CTF Competition](https://www.ichunqiu.com/competition)\n-   [pwnhub](https://pwnhub.cn/index)\n-   [X1cT34m Information Security Lab](https://ctf.njupt.edu.cn/)\n-   [HackingLab Information Security Learning Platform](http://hackinglab.cn/)\n-   [BugkuCTF](http://ctf.bugku.com/)\n-   [WeChall](https://www.wechall.net/)\n-   [Sniper OJ](http://www.sniperoj.com/)\n-   [Jarvis OJ](https://www.jarvisoj.com/)\n-   [CTF Learn](https://ctflearn.com/)\n-   [Hackme CTF](https://hackme.inndy.tw/scoreboard/)\n-   [Practice CTF List](http://captf.com/practice-ctf/)\n-   [CTFHub Challenge](https://www.ctfhub.com/#/challenge)\n\n## CTF Tools\n\n-   [KanXue Tools](https://tools.pediy.com/)\n-   [52Pojie Tools](https://down.52pojie.cn/Tools/)\n-   [CTF Online Tools by CTFcode](http://ctf.ssleye.com/)\n-   [CTF Online Tools Box by bugku](http://tool.bugku.com/)\n-   [CTF Tools by HBCTF team](https://ctftools.com/down/)\n-   [ctf-tools by zardus](https://github.com/zardus/ctf-tools)\n-   [The Cyber Swiss Army Knife](https://gchq.github.io/CyberChef/)\n-   [CTFHub Tools](https://www.ctfhub.com/#/tools)\n\n## CTF Writeup Collections\n\n-   [CTFs Writeup](https://github.com/ctfs)\n-   [CTF Solution by p4 team](https://github.com/p4-team/ctf)\n-   [CTFHub Writeup](https://writeup.ctfhub.com/)\n\n## Other Resources\n\n-   [ShenTouShi](https://www.shentoushi.top/)\n-   [AnQuanQuan](https://www.anquanquan.info/)\n-   [NaviSec](https://navisec.it/)\n-   [XssSafe](https://www.xssav.com/)\n-   [Coco413 Blog](https://www.coco413.com/navi.html)\n-   [WLGF(mirror)](http://web.archive.org/web/20220327073119/https://www.milw0rm.cn/nav/)\n-   [SecWeb(mirror)](http://web.archive.org/web/20200912174524/https://thief.one/SecWeb/)\n", "timestamp": "2025-10-24T11:40:12.435594"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "docs/en/docs/pwn/linux/kernel-mode/basic-knowledge.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/docs/en/docs/pwn/linux/kernel-mode/basic-knowledge.md", "content": "# Introduction to Linux kernel\n\nIn this section, we will present some fundamental knowledge needed for learning the Linux kernel pwn, which is somewhat like a course of \"Tour on Operating System\".\n\n## Operating System Kernel\n\nOperating system kernel is indeed a kind of software, which is somehow like a middle layer between general applications and hardware resource. The kernel is designed for scheduling system resources, controling IO devices, manipulating network and filesystems, and providing fast APIs for high-level applications.\n\n![Kernel_Layout](./figure/Kernel_Layout.svg)\n\nActually, operating system kernel is an abstract concept. It is essentially the same as the user process, which is code + data located in physical memory. The difference is that the code of kernel is usually running on a high-privilege environment of the CPU, which has full hardware access capabilities. When executing the code of user-mode program, the CPU usually runs in a low-privilege environment, which only has partial hardware access capabilities or missing that.\n\nHow CPU distinguish these different running privileges? Here comes another hardware concept: **hierarchical protection domains**.\n\n## hierarchical protection domains\n\n**Hierarchical protection domains** (aka Rings) is a model that restrict the access capabilities of hardware resources in different levels, which is enforced from hardware level.\n\nIntel's CPUs have 4 different ring levels: ring0 (highiest privilege), ring1, ring2, ring3(lowest privilege). Generally we only use the ring0(for the kernel) and ring3(for the user-mode) in the design of modern operating systems.\n\n![Ring Model](./figure/ring_model.png)\n\nHence, we can give out two definitions:\n\n- `User mode(userland)`: CPU running under ring3, with context of user-mode program\n- `Kernel mode(kernelland)`: CPU running under ring0, with context of kernel-mode program\n\n## Mode switch (system call)\n\nWhile events like `system call`, `exception`, `interrupt` happens, the CPU will switch from user mode to kernel mode, and jump to corresponding handler functions.\n\nWe mainly focus on the system call, as it's the fundamental APIs for user mode programs to communicate with the kernel. The core process is like:\n\n> Note that the CPU is running under the kernel mode after system call instructions were processing.\n\n1. CPU swaps the value of `GS` register with another value saved in kernel by `swapgs` instruction, aiming to restore it after returning to the user land.\n2. \n\n> TBD\n", "timestamp": "2025-10-24T11:40:13.406603"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "docs/en/docs/pwn/linux/user-mode/environment.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/docs/en/docs/pwn/linux/user-mode/environment.md", "content": "## Introduction\n\nCurrently most of Pwn challenges in CTF are mainly about the binary exploitation under user mode in Linux, which means that usually we'll need to deploy a Linux operating environment locally for solving that. Generally it can be done by creating a Linux virtual machine as the challenge-solving environment, or just installing a Linux operating environment directly on your physical machine.\n\n[Ubuntu](https://ubuntu.com/) is the Linux distro that are mostly chosen as Pwn challenges' operating environment in CTF, therefore you might need to deploy a Ubuntu operating environment locally which is of the same version to the challenge's remote environment, so that you can have the same executing environment compared to that(including Libc binaries, etc.) for you to run  the target and exploit it correctly on your own PC. However, _it doesn't mean that you have to choose Ubuntu as youor primary Linux distro_, you can still choose to firstly use your favourite Linux distros as your primary OS(e.g., Gentoo Linux, openSUSE, Debian, Fedora, Arch Linux, NixOS, etc.), and deploy Pwn challenges' environments on your PC with tools like Docker and Podman which adopt container techniques to create dedicated environments conveniently.\n\nFor legacy Pwn challenges in CTF, the following tools are usually the core ones for solving challenges:\n\n- IDA: A reverse engineering tool for analyzing binaries provided by challenges.\n- Python + pwntools: Core utilities for crafting scripts for binary exploitation.\n- gdb + pwndbg or peda: Debugger with enhanced plugins to run and debug the target.\n\nNote that at the earliest stage of learning Pwn, we do not recommend you to use software packages that have been over-wrapped base on pwntools to craft your exploitation script, while over-using lambda statements to simplify the exploitation script is also not recommended, as which might have some potential negative effects on your thoughts on some deep aspects of the whole computer science. What we recommend to do is that you should start to use such custom configuration after you have enough knowledge and skills on computer science and Pwn.\n\n## Deploy local environment for solving Pwn challenges in CTF\n\nTo make sure that our exploitation script can make attacks on remote successfully, usually we need to deploy a same operating environment locally, and have the local attacking test successfully on local before exploiting on remote. However, as various CTF challenges will always have different environments, it will waste lots of your storage to hold many of different and entire OS environments.\n\nAs what we usually need to only the Libc environment besides the target itself, it might be a solution to try to load different `libc.so.6` executables with arguments like `LD_PRELOAD` while running the target programs of Pwn challenges. However such approaches are not always avaliable due to complex executation-dependencies chains including `ld` and some other things, which will result in `segmentation falut` while doing the crossing-version Libc loading and executing.\n\nThough user-mode executables in Linux do not have a strong compatibility compared to those under Windows, the whole executing environment in fact relies on the system APIs known as `system call` provided by the OS kernel, which are generally not being changed to result in the compatibility to be broken. Thus light weight virtualization solutions like Docker can easily help us to build corresponding environments for running and debugging Pwn challenges.\n\n### Install Docker\n\nPlease refer to Docker's [official website](https://docs.docker.com/engine/install/) to see how to install docker on your machine, or you can also do that refer to your distro's official Wiki (e.g., like [Gentoo Wiki - Docker](https://wiki.gentoo.org/wiki/Docker)). We do not keep a copy here due to Linux distros vary.\n\n### Build a Docker image for Pwn\n\nHere's a Docker template including usual tools for solving Pwn challenegs. You can also modify it freely according to your needs:\n\n```dockerfile\nFROM ubuntu:24.04\n\nARG DEBIAN_FRONTEND=noninteractive\n\n# pre-install softwares\nRUN dpkg --add-architecture i386\nRUN apt-get -y update && apt-get upgrade -y\nRUN apt-get install -y lib32z1 apt-transport-https \\\n    python3 python3-pip python3-venv python3-poetry python3-dev python3-setuptools \\\n    libglib2.0-dev libfdt-dev libpixman-1-dev zlib1g-dev libc6-dbg libc6-dbg:i386 libgcc-s1:i386 \\\n    vim nano netcat-openbsd openssh-server git unzip curl tmux konsole wget sudo \\\n    bison flex build-essential gcc-multilib \\\n    qemu-system-x86 qemu-user qemu-user-binfmt \\\n    gcc gdb gdbserver gdb-multiarch clang lldb make cmake\n\n# enable ssh login\nRUN rm -f /etc/service/sshd/down\nRUN sed -ri 's/^#?PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config &&\\\n    sed -ri 's/#UseDNS\\ no/UseDNS\\ no/g' /etc/ssh/sshd_config && \\\n    sed -ri \"s/StrictModes yes/StrictModes no/g\" /etc/ssh/sshd_config && \\\n    sed -ri \"s/UsePAM yes/UsePAM no/g\" /etc/ssh/sshd_config\n\n# enable login with password\nRUN echo 'PasswordAuthentication yes' >> /etc/ssh/sshd_config\n\n# defaultly we have a user `ubuntu` in the image\nRUN echo \"ubuntu:123456\" | chpasswd && \\\n    echo \"root:123456\" | chpasswd\n\n# add sudo\nRUN usermod -aG sudo ubuntu\n\n# enable ssh key login\n#RUN mkdir /home/ubuntu/.ssh && \\\n#    echo \"Your ssh key\" > /home/ubuntu/.ssh/authorized_keys\n\n# keep container running\nRUN echo \"#!/bin/sh\\nservice ssh restart\\nsleep infinity\" > /root/start.sh\nRUN chmod +x /root/start.sh\n\n# create venv for pip\nRUN python3 -m venv /pip_venv && \\\n    chown -R ubuntu:ubuntu /pip_venv && \\\n    echo \"\\n\\n# pip venv\\nsource /pip_venv/bin/activate\" >> /home/ubuntu/.bashrc\n\n# pwn-related tools\nRUN /pip_venv/bin/pip install -U pip && \\\n    /pip_venv/bin/pip install --no-cache-dir \\\n    pwntools \\\n    ropgadget \\\n    z3-solver \\\n    smmap2 \\\n    apscheduler \\\n    ropper \\\n    unicorn \\\n    keystone-engine \\\n    capstone \\\n    angr \\\n    pebble \\\n    r2pipe \\\n    LibcSearcher \\\n    poetry\n\nRUN git clone https://github.com/pwndbg/pwndbg && \\\n    cd pwndbg && chmod +x setup.sh && ./setup.sh\n\nCMD [\"/root/start.sh\"]\n\nEXPOSE 22\n```\n\nYou shall create a file named `Dockerfile` in an empty directory with contents above, and then run the following commands in terminal:\n\n```shell\n$ docker build -t pwnenv_ubuntu24 .\n```\n\n> If you could not build the docker image due to some network issues, using proxy may be a solution. All you need to do is to add following configurations in your Dockerfile:\n> \n> ```dockerfile\n> ENV HTTP_PROXY=http://your-proxy:port\n> ENV HTTPS_PROXY=http://your-proxy:port\n> ```\n> \n> If your proxy server is on local, you can also choose to build the docker image with local network by following command:\n> \n> ```shell\n> docker build --network=\"host\" -t pwnenv_ubuntu24 .\n> ```\n\nAfter the building has been done, you will get a Ubuntu24 image called `pwnenv_ubuntu24` locally, which can be find with `docker images` command:\n\n```shell\n$ docker images                                              \nREPOSITORY                                       TAG       IMAGE ID       CREATED             SIZE\npwnenv_ubuntu24                                  latest    64f87a598f87   2 hours ago    3.6GB\n```\n\nNow you can change the base image defined at the first line in Dockerfilw to build docker images for different Ubuntu distros.\n\n### Create container from Docker image\n\nWe can run the following command to create a container from the Docker image we've just built:\n\n```shell\n$ docker run \\\n\t-d \\\n\t-p 25000:22 \\\n\t--name=pwn24 \\\n\t-v ~/Desktop/CTF:/CTF \\\n\tpwnenv_ubuntu24\n```\n\nArguments of this command are:\n\n- `-d`： Running the container in the background.\n- `-p 25000:22`： map the port `22` of the container to the local port `25000`\n- `--name=pwn24`： name of the container is assigned as `pwn24`\n- `-v ~/Desktop/CTF:/CTF` ： map the local directory `~/Desktop/CTF` into the directory `/CTF` inside the container, so that we can access local files directly inside the container\n- `pwnenv_ubuntu24`：Docker image used to create the container\n\nThen we can execute into the container with following command:\n\n```shell\n$ docker exec -w /CTF \\\n        -e TERM=xterm-256color \\\n        -u ubuntu \\\n        -it pwn24 \\\n        bash\n```\n\nIf you do not want to share your local directory with the docker container, you can also use following commands to do the copy work between the container and the local:\n\n```shell\n$ docker cp local_source_path container_name:target_path_in_container\n$ docker cp container_name:source_path_in_container local_target_path\n```\n\nAs we have set up the ssh service for the container, we can also use ssh to connect, which allow us to use tools like `vscode` to manipulating files in container conveniently: \n\n```shell\n$ ssh root@localhost -p 25000\n```\n\nIf the environment of the container has been made to be broken unintentionally, we can just do the `docker remove container_name` to remove it, and just create a new one again with `docker run`. Note that this method will let us lose all the files we've copied into the container(except for attached local directories).\n\n### Connect the Docker container to local graphic system\n\nAs debug functions `gdb.attach()` from `pwntools` will need to create new window, running this inside the docker container directly will fail. Therefore we need to connect the container to local graphic system, so that we can run this function correctly.\n\n> You can also choose to configure the multi-windows system for the container with `tmux`, in which all we need to do is to run the `tmux` and run `context.terminal = ['tmux', 'splitw', '-h']` before calling the `gdb.attach()`.\n\n#### For Wayland\n\nFor DE under Wayland, we need to add the following additional arguments while creating the container:\n\n```shell\n$ docker run \\\n\t-d \\\n\t-p \"25000:22\" \\\n\t--name=pwn24 \\\n\t-v ~/Desktop/CTF:/CTF \\\n\t-e XDG_RUNTIME_DIR=/tmp \\\n\t-e DISPLAY=$DISPLAY \\\n\t-e WAYLAND_DISPLAY=$WAYLAND_DISPLAY \\\n\t-v $XDG_RUNTIME_DIR/$WAYLAND_DISPLAY:/tmp/$WAYLAND_DISPLAY \\\n\t-e QT_QPA_PLATFORM=wayland \\\n\tpwnenv_ubuntu24\n```\n\nThen all we need to do is to configure the `context.terminal` before calling `gdb.attach()` as follow, note that you should choose the right statement according to your desktop environment:\n\n```python\ncontext.terminal = ['konsole', '-e', 'sh', '-c'] # for KDE\ncontext.terminal = ['gnome-terminal', '-e', 'sh', '-c'] # for Gnome\n```\n\n#### For X11\n\nFor DE under X11, we need to add the following additional arguments while creating the container:\n\n```shell\n$ docker run \\\n\t-d \\\n\t-p \"25000:22\" \\\n\t--name=pwn24 \\\n\t-v ~/Desktop/CTF:/CTF \\\n\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t-e DISPLAY=$DISPLAY \\\n\tpwnenv_ubuntu24\n```\n\nThen all we need to do is to configure the `context.terminal` before calling `gdb.attach()` as follow, note that you should choose the right statement according to your desktop environment:\n\n```python\ncontext.terminal = ['konsole', '-e', 'sh', '-c'] # for KDE\ncontext.terminal = ['gnome-terminal', '-e', 'sh', '-c'] # for Gnome\n```\n\n> Refer to [Running pwnlib gdb (pwntools) feature inside Docker](https://gist.github.com/turekt/71f6950bc9f048daaeb69479845b672b).\n\n## Build the CTF Pwn environment locally\n\nBesides using the Docker, you can also directly build an environment for solving Pwn challenges locally. For legacy Pwn challenges in CTF, the following tools are usually the core ones for solving challenges:\n\n- IDA: A reverse engineering tool for analyzing binaries provided by challenges.\n- Python + pwntools: Core utilities for crafting scripts for binary exploitation.\n- gdb + pwndbg or peda: Debugger with enhanced plugins to run and debug the target.\n\n### Get the IDA\n\nIDA Pro (interactive Disassembler Professional) is a reverse-engineering tool developed by Hex-Rays, which is also the most popular tool for static analyzation in reverse engineering. With IDA Pro, we can easily recover the original code logic from the target binary, so that we can find vulnerabilities more conveniently.\n\nNote that [IDA Pro](https://hex-rays.com/ida-pro/) is not a free software, and the software itself and discompiler plugins for different ISA are charged dedicately.\n\n> Until 2024.04, the price of license for IDA is 1975USD, the price of discompiler plugin for a specific ISA is 2765USD.\n\nWhat's more is that, Hex-rays also provides a free reverse engineering tool called [IDA Free](https://hex-rays.com/ida-free/), which is based on cloud and only supports discompiler on X86. It might be enough to use for solving most of Linux Pwn challenges.\n\n### Install Python\n\nMost of Linux distros are installed with Python by default, therefore generally we do not need to install it manually. If you do not have a Python environment in the Linux environment on your computer, you can also choose to install it with your distro's package manager.\n\nNote that the default Python on some Linux distros might be Python2, and you might need to install the Python3 manually.\n\n### Confiogure venv\n\nSometimes you may encounter error messages like this while running `pip` command, which is due to the security restriction configuration of the Linux distro you use: \n\n```\nerror: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try\n    zypper install python311-xyz, where xyz is the package\n    you are trying to install.\n    \n    If you wish to install a non-rpm packaged Python package,\n    create a virtual environment using python3.11 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip.\n    \n    If you wish to install a non-rpm packaged Python application,\n    it may be easiest to use `pipx install xyz`, which will manage a\n    virtual environment for you. Install pipx via `zypper install python311-pipx` .\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\n```\n\nTo handle this problem, we can choose to use the [venv](https://docs.python.org/zh-cn/3/library/venv.html#module-venv) module to create a virtual environment, which ensures the security of the system, and using such strategy also make us easy to rebuild the whole environment while in need. \n\nTo create a `venv`, we just need to run the following command(if the directory dose not existed, it'll be created):\n\n```shell\npython3 -m venv your_venv_direcory_path\n```\n\nThen we can easily get into the `vent` environment with `source` command:\n\n```shell\nsource your_venv_direcory_path/bin/activate         # for bash\nsource your_venv_direcory_path/bin/activate.fish    # for fish\nsource your_venv_direcory_path/bin/activate.csh     # for csh/tcsh\n```\n\n> You can also add this into your `~/.bashrc` file to run it by default.\n\nAs virtual environment provides us with features including lightweight, security, and rebuildability, we recommand you to create a Python venv for CTF/Pwn even if there's no security restriction for your `pip`.\n\n### Install pwntools\n\n[pwntools](https://docs.pwntools.com/en/stable/) is a powerful Python package for crafting exploitation script. You can install it with following commands:\n\n```shell\npython3 -m pip install --upgrade pip\npython3 -m pip install --upgrade pwntools\n```\n\n### Install gdb\n\nGNU Debugger (GDB) is a program debugger developed by GNU, we can use it to debug the binary executable conveniently.\n\nGDB is installed defaultlly on most of Linux distro, you can execute `gdb` command in your terminal to check for that (enter `q` to exit):\n\n```shell\n$ gdb\nGNU gdb (GDB; SUSE Linux Enterprise 15) 13.2\nCopyright (C) 2023 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\nType \"show copying\" and \"show warranty\" for details.\nThis GDB was configured as \"x86_64-suse-linux\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n<http://bugs.opensuse.org/>.\nFind the GDB manual and other documentation resources online at:\n    <http://www.gnu.org/software/gdb/documentation/>.\n\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\".\n(gdb) \n```\n\nIf you do not have gdb on your computer, you can install it with package manager for your Linux distro. Following is the command you may need to run. Note that we only list some of the most common Linux distros here:\n\nDebian / Ubuntu:\n\n```shell\nsudo apt-get install -y gdb\n```\n\nopenSUSE Leap / Tumbleweed / SLE:\n\n```shell\nsudo zypper install gdb\n```\n\nArch Linux / Manjaro / EndeavourOS:\n\n```shell\nsudo yay -S gdb # `pacman -S gdb` also works if you do not use the AUR\n```\n\nFedora / CentOS / RHEL:\n\n```shell\nsudo yum install gdb # yum is linked to dnf in fact\n```\n\n### Install pwndbg\n\n[pwndbg](https://github.com/pwndbg/pwndbg) (/paʊnˈdiˌbʌɡ/) is a powerful GDB plugin to enhance the debugging functionality of GDB. With this plugin we can get more detailed information like the layout of heap memory easily while debugging.\n\npwndbg itself has an installing script, so all we need to do is clone the project and run it:\n\n```shell\ngit clone https://github.com/pwndbg/pwndbg\ncd pwndbg\n./setup.sh\n```\n\nFor Linux distros using `nix` as their package manager (e.g. NixOS), you can install it with following commands:\n\n```shell\nnix shell github:pwndbg/pwndbg\npwndbg ./your-binary\n```\n\n### Install peda\n\n> Note: Only one of pwndbg and peda is needed to be installed. To avoid the potential conflicts, we do NOT recommand you to install both of them together.\n\n[peda](https://github.com/longld/peda) is a powerful GDB plugin to enhance the debugging functionality of GDB. With this plugin we can get more detailed information like the layout of heap memory easily while debugging.\n\nTo install the `peda`, all we need to do is clone the source code to local and update the GDB's configuration with following commands:\n\n```shell\ngit clone https://github.com/longld/peda.git ~/peda\necho \"source ~/peda/peda.py\" >> ~/.gdbinit\necho \"DONE! debug your program with gdb and enjoy\"\n```\n", "timestamp": "2025-10-24T11:40:14.150286"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "docs/en/docs/usage.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/docs/en/docs/usage.md", "content": "# How to use CTF Wiki\n\n## Introduction\n\nCTF Wiki consists of three projects:\n\n- [ctf-wiki](https://github.com/ctf-wiki/ctf-wiki) introduces basic knowledge for CTF.\n- [ctf-challenges](https://github.com/ctf-wiki/ctf-challenges) contains attachments and some writeups of CTF challenges introduced on Wiki.\n- [ctf-tools](https://github.com/ctf-wiki/ctf-tools) contains useful tools for CTF.\n\n## Get attachments of CTF challenges on Wiki\n\nYou can obtain attachments of CTF challenges on the Wiki in the [ctf-challenges](https://github.com/ctf-wiki/ctf-challenges) repository. For example, attachments of challenges in [Basic ROP](https://ctf-wiki.org/en/pwn/linux/user-mode/stackoverflow/x86/basic-rop/) can be found under <https://github.com/ctf-wiki/ctf-challenges/tree/master/pwn/linux/user-mode/stackoverflow>.\n", "timestamp": "2025-10-24T11:40:14.221325"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "docs/missing-translation.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/docs/missing-translation.md", "content": "!!! warning\n    The current page still doesn't have a translation for this language.\n\n    You can read it through Google Translate.\n\n    Besides, you can also help to translate it: [Contributing](https://ctf-wiki.org/en/contribute/before-contributing/).\n\n", "timestamp": "2025-10-24T11:40:14.634207"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "docs/zh-tw/docs/android/basic_develop/basic_develop.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/docs/zh-tw/docs/android/basic_develop/basic_develop.md", "content": "# Android 開發基礎\n\n在做 Android 安全之前，我們應該儘可能地瞭解 Android 開發的基本流程。\n\n## 基礎知識\n\n依次閱讀以下書籍，由淺入深地瞭解 Android 基本開發知識\n\n- 第一行代碼，閱讀完前七章即可\n- JNI/NDK 開發，目前尚未找到一本相關合適的指南。\n- Android 編程權威指南（可選）\n- Android 高級進階（可選）\n\n在學習的過程中，個人覺得需要着重瞭解 Android 開發中如下知識\n\n- Android 系統架構\n- 基本源文件架構\n- 基本開發方式與代碼編寫慣例，瞭解常見代碼的意思。\n- 瞭解 xml 等一些配置資源的文件格式。\n\n**一定要搭好基本的 Android 開發環境！！！！！**\n\n- java\n- ddms\n- ndk\n- sdk，多安裝幾個版本的 sdk，5.0-8.0\n\n## Apk 打包流程\n\n當編寫完 App 相關的代碼後，我們的最後一步就是將 App 中所有使用到的資源文件進行打包，打包流程如下圖（<u>http://androidsrc.net/android-app-build-overview/</u>）所示：\n\n![](./figure/android_app_build.png)\n\n具體的操作如下\n\n1. 使用 aapt( The Android Asset Packing Tool ) 對資源文件進行打包，生成 R.java 文件。\n2. 如果項目中使用到了 AIDL（Android Interface Definition Language）提供的服務，則需要使用 AIDL 工具解析 AIDL 接口文件生成相應的 Java 代碼。\n3. 使用 javac 將 R.java 和 AIDL 文件編譯爲 .class 文件。\n4. 使用 dx 工具將 class 和第三方的 library 轉換爲 dex 文件。\n5. 利用 apkbuilder 將第一步編譯後的資源、第四步生成的 .dex 文件，以及一些其它資源打包到 APK 文件中。\n6. 這一部主要是對 APK 進行簽名。可以分爲兩種情況，如果我們是要發佈 App，那就採用 RealeaseKeystore  簽名；反之，我們如果只是想要對 App 進行調試，那就使用 debug.keystore 簽名。\n7. 在發佈正式版之前，我們需要將 APK 包中資源文件距離文件的起始偏移修改爲 4 字節的整數倍數，這樣，在之後運行 App 的時候，速度會比較快。\n\n## Apk 文件結構\n\nAPK 文件也是一種 ZIP 文件。因此，我們可以使用解壓 zip 的工具來對其進行解壓。一個典型的 APK 文件的結構如下圖所示。其中，關於每一部分的介紹如下\n\n![](./figure/apk_structure.png)\n\n\n- AndroidManifest.xml\n\n    - 該文件主要用於聲明應用程序的名稱，組件，權限等基本信息。\n\n- class.dex\n    - 該文件是 dalvik 虛擬機對應的可執行文件，包含應用程序的可執行代碼。\n- resource.arsc\n    - 該文件主要是應用程序編譯後的二進制資源以及資源位置與資源 id 之間的映射關係，如字符串。\n- assets\n    - 該文件夾一般用於包含應用程序的原始資源文件，例如字體和音樂文件。程序在運行的時候，可以通過API 獲取這些信息。\n- lib/\n    - lib目錄下主要用於存儲通過 JNI（Java Native Interface）機制使用的本地庫文件，並且會按照其支持的架構，分別創建對應的子目錄。\n- res/\n    - 該目錄主要包含了 Android 應用引用的資源，並且會按照資源類型進行存儲，如圖片，動畫，菜單等。主要還有一個 value 文件夾，包含了各類屬性資源\n- colors.xml-->顏色資源\n- dimens.xml--->尺寸資源\n- strings--->字符串資源\n- styles.xml-->樣式資源\n- META-INF/\n    - 類似於 JAR 文件，APK 文件中也包含了 META-INF 目錄，用於存放代碼簽名等文件，以便於用來確保 APK 文件不會被人隨意修改。\n", "timestamp": "2025-10-24T11:40:15.795546"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "docs/zh-tw/docs/android/basic_operating_mechanism/readme.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/docs/zh-tw/docs/android/basic_operating_mechanism/readme.md", "content": "# Android 應用運行機制簡述\n\n本部分主要關注 Android 中 Java 層代碼與 Native 層代碼的基本運行原理。\n\n一般而言，在啓動一個 App 時，Android 會首先執行 Application 類（AndroidManifest.xml 文件中註明）的創建工作，然後再開始執行 Main Activity，繼而根據各種各樣的邏輯執行相關代碼。\n\n注：本部分的內容可能存在以下問題\n\n- 簡略\n- 理解不到位\n\n如果發現可以補充的地方，歡迎隨時及時補充。當然，本部分內容也會隨着時間不斷更新。", "timestamp": "2025-10-24T11:40:24.409620"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "docs/zh-tw/docs/index.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/docs/zh-tw/docs/index.md", "content": "# 簡介\n\n[![Discord](https://dcbadge.vercel.app/api/server/ekv7WDa9pq)](https://discord.gg/ekv7WDa9pq)\n\n歡迎來到 **CTF Wiki**。\n\n**CTF**（Capture The Flag，奪旗賽）起源於 1996 年 **DEFCON** 全球黑客大會，是網絡安全愛好者之間的競技遊戲。\n\n**CTF** 競賽涉及衆多領域，內容繁雜。與此同時，安全技術的發展速度越來越快，**CTF** 題目的難度越來越高，初學者面對的門檻越來越高。而網上資料大都零散瑣碎，初學者往往並不知道該如何系統性地學習 **CTF** 相關領域知識，常需要花費大量時間，苦不堪言。\n\n爲了使得熱愛 **CTF** 的小夥伴們更好地入門 **CTF**，2016 年 10 月份，**CTF Wiki** 在 Github 有了第一次 commit。隨着內容不斷完善，**CTF Wiki** 受到了越來越多安全愛好者的喜愛，也漸漸有素未謀面的小夥伴們參與進來。 \n\n作爲一個自由的站點，圍繞 **CTF** 近幾年賽題，**CTF Wiki** 對 **CTF** 中的各個方向的知識和技術進行介紹，以便於初學者更好地學習 **CTF** 相關的知識。\n\n目前，**CTF Wiki** 主要包含 **CTF** 各大範疇的基礎知識，並正在着力完善以下內容\n\n- CTF 競賽中的進階知識\n- CTF 競賽中的優質題目\n\n關於上述部分待完善內容，請參見 CTF Wiki 的 [Projects](https://github.com/ctf-wiki/ctf-wiki/projects)，詳細列出了正在做的事項以及待做事項。\n\n當然，**CTF Wiki** 基於 **CTF**，卻不會侷限於 **CTF**。在未來，**CTF Wiki** 將會\n\n- 介紹安全研究中的工具\n- 更多地與安全實戰結合\n\n此外，鑑於以下兩點\n\n- 技術應該以開放的方式共享。\n- 安全攻防技術總是在不斷演進，舊的技術在面對新的技術時可能失效。\n\n因此，**CTF Wiki** 永遠不會出版書籍。\n\n最後，**CTF Wiki** 源於社區，作爲**獨立的組織**，提倡**知識自由**，在未來也絕不會商業化，將始終保持**獨立自由**的性質。\n\n## Material color palette 顏色主題\n\n### Color Scheme 配色方案\n\n根據瀏覽器與系統設置自動切換明暗主題，也可手動切換\n<div class=\"tx-switch\">\n<button data-md-color-scheme=\"default\"><code>Default</code></button>\n<button data-md-color-scheme=\"slate\"><code>Slate</code></button>\n</div>\n<script>\n  var buttons = document.querySelectorAll(\"button[data-md-color-scheme]\")\n  Array.prototype.forEach.call(buttons, function(button) {\n    button.addEventListener(\"click\", function() {\n      document.body.dataset.mdColorScheme = this.dataset.mdColorScheme;\n      localStorage.setItem(\"data-md-color-scheme\",this.dataset.mdColorScheme);\n    })\n  })\n</script>\n\n### Primary colors 主色\n\n點擊色塊可更換主題的主色\n<div class=\"tx-switch\">\n<button data-md-color-primary=\"red\"><code>Red</code></button>\n<button data-md-color-primary=\"pink\"><code>Pink</code></button>\n<button data-md-color-primary=\"purple\"><code>Purple</code></button>\n<button data-md-color-primary=\"deep-purple\"><code>Deep Purple</code></button>\n<button data-md-color-primary=\"indigo\"><code>Indigo</code></button>\n<button data-md-color-primary=\"blue\"><code>Blue</code></button>\n<button data-md-color-primary=\"light-blue\"><code>Light Blue</code></button>\n<button data-md-color-primary=\"cyan\"><code>Cyan</code></button>\n<button data-md-color-primary=\"teal\"><code>Teal</code></button>\n<button data-md-color-primary=\"green\"><code>Green</code></button>\n<button data-md-color-primary=\"light-green\"><code>Light Green</code></button>\n<button data-md-color-primary=\"lime\"><code>Lime</code></button>\n<button data-md-color-primary=\"yellow\"><code>Yellow</code></button>\n<button data-md-color-primary=\"amber\"><code>Amber</code></button>\n<button data-md-color-primary=\"orange\"><code>Orange</code></button>\n<button data-md-color-primary=\"deep-orange\"><code>Deep Orange</code></button>\n<button data-md-color-primary=\"brown\"><code>Brown</code></button>\n<button data-md-color-primary=\"grey\"><code>Grey</code></button>\n<button data-md-color-primary=\"blue-grey\"><code>Blue Grey</code></button>\n<button data-md-color-primary=\"white\"><code>White</code></button>\n</div>\n<script>\n  var buttons = document.querySelectorAll(\"button[data-md-color-primary]\");\n  Array.prototype.forEach.call(buttons, function(button) {\n    button.addEventListener(\"click\", function() {\n      document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary;\n      localStorage.setItem(\"data-md-color-primary\",this.dataset.mdColorPrimary);\n    })\n  })\n</script>\n\n### Accent colors 輔助色\n\n點擊色塊更換主題的輔助色\n<div class=\"tx-switch\">\n<button data-md-color-accent=\"red\"><code>Red</code></button>\n<button data-md-color-accent=\"pink\"><code>Pink</code></button>\n<button data-md-color-accent=\"purple\"><code>Purple</code></button>\n<button data-md-color-accent=\"deep-purple\"><code>Deep Purple</code></button>\n<button data-md-color-accent=\"indigo\"><code>Indigo</code></button>\n<button data-md-color-accent=\"blue\"><code>Blue</code></button>\n<button data-md-color-accent=\"light-blue\"><code>Light Blue</code></button>\n<button data-md-color-accent=\"cyan\"><code>Cyan</code></button>\n<button data-md-color-accent=\"teal\"><code>Teal</code></button>\n<button data-md-color-accent=\"green\"><code>Green</code></button>\n<button data-md-color-accent=\"light-green\"><code>Light Green</code></button>\n<button data-md-color-accent=\"lime\"><code>Lime</code></button>\n<button data-md-color-accent=\"yellow\"><code>Yellow</code></button>\n<button data-md-color-accent=\"amber\"><code>Amber</code></button>\n<button data-md-color-accent=\"orange\"><code>Orange</code></button>\n<button data-md-color-accent=\"deep-orange\"><code>Deep Orange</code></button>\n</div>\n<script>\n  var buttons = document.querySelectorAll(\"button[data-md-color-accent]\");\n  Array.prototype.forEach.call(buttons, function(button) {\n    button.addEventListener(\"click\", function() {\n      document.body.dataset.mdColorAccent = this.dataset.mdColorAccent;\n      localStorage.setItem(\"data-md-color-accent\",this.dataset.mdColorAccent);\n    })\n  })\n</script>\n\n<style>\nbutton[data-md-color-accent]> code {\n    background-color: var(--md-code-bg-color);\n    color: var(--md-accent-fg-color);\n  }\nbutton[data-md-color-primary] > code {\n    background-color: var(--md-code-bg-color);\n    color: var(--md-primary-fg-color);\n  }\nbutton[data-md-color-primary='white'] > code {\n    background-color: var(--md-primary-bg-color);\n    color: var(--md-primary-fg-color);\n  }\nbutton[data-md-color-accent],button[data-md-color-primary],button[data-md-color-scheme]{\n    width: 8.4rem;\n    margin-bottom: .4rem;\n    padding: 2.4rem .4rem .4rem;\n    transition: background-color .25s,opacity .25s;\n    border-radius: .2rem;\n    color: #fff;\n    font-size: .8rem;\n    text-align: left;\n    cursor: pointer;\n}\nbutton[data-md-color-accent]{\n  background-color: var(--md-accent-fg-color);\n}\nbutton[data-md-color-primary]{\n  background-color: var(--md-primary-fg-color);\n}\nbutton[data-md-color-scheme='default']{\n  background-color: hsla(0, 0%, 100%, 1);\n}\nbutton[data-md-color-scheme='slate']{\n  background-color: var(--md-default-bg-color);\n}\nbutton[data-md-color-accent]:hover, button[data-md-color-primary]:hover {\n    opacity: .75;\n}\n</style>", "timestamp": "2025-10-24T11:40:48.463351"}
{"source": "github", "repo": "ctf-wiki/ctf-wiki", "file": "docs/zh-tw/docs/usage.md", "url": "https://github.com/ctf-wiki/ctf-wiki/blob/master/docs/zh-tw/docs/usage.md", "content": "# 如何使用 CTF Wiki\n\n## 簡介\n\nCTF Wiki 由三個姊妹項目構成\n\n- [ctf-wiki](https://github.com/ctf-wiki/ctf-wiki)，介紹 CTF 相關安全知識。\n- [ctf-challenges](https://github.com/ctf-wiki/ctf-challenges)，存儲 CTF Wiki 中使用到的題目以及一些典型題目的附件、題解。\n- [ctf-tools](https://github.com/ctf-wiki/ctf-tools)，介紹 CTF 中常用到的工具。\n\n## 如何找題目附件\n\n我們可以在 `ctf-challenges` 倉庫下找到題目附件。以[基本 ROP](https://ctf-wiki.org/pwn/linux/user-mode/stackoverflow/x86/basic-rop/) 中的題目爲例，具體路徑如下：<https://github.com/ctf-wiki/ctf-challenges/tree/master/pwn/linux/user-mode/stackoverflow>。\n", "timestamp": "2025-10-24T11:41:05.518691"}
