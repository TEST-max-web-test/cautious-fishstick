{"source": "github", "repo": "wtsxDev/reverse-engineering", "file": "README.md", "url": "https://github.com/wtsxDev/reverse-engineering/blob/master/README.md", "content": "## Reverse Engineering resources  \n[![Awesome](https://2.bp.blogspot.com/-nz0jFFFA4Hc/WHubiaz8ecI/AAAAAAAAB08/g2erX6roVBYCfwWjIGUOBYMkcB7ghRL2wCLcB/s1600/reverse%2Bengineering.png)](http://kalitut.com)\nA curated list of awesome reversing resources   \n\n- [Awesome Reversing](#awesome-reversing)\n    - [Books](#books)\n    - [Courses](#courses)\n    - [Practice](#practice)\n    - [Hex Editors](#hex-editors)\n    - [Binary Format](#binary-format)\n    - [Disassemblers](#disassemblers)\n    - [Binary Analysis](#binary-analysis)\n    - [Bytecode Analysis](#bytecode-analysis)\n    - [Import Reconstruction](#import-reconstruction)\n    - [Dynamic Analysis](#dynamic-analysis)\n    - [Debugging](#debugging)\n    - [Mac Decrypt](#mac-decrypt)\n    - [Document Analysis](#document-analysis)\n    - [Scripting](#scripting)\n    - [Android](#android)\n    - [Yara](#yara)\n\n- - -\n\n## Books\n\n*Reverse Engineering Books*\n\n* [The IDA Pro Book](http://amzn.to/2jTicOg)\n* [Radare2 Book](https://www.gitbook.com/book/radare/radare2book/details)\n* [Reverse Engineering for Beginners](http://beginners.re/)\n* [The Art of Assembly Language](http://amzn.to/2jlxTNp)\n* [Practical Reverse Engineering](http://amzn.to/2iusXRW)\n* [Reversing: Secrets of Reverse Engineering](http://amzn.to/2jlnBwX)\n* [Practical Malware Analysis](http://amzn.to/2jljYqE)\n* [Malware Analyst's Cookbook](http://amzn.to/2iWPJDd)\n* [Gray Hat Hacking](http://amzn.to/2jllIAi)\n* [Access Denied](https://github.com/shaykhsiddique/academic-/blob/master/CSE107/Access%20Denied.pdf)\n* [The Art of Memory Forensics](http://amzn.to/2jMJQs0)\n* [Hacking: The Art of Exploitation](http://amzn.to/2jnkV19)\n* [Fuzzing for Software Security](http://amzn.to/2jMKCWc)\n* [Art of Software Security Assessment](http://amzn.to/2jlvtyt)\n* [The Antivirus Hacker's Handbook](http://amzn.to/2jn9G99)\n* [The Rootkit Arsenal](http://amzn.to/2jlgioK)\n* [Windows Internals Part 1](http://amzn.to/2jlo9mA) [Part 2](http://amzn.to/2jMLCth)\n* [Inside Windows Debugging](http://amzn.to/2iqFTxf)\n* [iOS Reverse Engineering](https://github.com/iosre/iOSAppReverseEngineering)\n\n## Courses\n\n*Reverse Engineering Courses*\n\n* [Lenas Reversing for Newbies](https://tuts4you.com/download.php?list.17)\n* [Open Security Training](http://opensecuritytraining.info/Training.html)\n* [Dr. Fu's Malware Analysis](http://fumalwareanalysis.blogspot.sg/p/malware-analysis-tutorials-reverse.html)\n* [Binary Auditing Course](http://www.binary-auditing.com/)\n* [TiGa's Video Tutorials](http://www.woodmann.com/TiGa/)\n* [Legend of Random](https://tuts4you.com/download.php?list.97)\n* [Modern Binary Exploitation](http://security.cs.rpi.edu/courses/binexp-spring2015/)\n* [RPISEC Malware Course](https://github.com/RPISEC/Malware)\n* [SANS FOR 610 GREM](https://www.sans.org/course/reverse-engineering-malware-malware-analysis-tools-techniques/Type/asc/all)\n* [REcon Training](https://recon.cx/2015/training.html)\n* [Blackhat Training](https://www.blackhat.com/us-16/training/)\n* [Offensive Security](https://www.offensive-security.com/information-security-training/)\n* [Corelan Training](https://www.corelan.be/index.php/articles/#cat_exploit-writing-tutorials)\n* [Offensive and Defensive Android Reversing](https://github.com/rednaga/training/raw/master/DEFCON23/O%26D%20-%20Android%20Reverse%20Engineering.pdf)\n\n## Practice\n\n*Practice Reverse Engineering.  Be careful with malware.*\n\n* [Crackmes.de](http://www.crackmes.de/)\n* [OSX Crackmes](https://reverse.put.as/crackmes/)\n* [ESET Challenges](http://www.joineset.com/jobs-analyst.html)\n* [Flare-on Challenges](http://flare-on.com/)\n* [Github CTF Archives](http://github.com/ctfs/)\n* [Reverse Engineering Challenges](http://challenges.re/)\n* [xorpd Advanced Assembly Exercises](http://www.xorpd.net/pages/xchg_rax/snip_00.html)\n* [Virusshare.com](http://virusshare.com/)\n* [Contagio](http://contagiodump.blogspot.com/)\n* [Malware-Traffic-Analysis](https://malware-traffic-analysis.com/)\n* [Malshare](http://malshare.com/)\n* [Malware Blacklist](http://www.malwareblacklist.com/showMDL.php)\n* [malwr.com](https://malwr.com/)\n* [vxvault](http://vxvault.net/)\n\n## Hex Editors\n\n*Hex Editors*\n\n* [HxD](https://mh-nexus.de/en/hxd/)\n* [010 Editor](http://www.sweetscape.com/010editor/)\n* [Hex Workshop](http://www.hexworkshop.com/)\n* [HexFiend](http://ridiculousfish.com/hexfiend/)\n* [Hiew](http://www.hiew.ru/)\n* [hecate](https://github.com/evanmiller/hecate)\n\n## Binary Format\n\n*Binary Format Tools*\n\n* [CFF Explorer](http://www.ntcore.com/exsuite.php)\n* [Cerbero Profiler](http://cerbero.io/profiler/) // [Lite PE Insider](http://cerbero.io/peinsider/)\n* [Detect It Easy](http://ntinfo.biz/)\n* [PeStudio](http://www.winitor.com/)\n* [PEiD](https://tuts4you.com/download.php?view.398)\n* [MachoView](https://github.com/gdbinit/MachOView)\n* [nm](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/nm.1.html) - View Symbols\n* [file](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/file.1.html) - File information\n* [codesign](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/codesign.1.html) - Code signing information usage: codesign -dvvv filename\n\n## Disassemblers\n\n*Disassemblers*\n\n* [IDA Pro](https://www.hex-rays.com/products/ida/index.shtml)\n* [GHIDRA](https://ghidra-sre.org/)\n* [Binary Ninja](https://binary.ninja/)\n* [Radare](http://www.radare.org/r/)\n* [Hopper](http://hopperapp.com/)\n* [Capstone](http://www.capstone-engine.org/)\n* [objdump](http://linux.die.net/man/1/objdump)\n* [fREedom](https://github.com/cseagle/fREedom)\n\n## Binary Analysis\n\n*Binary Analysis Resources*\n\n* [Mobius Resources](http://www.msreverseengineering.com/research/)\n* [z3](https://z3.codeplex.com/)\n* [bap](https://github.com/BinaryAnalysisPlatform/bap)\n* [angr](https://github.com/angr/angr)\n\n## Bytecode Analysis\n\n*Bytecode Analysis Tools*\n\n* [dnSpy](https://github.com/0xd4d/dnSpy)\n* [Bytecode Viewer](https://bytecodeviewer.com/)\n* [Bytecode Visualizer](http://www.drgarbage.com/bytecode-visualizer/)\n* [JPEXS Flash Decompiler](https://www.free-decompiler.com/flash/)\n\n## Import Reconstruction\n\n*Import Reconstruction Tools*\n\n* [ImpRec](http://www.woodmann.com/collaborative/tools/index.php/ImpREC)\n* [Scylla](https://github.com/NtQuery/Scylla)\n* [LordPE](http://www.woodmann.com/collaborative/tools/images/Bin_LordPE_2010-6-29_3.9_LordPE_1.41_Deluxe_b.zip)\n\n## Dynamic Analysis\n\n*Dynamic Analysis Tools*\n\n* [ProcessHacker](http://processhacker.sourceforge.net/)\n* [Process Explorer](https://technet.microsoft.com/en-us/sysinternals/processexplorer)\n* [Process Monitor](https://technet.microsoft.com/en-us/sysinternals/processmonitor)\n* [Autoruns](https://technet.microsoft.com/en-us/sysinternals/bb963902)\n* [Noriben](https://github.com/Rurik/Noriben)\n* [API Monitor](http://www.rohitab.com/apimonitor)\n* [iNetSim](http://www.inetsim.org/)\n* [SmartSniff](http://www.nirsoft.net/utils/smsniff.html)\n* [TCPView](https://docs.microsoft.com/en-us/sysinternals/downloads/tcpview)\n* [Wireshark](https://www.wireshark.org/download.html)\n* [Fakenet](http://practicalmalwareanalysis.com/fakenet/)\n* [Volatility](https://github.com/volatilityfoundation/volatility)\n* [Dumpit](http://www.moonsols.com/products/)\n* [LiME](https://github.com/504ensicsLabs/LiME)\n* [Cuckoo](https://www.cuckoosandbox.org/)\n* [Objective-See Utilities](https://objective-see.com/products.html)\n* [XCode Instruments](https://developer.apple.com/xcode/download/) - XCode Instruments for Monitoring Files and Processes [User Guide](https://developer.apple.com/library/watchos/documentation/DeveloperTools/Conceptual/InstrumentsUserGuide/index.html)\n* [dtrace](http://dtrace.org/blogs/brendan/2011/10/10/top-10-dtrace-scripts-for-mac-os-x/) - sudo dtruss = strace [dtrace recipes](http://mfukar.github.io/2014/03/19/dtrace.html)\n* [fs_usage](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/fs_usage.1.html) - report system calls and page faults related to filesystem activity in real-time.  File I/O: fs_usage -w -f filesystem\n* [dmesg](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man8/dmesg.8.html) - display the system message buffer\n\n## Debugging\n\n*Debugging Tools*\n\n* [WinDbg](https://msdn.microsoft.com/en-us/windows/hardware/hh852365.aspx)\n* [OllyDbg v1.10](http://www.ollydbg.de/)\n* [OllyDbg v2.01](http://www.ollydbg.de/version2.html)\n* [OllySnD](https://tuts4you.com/download.php?view.2061)\n* [Olly Shadow](https://tuts4you.com/download.php?view.6)\n* [Olly CiMs](https://tuts4you.com/download.php?view.1206)\n* [Olly UST_2bg](https://tuts4you.com/download.php?view.1206)\n* [x64dbg](http://x64dbg.com/#start)\n* [gdb](https://www.gnu.org/software/gdb/)\n* [vdb](https://github.com/vivisect/vivisect)\n* [lldb](http://lldb.llvm.org/)\n* [qira](http://qira.me/)\n* [unicorn](https://github.com/unicorn-engine/unicorn)\n\n## Mac Decrypt\n\n*Mac Decrypting Tools*\n\n* [Cerbero Profiler](http://cerbero-blog.com/?p=1311) - Select all -> Copy to new file\n* [AppEncryptor](https://github.com/AlanQuatermain/appencryptor) - Tool for decrypting\n* [Class-Dump](http://stevenygard.com/projects/class-dump/) - use deprotect option\n* [readmem](https://github.com/gdbinit/readmem) - OS X Reverser's process dumping tool\n\n## Document Analysis\n\n*Document Analysis Tools*\n\n* [Ole Tools](http://www.decalage.info/python/oletools)\n* [Didier's PDF Tools](http://blog.didierstevens.com/programs/pdf-tools/)\n* [Origami](https://github.com/cogent/origami-pdf)\n\n## Scripting\n\n*Scripting*\n\n* [IDA Python Src](https://github.com/idapython/src)\n* [IDC Functions Doc](https://www.hex-rays.com/products/ida/support/idadoc/162.shtml)\n* [Using IDAPython to Make your Life Easier](http://researchcenter.paloaltonetworks.com/tag/idapython/)\n* [Introduction to IDA Python](https://tuts4you.com/download.php?view.3229)\n* [The Beginner's Guide to IDA Python](https://leanpub.com/IDAPython-Book)\n* [IDA Plugin Contest](https://www.hex-rays.com/contests/)\n* [onehawt IDA Plugin List](https://github.com/onethawt/idaplugins-list)\n* [pefile Python Library](https://github.com/erocarrera/pefile)\n\n## Android\n\n*Android tools*\n\n* [Android Studio](http://developer.android.com/sdk/index.html)\n* [APKtool](http://ibotpeaches.github.io/Apktool/)\n* [dex2jar](https://github.com/pxb1988/dex2jar)\n* [Bytecode Viewer](https://bytecodeviewer.com/)\n* [IDA Pro](https://www.hex-rays.com/products/ida/index.shtml)\n* [JaDx](https://github.com/skylot/jadx)\n\n## Yara\n\n*Yara Resources*\n\n* [Yara docs](http://yara.readthedocs.org/en/v3.4.0/writingrules.html)\n* [Cheatsheet](https://gist.github.com/0xtyh/eeabc765e9befad9b80a)\n* [yarGen](https://github.com/Neo23x0/yarGen)\n* [Yara First Presentation](https://www.first.org/resources/papers/conference2014/first_2014_-_schuster-_andreas_-_yara_basic_and_advanced_20140619.pdf)\n\nPlease have a look at\n* [Top Hacking Books](http://www.kalitut.com/2016/12/best-ethical-hacking-books.html)\n* [Top Reverse Engineering Books](http://www.kalitut.com/2017/01/Best-reverse-engineering-books.html)\n* [Top Machine learning Books](http://www.kalitut.com/2017/01/machine-learning-book.html)\n* [Top 5 books Programming Books](http://www.kalitut.com/2017/01/Top-Programming-Books.html)\n* [Top Java Books](http://www.kalitut.com/2017/01/Best-Java-Programming-Books.html)\n\n", "timestamp": "2025-10-21T22:05:56.275776"}
