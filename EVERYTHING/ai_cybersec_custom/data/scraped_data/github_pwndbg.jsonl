{"source": "github", "repo": "pwndbg/pwndbg", "file": ".github/ISSUE_TEMPLATE/bug_report.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/.github/ISSUE_TEMPLATE/bug_report.md", "content": "---\nname: Bug report\nabout: Create a report to help us improve\ntitle: ''\nlabels: bug\nassignees: ''\n\n---\n\n<!--\nBefore reporting a new issue, make sure that we do not have any duplicates already open.\nIf there is one it might be good to take part in the discussion there.\n\nPlease make sure you have checked that the issue persists on LATEST pwndbg version.\n\nBelow is a template for BUG REPORTS.\nDon't include it if this is a FEATURE REQUEST.\n-->\n\n\n### Description\n\n<!--\nBriefly describe the problem you are having in a few paragraphs.\n-->\n\n### Steps to reproduce\n\n<!--\nWhat do we have to do to reproduce the problem?\nIf this is connected to particular C/asm code,\nplease provide the smallest C code that reproduces the issue.\n-->\n\n### My setup\n\n<!--\nShow us your gdb/python/pwndbg/OS/IDA Pro version (depending on your case).\n\nNOTE: We are currently supporting only Ubuntu installations.\nIt is known that pwndbg is not fully working e.g. on Arch Linux (the heap stuff is not working there).\nIf you would like to change this situation - help us improving pwndbg and supporting other distros!\n\nThis can be displayed in pwndbg through `version` command.\n\nIf it is somehow unavailable, use:\n* `show version` - for gdb\n* `py import sys; print(sys.version)` - for python\n* pwndbg version/git commit id\n-->\n", "timestamp": "2025-10-24T11:39:13.269025"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": ".github/ISSUE_TEMPLATE/feature_request.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/.github/ISSUE_TEMPLATE/feature_request.md", "content": "---\nname: Feature request\nabout: Suggest an idea for this project\ntitle: ''\nlabels: feature\nassignees: ''\n\n---\n\n**Is your feature request related to a problem? Please describe.**\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\n\n**Describe the solution you'd like**\nA clear and concise description of what you want to happen.\n\n**Describe alternatives you've considered**\nA clear and concise description of any alternative solutions or features you've considered.\n\n**Additional context**\nAdd any other context or screenshots about the feature request here.\n", "timestamp": "2025-10-24T11:39:13.322273"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "LICENSE.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/LICENSE.md", "content": "The MIT License (MIT)\n\nCopyright (c) 2025 Dominik 'Disconnect3d' Czarnota\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n", "timestamp": "2025-10-24T11:39:15.033427"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "README.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/README.md", "content": "![repository-open-graph](https://github.com/pwndbg/pwndbg/assets/150354584/77b2e438-898f-416f-a989-4bef30759627)\n# pwndbg\n\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg?maxAge=2592000)](https://choosealicense.com/licenses/mit/)\n[![Tests](https://github.com/pwndbg/pwndbg/actions/workflows/tests.yml/badge.svg?branch=dev&event=push)](https://github.com/pwndbg/pwndbg/actions/workflows/tests.yml)\n[![codecov.io](https://codecov.io/github/pwndbg/pwndbg/branch/dev/badge.svg?token=i1cBPFVCav)](https://app.codecov.io/github/pwndbg/pwndbg/tree/dev)\n[![Discord](https://img.shields.io/discord/843809097920413717?label=Discord&style=plastic)](https://discord.gg/x47DssnGwm)\n\n`pwndbg` (/paʊnˈdiˌbʌɡ/) is a GDB and LLDB plug-in that makes debugging suck less,\nwith a focus on features needed by low-level software developers, hardware hackers,\nreverse-engineers and exploit developers.\n\nIt has a boatload of features, see our [Features page](https://pwndbg.re/pwndbg/latest/features/)\nand [CHEATSHEET][CHEATSHEET] (feel free to print it!). If you have any questions you may read the\n[documentation](https://pwndbg.re/pwndbg/latest/) or asks us in our [Discord server](https://discord.gg/x47DssnGwm).\n\n[CHEATSHEET]: https://pwndbg.re/pwndbg/dev/CHEATSHEET.pdf\n\n## Why?\n\nVanilla GDB and LLDB are terrible to use for reverse engineering and exploit development.\nTyping `x/30gx $rsp` or navigating cumbersome LLDB commands is not fun and often provides\nminimal information. The year is 2025, and core debuggers still lack many user-friendly\nfeatures such as a robust hexdump command. WinDbg users are completely lost when they\noccasionally need to bump into GDB or LLDB.\n\nPwndbg is a Python module which can be loaded into GDB or run as a REPL interface for LLDB.\nIt provides a suite of utilities and enhancements that fill the gaps left by these debuggers,\nsmoothing out rough edges and making them more user-friendly.\n\n## Installation\n\nSee [installation instructions](https://pwndbg.re/pwndbg/latest/setup).\n\n## What about ...?\n\nMany past ([gdbinit][gdbinit], [PEDA][PEDA]) and present projects ([GEF][GEF],\n[bata24/GEF][bata24/GEF]) offer great features, but are hard to extend and are packaged\nas large single files ([103KB][gdbinit2], [195KB][peda.py], [423KB][gef.py],\n[4.12MB][bata24/gef.py]). Pwndbg aims to replace them with a faster, cleaner, and\nmore robust implementation.\n\n[gdbinit]: https://github.com/gdbinit/Gdbinit\n[gdbinit2]: https://github.com/gdbinit/Gdbinit/blob/master/gdbinit\n[PEDA]: https://github.com/longld/peda\n[peda.py]: https://github.com/longld/peda/blob/master/peda.py\n[GEF]: https://github.com/hugsy/gef\n[gef.py]: https://github.com/hugsy/gef/blob/main/gef.py\n[bata24/GEF]: https://github.com/bata24/gef\n[bata24/gef.py]: https://github.com/bata24/gef/blob/dev/gef.py\n\n## When to Use GDB or LLDB?\n\nPwndbg supports both GDB and LLDB, and each debugger has its own strengths.\nHere's a quick guide to help you decide which one to use:\n\n| Use Case                                        | Supported Debugger   |\n|-------------------------------------------------|----------------------|\n| Debugging Linux binaries or ELF files           | **GDB**, **LLDB**    |\n| Debugging Mach-O binaries on macOS              | **LLDB**             |\n| Linux kernel debugging (qemu-system)            | **GDB**, **LLDB**    |\n| Linux user-space emulation (qemu-user)          | **GDB**              |\n| Embedded debugging (ARM Cortex M* or RISC-V/32) | **GDB**, **LLDB**    |\n\nPwndbg ensures a consistent experience across both, so switching between them is seamless.\n> The LLDB implementation in pwndbg is still in early-stage and may contain bugs or limitations.<br/>\n> Known issues are tracked in [GitHub Issues][lldb_tracker].\n>\n> If you encounter any problems, feel free to report them or discuss on our [Discord server](https://discord.gg/x47DssnGwm).\n\n[lldb_tracker]: https://github.com/pwndbg/pwndbg/issues?q=is%3Aissue%20state%3Aopen%20label%3A%22LLDB%20Port%22\n\n### Compatibility Table\n| Feature     | Supported Version               | Notes                                |\n|-------------|---------------------------------|--------------------------------------|\n| pwndbg-gdb  | - Python 3.10+ <br/>- GDB 12.1+ | Battle-tested on Ubuntu 22.04/24.04  |\n| pwndbg-lldb | - Python 3.12+ <br/>- LLDB 19+  | Experimental/early-stage support     |\n| qemu-user   | QEMU 8.1+                       | vFile API is needed for vmmap        |\n| qemu-system | QEMU 6.2+                       | Supported version since ubuntu 22.04 |\n\n\n## Contributing\nPull requests are welcome ❤️. Check out the [Contributing Guide](https://pwndbg.re/pwndbg/dev/contributing/).\n\n## Acknowledgements\nPwndbg was originally created by [Zach Riggle](https://github.com/zachriggle), who is no longer with us. We want to thank Zach for all of his contributions to pwndbg and the wider security community.\n", "timestamp": "2025-10-24T11:39:15.301612"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/blog/posts/pwndbg-coding-sprints-report.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/blog/posts/pwndbg-coding-sprints-report.md", "content": "---\ntitle: Pwndbg coding sprints report\ndate: 2022-08-21\nauthors: [disconnect3d]\nslug: pwndbg-coding-sprints-report\ndescription: >\n  Report of the two coding sprints with Pwndbg\n---\n\n(originally posted on https://disconnect3d.pl/2022/08/21/pwndbg-coding-sprints/)\n\nThis blog post is a report of the two coding sprints for the [Pwndbg project](https://github.com/pwndbg/pwndbg) that I organized first on the EuroPython 2022 conference and then, taking inspiration from the previous one, in the Hackerspace Kraków, located in Cracow, Poland.\n\nPS: If you are only looking for a list of things done, scroll down!\n\n<!-- more -->\n\n## Where I got the idea for sprints?\n\nI have recently attended the [EuroPython 2022](https://ep2022.europython.eu) conference and I enjoyed the “sprints” there. In short, a [sprint](https://ep2022.europython.eu/sprints#what-is-a-sprint-) is a semi-organized event, where anyone can announce a project they will be working on and others can join them. This helps both the projects and the event participants to learn about the project and to make first-time contributions. At the EuroPython conference, [there were 16 officially announced projects](https://ep2022.europython.eu/sprints#2022-sprints-listings), but I know that even more projects were being worked on in practice. Of course, other communities or conferences also do this (e.g. [NixCon](https://2022.nixcon.org/#hackday)).\n\nAt the EuroPython conference, I announced my own sprint to work on the Pwndbg project that I maintain. Having no expectations, I felt excited when four people showed up to learn something new and hack together on the project. Later, taking inspiration from it, I organized another sprint, this time in Cracow in the local Hackerspace with even a bigger response. Below, you can read a small report on the two sprints that have happened.\n\n## My general idea for a Pwndbg sprint\nPwndbg is written in Python, so on one hand is easy to hack on, but on the other hand it is a plugin for GDB, a console debugger for native programs (e.g. ones written in C, C++, Go or Rust). The general idea of Pwndbg is to alleviate the pain points of working with and improve the UX of GDB when debugging assembly code, reverse engineering a binary or during exploit development.\n\nSince not everyone is familiar with debuggers or the underlyings of programs execution (e.g. assembly code, CPU registers or stack or heap memory) I knew that I had to make some introduction to those concepts and if possible, prepare a list of simple tasks, so that people can get familiar with the codebase and the tool and contribute something.\n\n\n## EuroPython 2022 sprint\n\nOn the first sprint, four people showed up, mostly having no prior experience with the topic. We started with an introduction to what GDB and Pwndbg are and why and when they are useful.\n\nFor this, I took a small C program that had a buffer overflow bug:\n```c\n#include <stdio.h>\n#include <string.h>\n\nint main(int argc, char* argv[]) {\n    char name[16] = {0};\n\n    // NOTE: We copy the `argv[1]` string which may be of arbitrary length\n    // into the `name` buffer which is only of 16-bytes long. Thus, we can\n    // overwrite the stack memory of the program past the `name` buffer.\n    strcpy(name, argv[1]);\n\n    printf(\"Hello %s!\\n\", name);\n}\n```\n\nThen, after compiling it (`gcc main.c`), we ran the program twice to see that it will crash if we provide a too long string as its argument:\n\n```bash\n$ ./a.out Disconnect3d\nHello Disconnect3d!\n\n$ ./a.out Disconnect3d_at_EuroPython\nHello Disconnect3d_at_EuroPython!\n*** stack smashing detected ***: <unknown> terminated\nAborted (core dumped)\n```\n\nThen, I explained that the \"stack smashing detected\" we see is the \"stack canaries\" (also called \"stack cookies\") exploit mitigation added by compilers. This compiler feature adds a special 8-bytes canary value after the function's local variables located on the stack, so that then a stack frame may look like this:\n\n```\n------------------------------   lower addresses\nchar name[16];                         |\nuint8_t canary[8];                     |\nvoid* function_return_address;         V\n------------------------------   higher addresses\n```\n\nThis local stack canary value is then filled in just after the function’s prologue and is verified against a global value before the function returns to see if the stack was not corrupted (starting from the canary). Of course this may not detect all possible stack memory corruptions but it often makes it impossible to exploit a program (e.g. by changing the return address, also located on the stack), knowing just this vulnerability.\n\nThe stack canary mitigation can also be disabled. And if it were done (by passing in a `-fno-stack-protector` flag during compilation), we would get a different result when running the resulting program:\n\n```bash\n$ gcc -fno-stack-protector buf.c\n\n$ ./a.out Disconnect3d_on_EuroPython\nHello Disconnect3d_on_EuroPython!\nSegmentation fault (core dumped)\n```\n\nNow, the \"stack smashing detected\" is gone, but the program still crashed, because we still corrupted a part of its memory that we shouldn't have touched in a way that made the program do illegal things (e.g. accessing unmapped memory).\n\nDuring the sprint, we also ran a GDB+Pwndbg session to see the exact instructions that placed the canary value on the stack memory, to see that our input string was located just before it and how the canary was checked just before the function was returned.\n\nI am not going to describe all of this here, but you can see some of it in the below asciinema recording.\n\n[![asciicast](https://asciinema.org/a/zuuwfJIZrpu6IjuwWhiNgAdim.svg)](https://asciinema.org/a/zuuwfJIZrpu6IjuwWhiNgAdim)\n\n\n## Hackerspace Kraków sprint\n\nSince the second sprint was an ad-hoc event, I had to organize it myself. As a member of Hackerspace Kraków, I was able to reserve the hackerspace's softroom, which is a perfect place for people to hack on things using their computers. Then, I advertised the event on the [Hackerspace's mailing list](https://groups.google.com/g/hackerspace-krk/c/MP6mX4I5vXY) and on a few other mediums.\n\nI did not expect many people to come, especially that I advertised the sprint ~2 days before the event.\n\nBut... 8 people (!) showed up (excluding me). I prepared a document with some basic information and tasks, which can be found [here](https://hackmd.io/vjfZ4GIYS8eu_j-7q-fkBg) (though, it is in Polish and it was modified during and after the sprint).\n\nI won't lie: most people that came were friends of mine, some of which I play [CTFs](https://en.wikipedia.org/wiki/Capture_the_flag_(cybersecurity)) with. However, not all of them had really used or developed Pwndbg before.\n\n## Accomplishments from the two sprints\n\nOn the EP sprint, since we were just a group of four, we focused on small improvements to the codebase. In total, we did the following:\n* [reviewed and merged the fs/gs_base fetching improvement PR](https://github.com/pwndbg/pwndbg/pull/1030),\n* [pinned the project's dependencies](https://github.com/pwndbg/pwndbg/pull/1033),\n* [updated the unicorn dependency version](https://github.com/pwndbg/pwndbg/pull/1034),\n* [added a \"tip of the day\" feature](https://github.com/pwndbg/pwndbg/pull/1036),\n* [improved the UX of using Pwndbg within a Python virtual environment](https://github.com/pwndbg/pwndbg/pull/1037),\n* and also [worked on enhancing the display of arguments when stopping on a call to the printf functions family](https://github.com/pwndbg/pwndbg/pull/1038).\n\nThe last item from the list was the hardest to jump on and it still requires enhancements until it is merged. Nonetheless, all of this was a nice outcome from the whole sprint :).\n\nOn the second sprint, while we were a bigger group, we had much more limited time (since instead of having ~8 hours, we had just a few). Anyway, we were able to do the following:\n\n* [Cleanup some code leftover after dropping Python 2 support](https://github.com/pwndbg/pwndbg/pull/1052),\n* [Added documentation on how to debug Pwndbg using PyCharm remote debugging](https://github.com/pwndbg/pwndbg/pull/1058),\n* Reviewed and merged the PRs that [sets `$base_heap` variable](https://github.com/pwndbg/pwndbg/pull/1051) and [a tip for it](https://github.com/pwndbg/pwndbg/pull/1053), which may be useful for heap exploitation,\n* [Fix the X30 register display on AARCH64 targets](https://github.com/pwndbg/pwndbg/pull/1054),\n* [Fix `context args` display when PC/IP register pointed to unmapped memory](https://github.com/pwndbg/pwndbg/pull/1055),\n* [Fixed the `xor` and `memfrob` commands and added tests for them (! :D)](https://github.com/pwndbg/pwndbg/pull/1057),\n* [Worked on adding a way to dump memory that can be copied right away as C or Python code](https://github.com/pwndbg/pwndbg/pull/1056) (this needs to be changed to a command flag),\n* Investigated a [potential parsing issue](https://github.com/pwndbg/pwndbg/issues/1050), even looking at GDB's command parsing source code, [implemented potential patch](https://github.com/pwndbg/pwndbg/pull/1062), which only later turned out to be redundant and the issue to be invalid.\n\n## Summary and what's next?\n\nOrganizing those sprints helped me to get back to develop the Pwndbg project more and and attract more people to contribute to it. I also think that more conferences should have this kind of attractions (similarly as more conferences should have lightning talk sessions, heh).\n\nRegarding the Pwndbg sprints, I am organizing another one this week in Cracow on Tuesday, so if you live nearby and are interested in learning about Pwndbg or contributing to the project, feel invited! :)\n\nPS: Thanks a lot to [@arturcygan](https://twitter.com/arturcygan) for reviewing this blog post.\n", "timestamp": "2025-10-24T11:39:18.337705"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/breakpoint/break-if-not-taken.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/breakpoint/break-if-not-taken.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# break-if-not-taken\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: break-if-not-taken [-h] branch\n\n```\n\nBreaks on a branch if it is not taken.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|branch|The branch instruction to break on.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:18.881934"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/breakpoint/break-if-taken.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/breakpoint/break-if-taken.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# break-if-taken\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: break-if-taken [-h] branch\n\n```\n\nBreaks on a branch if it is taken.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|branch|The branch instruction to break on.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:18.995806"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/breakpoint/breakrva.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/breakpoint/breakrva.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# breakrva\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: breakrva [-h] [offset] [module]\n\n```\n\nBreak at RVA from PIE base.\n\n**Alias:** brva\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|offset|Offset to add. (default: 0)|\n|module|Module to choose as base. Defaults to the target executable. (default: '')|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:19.097938"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/breakpoint/ignore.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/breakpoint/ignore.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# ignore\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: ignore [-h] [N] COUNT\n\n```\n\nSet ignore-count of breakpoint number N to COUNT.\n\nWhile the ignore count is positive, execution will not stop on the breakpoint.\n\nBy default, if `N' is ommitted, the last breakpoint (i.e. greatest breakpoint number) will be used.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|bpnum|The breakpoint number N.|\n|count|The number to set COUNT.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:19.150095"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/context/context.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/context/context.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# context\n\n```text\nusage: context [-h] [--on] [--off] [subcontext ...]\n\n```\n\nPrint out the currently enabled context sections.\n\nThis is the text that gets printed on every stop. It can be useful\nto run this command manually when you change some process/debugger\nstate but don't want to step/continue (e.g. after using the `down`\nand `up` commands).\n\n**Alias:** ctx\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|subcontext|Submenu to display: 'regs', 'disasm', 'code', 'stack', 'backtrace', 'ghidra', 'args', 'threads', 'heap_tracker', 'expressions', and/or 'last_signal'|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n||--on|Show the section(s) in subsequent context commands again. The section(s) have to be in the 'context-sections' list.|\n||--off|Do not show the section(s) in subsequent context commands even though they might be in the 'context-sections' list.|\n\n### Notes\nTo see more commands related to context control run:\n```\npwndbg -c context\n```\nTo see context configuration run:\n```\nconfig context\n```\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n\n### Usage example\n\n<video autoplay loop muted playsinline alt=\"context example\">\n  <source src=\"../../../assets/videos/context-up-down.webm\" type=\"video/webm\">\n  <source src=\"../../../assets/videos/context-up-down.mp4\" type=\"video/mp4\">\n</video>\n", "timestamp": "2025-10-24T11:39:19.516955"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/context/contextnext.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/context/contextnext.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# contextnext\n\n```text\nusage: contextnext [-h] [count]\n\n```\n\nSelect next entry in context history.\n\n**Alias:** ctxn\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|count|The number of entries to go forward in history (default: 1)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:19.624501"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/context/contextoutput.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/context/contextoutput.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# contextoutput\n\n```text\nusage: contextoutput [-h] section path clearing [banner] [width]\n\n```\n\nSets the output of a context section.\n\n**Alias:** ctx-out\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|section|The section which is to be configured. ('regs', 'disasm', 'code', 'stack', 'backtrace', 'ghidra', 'args', 'threads', 'heap_tracker', 'expressions', and/or 'last_signal')|\n|path|The path to which the output is written|\n|clearing|Indicates whether to clear the output|\n|banner|Where a banner should be placed: both, top , bottom, none (default: 'both')|\n|width|Sets a fixed width (used for banner). Set to None for auto|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:19.719639"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/context/contextprev.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/context/contextprev.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# contextprev\n\n```text\nusage: contextprev [-h] [count]\n\n```\n\nSelect previous entry in context history.\n\n**Alias:** ctxp\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|count|The number of entries to go back in history (default: 1)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:19.794401"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/context/contextsearch.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/context/contextsearch.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# contextsearch\n\n```text\nusage: contextsearch [-h] needle [section]\n\n```\n\nSearch for a string in the context history and select that entry.\n\n**Alias:** ctxsearch\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|needle|The string to search for in the context history|\n|section|The section to search in. If not provided, search in all sections|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:19.851395"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/context/contextunwatch.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/context/contextunwatch.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# contextunwatch\n\n```text\nusage: contextunwatch [-h] num\n\n```\n\nRemoves an expression previously added to be watched.\n\n**Aliases:** ctx-unwatch, cunwatch\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|num|The expression number to be removed from context|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:19.911922"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/context/contextwatch.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/context/contextwatch.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# contextwatch\n\n```text\nusage: contextwatch [-h] [{eval,execute}] expression\n\n```\n\nAdds an expression to be shown on context.\n\nTo remove an expression, see `cunwatch`.\n\n**Aliases:** ctx-watch, cwatch\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|cmd|Command to be used with the expression. - eval: the expression is parsed and evaluated as in the debugged language. - execute: the expression is executed as a GDB command. (default: 'eval')|\n|expression|The expression to be evaluated and shown in context|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n### Examples\n```text\nFor watching variables/expressions:\n    cwatch BUF\n    cwatch ITEMS[0]\n\nFor running commands:\n    cwatch execute \"ds BUF\"\n    cwatch execute \"x/20x $rsp\"\n    cwatch execute \"info args\"\n```\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:20.001399"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/context/regs.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/context/regs.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# regs\n\n```text\nusage: regs [-h] [regs ...]\n\n```\n\nPrint out all registers and enhance the information.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|regs|Registers to be shown|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:20.075213"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/darwin_libsystem_mach-o/commpage.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/darwin_libsystem_mach-o/commpage.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# commpage\n\n```text\nusage: commpage [-h] [-v]\n\n```\n\nDumps all values from the macOS commpage.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-v|--verbose|Print detailed information.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:20.414219"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/developer/dev-dump-instruction.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/developer/dev-dump-instruction.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# dev-dump-instruction\n\n```text\nusage: dev-dump-instruction [-h] [-e] [-n] [address]\n\n```\n\nDump internal PwndbgInstruction attributes.\n\nUseful for debugging the disassembly and annotation subsystems\nin Pwndbg. See https://pwndbg.re/pwndbg/dev/contributing/improving-annotations/#bug-root-cause\nfor more information.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address to get the enhanced instruction from - must be in cache.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-e|--emulate|Force the use of emulation when enhancing the instruction, regardless of global 'emulate' setting.|\n|-n|--no-emulate|Disable the use of emulation when enhancing the instruction, regardless of global 'emulate' setting.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:20.692879"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/developer/log-level.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/developer/log-level.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# log-level\n\n```text\nusage: log-level [-h] [{debug,info,warning,error,critical}]\n\n```\n\nSet the log level.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|level|The log level to set. (default: 'warning')|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:20.748215"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/disassemble/emulate.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/disassemble/emulate.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# emulate\n\n```text\nusage: emulate [-h] [pc] [lines]\n\n```\n\nLike nearpc, but will emulate instructions from the current $PC forward.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|pc|Address to emulate near.|\n|lines|Number of lines to show on either side of the address.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:21.067875"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/disassemble/nearpc.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/disassemble/nearpc.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# nearpc\n\n```text\nusage: nearpc [-h] [-e] [pc] [lines]\n\n```\n\nDisassemble near a specified address.\n\n**Aliases:** pdisass, u\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|pc|Address to disassemble near. If this is the only argument and the value provided is small enough, it is interpreted as lines instead.|\n|lines|Number of lines to show on either side of the address.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-e|--emulate|Whether to emulate instructions to find the next ones or just linearly disassemble.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:21.145944"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/glibc_ptmalloc2_heap/arena.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/glibc_ptmalloc2_heap/arena.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# arena\n\n```text\nusage: arena [-h] [addr]\n\n```\n\nPrint the contents of an arena.\n\nDefault to the current thread's arena.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address of the arena.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:21.461107"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/glibc_ptmalloc2_heap/arenas.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/glibc_ptmalloc2_heap/arenas.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# arenas\n\n```text\nusage: arenas [-h]\n\n```\n\nList this process's arenas.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:21.531583"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/glibc_ptmalloc2_heap/bins.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/glibc_ptmalloc2_heap/bins.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# bins\n\n```text\nusage: bins [-h] [addr] [tcache_addr]\n\n```\n\nPrint the contents of all an arena's bins and a thread's tcache.\n\nDefault to the current thread's arena and tcache.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address of the arena.|\n|tcache_addr|Address of the tcache.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:21.626819"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/glibc_ptmalloc2_heap/fastbins.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/glibc_ptmalloc2_heap/fastbins.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# fastbins\n\n```text\nusage: fastbins [-h] [-v] [addr]\n\n```\n\nPrint the contents of an arena's fastbins.\n\nDefault to the current thread's arena.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address of the arena.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-v|--verbose|Show all fastbins, including empty ones|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:21.705939"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/glibc_ptmalloc2_heap/find-fake-fast.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/glibc_ptmalloc2_heap/find-fake-fast.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# find-fake-fast\n\n```text\nusage: find-fake-fast [-h] [--align] [--glibc-fastbin-bug]\n                      [--partial-overwrite]\n                      target_address [max_candidate_size]\n\n```\n\nFind candidate fake fast or tcache chunks overlapping the specified address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|target_address|Address of the word-sized value to overlap.|\n|max_candidate_size|Maximum size of fake chunks to find.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-a|--align|Whether the fake chunk must be aligned to MALLOC_ALIGNMENT. This is required for tcache chunks and for all chunks when Safe Linking is enabled|\n|-b|--glibc-fastbin-bug|Does the GLIBC fastbin size field bug affect the candidate size field width?|\n|-p|--partial-overwrite|Consider partial overwrite candidates, default behavior only shows word-size overwrites.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:21.792731"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/glibc_ptmalloc2_heap/heap.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/glibc_ptmalloc2_heap/heap.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# heap\n\n```text\nusage: heap [-h] [-v] [-s] [addr]\n\n```\n\nIteratively print chunks on a heap.\n\nDefault to the current thread's active heap.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address of the first chunk (malloc_chunk struct start, prev_size field).|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-v|--verbose|Print all chunk fields, even unused ones.|\n|-s|--simple|Simply print malloc_chunk struct's contents.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:21.876137"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/glibc_ptmalloc2_heap/hi.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/glibc_ptmalloc2_heap/hi.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# hi\n\n```text\nusage: hi [-h] [-v] [-s] [-f] addr\n\n```\n\nSearches all heaps to find if an address belongs to a chunk. If yes, prints the chunk.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address of the interest.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-v|--verbose|Print all chunk fields, even unused ones.|\n|-s|--simple|Simply print malloc_chunk struct's contents.|\n|-f|--fake|Allow fake chunks. If set, displays any memory as a heap chunk (even if its not a real chunk).|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:21.966250"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/glibc_ptmalloc2_heap/largebins.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/glibc_ptmalloc2_heap/largebins.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# largebins\n\n```text\nusage: largebins [-h] [-v] [addr]\n\n```\n\nPrint the contents of an arena's largebins.\n\nDefault to the current thread's arena.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address of the arena.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-v|--verbose|Show all largebins, including empty ones|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:22.016216"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/glibc_ptmalloc2_heap/malloc-chunk.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/glibc_ptmalloc2_heap/malloc-chunk.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# malloc-chunk\n\n```text\nusage: malloc-chunk [-h] [-f] [-v] [-s] [-d] [-n NEXT] addr\n\n```\n\nPrint a chunk.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address of the chunk (malloc_chunk struct start, prev_size field).|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-f|--fake|Is this a fake chunk?|\n|-v|--verbose|Print all chunk fields, even unused ones.|\n|-s|--simple|Simply print malloc_chunk struct's contents.|\n|-d|--dump|Print a hexdump of the chunk.|\n|-n|--next|Print the next N chunks after the specified address. (default: 0)|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:22.072625"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/glibc_ptmalloc2_heap/mp.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/glibc_ptmalloc2_heap/mp.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# mp\n\n```text\nusage: mp [-h]\n\n```\n\nPrint the mp_ struct's contents.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:22.148786"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/glibc_ptmalloc2_heap/smallbins.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/glibc_ptmalloc2_heap/smallbins.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# smallbins\n\n```text\nusage: smallbins [-h] [-v] [addr]\n\n```\n\nPrint the contents of an arena's smallbins.\n\nDefault to the current thread's arena.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address of the arena.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-v|--verbose|Show all smallbins, including empty ones|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:22.261968"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/glibc_ptmalloc2_heap/tcache.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/glibc_ptmalloc2_heap/tcache.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# tcache\n\n```text\nusage: tcache [-h] [addr]\n\n```\n\nPrint a thread's tcache contents.\n\nDefault to the current thread's tcache.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address of the tcache.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:22.363872"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/glibc_ptmalloc2_heap/tcachebins.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/glibc_ptmalloc2_heap/tcachebins.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# tcachebins\n\n```text\nusage: tcachebins [-h] [-v] [addr]\n\n```\n\nPrint the contents of a tcache.\n\nDefault to the current thread's tcache.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|The address of the tcache bins.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-v|--verbose|Show all tcachebins, including empty ones|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:22.474015"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/glibc_ptmalloc2_heap/top-chunk.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/glibc_ptmalloc2_heap/top-chunk.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# top-chunk\n\n```text\nusage: top-chunk [-h] [addr]\n\n```\n\nPrint relevant information about an arena's top chunk.\n\nDefault to current thread's arena.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address of the arena.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:22.537870"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/glibc_ptmalloc2_heap/try-free.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/glibc_ptmalloc2_heap/try-free.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# try-free\n\n```text\nusage: try-free [-h] addr\n\n```\n\nCheck what would happen if free was called with given address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address passed to free|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:22.658825"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/glibc_ptmalloc2_heap/unsortedbin.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/glibc_ptmalloc2_heap/unsortedbin.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# unsortedbin\n\n```text\nusage: unsortedbin [-h] [-v] [addr]\n\n```\n\nPrint the contents of an arena's unsortedbin.\n\nDefault to the current thread's arena.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address of the arena.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-v|--verbose|Show the \"all\" bin even if it's empty|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:22.741155"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/glibc_ptmalloc2_heap/vis-heap-chunks.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/glibc_ptmalloc2_heap/vis-heap-chunks.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# vis-heap-chunks\n\n```text\nusage: vis-heap-chunks [-h] [--beyond_top] [--no_truncate] [--all_chunks]\n                       [count] [addr]\n\n```\n\nVisualize chunks on a heap.\n\nDefault to the current arena's active heap.\n\n**Alias:** vis\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|count|Number of chunks to visualize. If the value is big enough and addr isn't provided, this is interpreted as addr instead. (default: 10)|\n|addr|Address of the first chunk.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-b|--beyond_top|Attempt to keep printing beyond the top chunk.|\n|-n|--no_truncate|Display all the chunk contents (Ignore the `max-visualize-chunk-size` configuration).|\n|-a|--all_chunks| Display all chunks (Ignore the default-visualize-chunk-number configuration).|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:22.862751"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/index.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/index.md", "content": "<!-- THIS FILE IS AUTOGENERATED. DO NOT EDIT IT. See scripts/generate-docs.sh -->\n\n\n\n\n# Commands\n\n## Breakpoint\n\n-  [break-if-not-taken](breakpoint/break-if-not-taken.md) - Breaks on a branch if it is not taken.\n-  [break-if-taken](breakpoint/break-if-taken.md) - Breaks on a branch if it is taken.\n-  [breakrva](breakpoint/breakrva.md) - Break at RVA from PIE base.\n-  [ignore](breakpoint/ignore.md) - Set ignore-count of breakpoint number N to COUNT.\n\n## Context\n\n-  [context](context/context.md) - Print out the currently enabled context sections.\n-  [contextnext](context/contextnext.md) - Select next entry in context history.\n-  [contextoutput](context/contextoutput.md) - Sets the output of a context section.\n-  [contextprev](context/contextprev.md) - Select previous entry in context history.\n-  [contextsearch](context/contextsearch.md) - Search for a string in the context history and select that entry.\n-  [contextunwatch](context/contextunwatch.md) - Removes an expression previously added to be watched.\n-  [contextwatch](context/contextwatch.md) - Adds an expression to be shown on context.\n-  [regs](context/regs.md) - Print out all registers and enhance the information.\n\n## Darwin/libsystem/Mach-O\n\n-  [commpage](darwin_libsystem_mach-o/commpage.md) - Dumps all values from the macOS commpage.\n\n## Developer\n\n-  [dev-dump-instruction](developer/dev-dump-instruction.md) - Dump internal PwndbgInstruction attributes.\n-  [log-level](developer/log-level.md) - Set the log level.\n\n## Disassemble\n\n-  [emulate](disassemble/emulate.md) - Like nearpc, but will emulate instructions from the current $PC forward.\n-  [nearpc](disassemble/nearpc.md) - Disassemble near a specified address.\n\n## GLibc ptmalloc2 Heap\n\n-  [arena](glibc_ptmalloc2_heap/arena.md) - Print the contents of an arena.\n-  [arenas](glibc_ptmalloc2_heap/arenas.md) - List this process's arenas.\n-  [bins](glibc_ptmalloc2_heap/bins.md) - Print the contents of all an arena's bins and a thread's tcache.\n-  [fastbins](glibc_ptmalloc2_heap/fastbins.md) - Print the contents of an arena's fastbins.\n-  [find-fake-fast](glibc_ptmalloc2_heap/find-fake-fast.md) - Find candidate fake fast or tcache chunks overlapping the specified address.\n-  [heap](glibc_ptmalloc2_heap/heap.md) - Iteratively print chunks on a heap.\n-  [hi](glibc_ptmalloc2_heap/hi.md) - Searches all heaps to find if an address belongs to a chunk. If yes, prints the chunk.\n-  [largebins](glibc_ptmalloc2_heap/largebins.md) - Print the contents of an arena's largebins.\n-  [malloc-chunk](glibc_ptmalloc2_heap/malloc-chunk.md) - Print a chunk.\n-  [mp](glibc_ptmalloc2_heap/mp.md) - Print the mp_ struct's contents.\n-  [smallbins](glibc_ptmalloc2_heap/smallbins.md) - Print the contents of an arena's smallbins.\n-  [tcache](glibc_ptmalloc2_heap/tcache.md) - Print a thread's tcache contents.\n-  [tcachebins](glibc_ptmalloc2_heap/tcachebins.md) - Print the contents of a tcache.\n-  [top-chunk](glibc_ptmalloc2_heap/top-chunk.md) - Print relevant information about an arena's top chunk.\n-  [try-free](glibc_ptmalloc2_heap/try-free.md) - Check what would happen if free was called with given address.\n-  [unsortedbin](glibc_ptmalloc2_heap/unsortedbin.md) - Print the contents of an arena's unsortedbin.\n-  [vis-heap-chunks](glibc_ptmalloc2_heap/vis-heap-chunks.md) - Visualize chunks on a heap.\n\n## Integrations\n\n-  [ai](integrations/ai.md) - Ask GPT-3 a question about the current debugging context.\n-  [bn-sync](integrations/bn-sync.md) - Synchronize Binary Ninja's cursor with GDB.\n-  [decomp](integrations/decomp.md) - Use the current integration to decompile code near an address.\n-  [j](integrations/j.md) - Synchronize IDA's cursor with GDB.\n-  [r2](integrations/r2.md) - Launches radare2.\n-  [r2pipe](integrations/r2pipe.md) - Execute stateful radare2 commands through r2pipe.\n-  [rop](integrations/rop.md) - Dump ROP gadgets with Jon Salwan's ROPgadget tool.\n-  [ropper](integrations/ropper.md) - ROP gadget search with ropper.\n-  [rz](integrations/rz.md) - Launches rizin.\n-  [rzpipe](integrations/rzpipe.md) - Execute stateful rizin commands through rzpipe.\n-  [save-ida](integrations/save-ida.md) - Save the ida database.\n\n## Kernel\n\n-  [binder](kernel/binder.md) - Show Android Binder information\n-  [buddydump](kernel/buddydump.md) - Displays metadata and freelists of the buddy allocator.\n-  [kbase](kernel/kbase.md) - Finds the kernel virtual base address.\n-  [kbpf](kernel/kbpf.md) - Prints information about the linux kernel bpf progs and maps.\n-  [kchecksec](kernel/kchecksec.md) - Checks for kernel hardening configuration options.\n-  [kcmdline](kernel/kcmdline.md) - Return the kernel commandline (/proc/cmdline).\n-  [kconfig](kernel/kconfig.md) - Outputs the kernel config.\n-  [kdmabuf](kernel/kdmabuf.md) - Prints DMA buf info\n-  [kdmesg](kernel/kdmesg.md) - Displays the kernel ring buffer (dmesg) contents.\n-  [klookup](kernel/klookup.md) - Lookup kernel symbols\n-  [kmod](kernel/kmod.md) - Displays the loaded Linux kernel modules.\n-  [knft-dump](kernel/knft-dump.md) - Dump all nftables: tables, chains, rules, expressions\n-  [knft-list-chains](kernel/knft-list-chains.md) - Dump netfilter chains form a specific table\n-  [knft-list-exprs](kernel/knft-list-exprs.md) - Dump only expressions from specific rule\n-  [knft-list-flowtables](kernel/knft-list-flowtables.md) - Dump netfilter flowtables from a specific table\n-  [knft-list-objects](kernel/knft-list-objects.md) - Dump netfilter objects from a specific table\n-  [knft-list-rules](kernel/knft-list-rules.md) - Dump netfilter rules form a specific chain\n-  [knft-list-sets](kernel/knft-list-sets.md) - Dump netfilter sets from a specific table\n-  [knft-list-tables](kernel/knft-list-tables.md) - Dump netfliter tables from a specific network namespace\n-  [ksyscalls](kernel/ksyscalls.md) - Displays Linux syscall table, including names and addresses of syscalls.\n-  [ktask](kernel/ktask.md) - Displays information about kernel tasks.\n-  [kversion](kernel/kversion.md) - Outputs the kernel version (/proc/version).\n-  [msr](kernel/msr.md) - Read or write to Model Specific Register (MSR)\n-  [p2v](kernel/p2v.md) - Translate physical address to its corresponding virtual address.\n-  [pageinfo](kernel/pageinfo.md) - Convert a pointer to a `struct page` to its corresponding virtual address.\n-  [pagewalk](kernel/pagewalk.md) - Performs pagewalk.\n-  [slab](kernel/slab.md) - Prints information about the linux kernel's slab allocator SLUB.\n-  [v2p](kernel/v2p.md) - Translate virtual address to its corresponding physmap address.\n\n## Linux/libc/ELF\n\n-  [argc](linux_libc_elf/argc.md) - Prints out the number of arguments.\n-  [argv](linux_libc_elf/argv.md) - Prints out the contents of argv.\n-  [aslr](linux_libc_elf/aslr.md) - Check the current ASLR status, or turn it on/off.\n-  [auxv-explore](linux_libc_elf/auxv-explore.md) - Explore and print information from the Auxiliary ELF Vector.\n-  [auxv](linux_libc_elf/auxv.md) - Print information from the Auxiliary ELF Vector.\n-  [elfsections](linux_libc_elf/elfsections.md) - Prints the section mappings contained in the ELF header.\n-  [envp](linux_libc_elf/envp.md) - Prints out the contents of the environment.\n-  [errno](linux_libc_elf/errno.md) - Converts errno (or argument) to its string representation.\n-  [got](linux_libc_elf/got.md) - Show the state of the Global Offset Table.\n-  [gotplt](linux_libc_elf/gotplt.md) - Prints any symbols found in the .got.plt section if it exists.\n-  [libcinfo](linux_libc_elf/libcinfo.md) - Show libc version and link to its sources\n-  [linkmap](linux_libc_elf/linkmap.md) - Show the state of the Link Map\n-  [onegadget](linux_libc_elf/onegadget.md) - Find gadgets which single-handedly give code execution.\n-  [parse-seccomp](linux_libc_elf/parse-seccomp.md) - Parse a struct sock_fprog from memory and dump its filter\n-  [piebase](linux_libc_elf/piebase.md) - Calculate VA of RVA from PIE base.\n-  [plt](linux_libc_elf/plt.md) - Prints any symbols found in Procedure Linkage Table sections if any exist.\n-  [strings](linux_libc_elf/strings.md) - Extracts and displays ASCII strings from readable memory pages of the debugged process.\n-  [threads](linux_libc_elf/threads.md) - List all threads belonging to the selected inferior.\n-  [tls](linux_libc_elf/tls.md) - Print out base address of the current Thread Local Storage (TLS).\n-  [track-got](linux_libc_elf/track-got.md) - Controls GOT tracking\n-  [track-heap](linux_libc_elf/track-heap.md) - Manages the heap tracker.\n\n## Memory\n\n-  [distance](memory/distance.md) - Print the distance between the two arguments, or print the offset to the address's page base.\n-  [dump-register-frame](memory/dump-register-frame.md) - Display the registers saved to memory for a certain frame type\n-  [gdt](memory/gdt.md) - Decode X86-64 GDT entries at address\n-  [go-dump](memory/go-dump.md) - Dumps a Go value of a given type at a specified address.\n-  [go-type](memory/go-type.md) - Dumps a Go runtime reflection type at a specified address.\n-  [hexdump](memory/hexdump.md) - Hexdumps data at the specified address or module name.\n-  [leakfind](memory/leakfind.md) - Attempt to find a leak chain given a starting address.\n-  [memfrob](memory/memfrob.md) - Memfrobs a region of memory (xor with '*').\n-  [mmap](memory/mmap.md) - Calls the mmap syscall and prints its resulting address.\n-  [mprotect](memory/mprotect.md) - Calls the mprotect syscall and prints its result value.\n-  [p2p](memory/p2p.md) - Pointer to pointer chain search. Searches given mapping for all pointers that point to specified mapping.\n-  [probeleak](memory/probeleak.md) - Pointer scan for possible offset leaks.\n-  [search](memory/search.md) - Search memory for byte sequences, strings, pointers, and integer values.\n-  [telescope](memory/telescope.md) - Recursively dereferences pointers starting at the specified address.\n-  [vmmap-add](memory/vmmap-add.md) - Add virtual memory map page.\n-  [vmmap-clear](memory/vmmap-clear.md) - Clear the vmmap cache.\n-  [vmmap-explore](memory/vmmap-explore.md) - Explore a page, trying to guess permissions.\n-  [vmmap](memory/vmmap.md) - Print virtual memory map pages.\n-  [xinfo](memory/xinfo.md) - Shows offsets of the specified address from various useful locations.\n-  [xor](memory/xor.md) - XOR `count` bytes at `address` with the key `key`.\n\n## Misc\n\n-  [asm](misc/asm.md) - Assemble shellcode into bytes\n-  [checksec](misc/checksec.md) - Prints out the binary security settings using `checksec`.\n-  [comm](misc/comm.md) - Put comments in assembly code.\n-  [cyclic](misc/cyclic.md) - Cyclic pattern creator/finder.\n-  [cymbol](misc/cymbol.md) - Manage custom C structures in pwndbg. Supports project-specific auto-loading from .gdbinit.\n-  [down](misc/down.md) - Select and print stack frame called by this one.\n-  [dt](misc/dt.md) - Dump out information on a type (e.g. ucontext_t).\n-  [dumpargs](misc/dumpargs.md) - Prints determined arguments for call/syscall instruction.\n-  [getfile](misc/getfile.md) - Gets the current file.\n-  [hex2ptr](misc/hex2ptr.md) - Converts a space-separated hex string to a little-endian address.\n-  [hijack-fd](misc/hijack-fd.md) - Replace a file descriptor of a debugged process.\n-  [ipi](misc/ipi.md) - Start an interactive IPython prompt.\n-  [patch-list](misc/patch-list.md) - List all patches.\n-  [patch-revert](misc/patch-revert.md) - Revert patch at given address.\n-  [patch](misc/patch.md) - Patches given instruction with given code or bytes.\n-  [plist](misc/plist.md) - Dumps the elements of a linked list.\n-  [sigreturn](misc/sigreturn.md) - Display the SigreturnFrame at the specific address\n-  [spray](misc/spray.md) - Spray memory with cyclic() generated values\n-  [tips](misc/tips.md) - Shows tips.\n-  [up](misc/up.md) - Select and print stack frame that called this one.\n-  [valist](misc/valist.md) - Dumps the arguments of a va_list.\n-  [vmmap-load](misc/vmmap-load.md) - Load virtual memory map pages from ELF file.\n\n## Process\n\n-  [killthreads](process/killthreads.md) - Kill all or given threads.\n-  [pid](process/pid.md) - Gets the pid.\n-  [procinfo](process/procinfo.md) - Display information about the running process.\n\n## Pwndbg\n\n-  [bugreport](pwndbg/bugreport.md) - Generate a bug report.\n-  [config](pwndbg/config.md) - Shows Pwndbg-specific configuration.\n-  [configfile](pwndbg/configfile.md) - Generates a configuration file for the current Pwndbg options.\n-  [heap-config](pwndbg/heap-config.md) - Shows heap related configuration.\n-  [memoize](pwndbg/memoize.md) - Toggles memoization (caching).\n-  [profiler](pwndbg/profiler.md) - Utilities for profiling Pwndbg.\n-  [pwndbg](pwndbg/pwndbg.md) - Prints out a list of all Pwndbg commands.\n-  [reinit-pwndbg](pwndbg/reinit-pwndbg.md) - Makes Pwndbg reinitialize all state.\n-  [reload](pwndbg/reload.md) - Reload Pwndbg.\n-  [theme](pwndbg/theme.md) - Shows Pwndbg-specific theme configuration.\n-  [themefile](pwndbg/themefile.md) - Generates a configuration file for the current Pwndbg theme options.\n-  [version](pwndbg/version.md) - Displays Pwndbg and its important deps versions.\n\n## Register\n\n-  [cpsr](register/cpsr.md) - Print out ARM CPSR or xPSR register.\n-  [fsbase](register/fsbase.md) - Prints out the FS base address. See also $fsbase.\n-  [gsbase](register/gsbase.md) - Prints out the GS base address. See also $gsbase.\n-  [setflag](register/setflag.md) - Modify the flags register.\n\n## Stack\n\n-  [canary](stack/canary.md) - Print out the current stack canary.\n-  [retaddr](stack/retaddr.md) - Print out the stack addresses that contain return addresses.\n-  [stack-explore](stack/stack-explore.md) - Explore stack from all threads.\n-  [stack](stack/stack.md) - Dereferences on stack data with specified count and offset.\n-  [stackf](stack/stackf.md) - Dereferences on stack data, printing the entire stack frame with specified count and offset .\n\n## Start\n\n-  [attachp](start/attachp.md) - Attaches to a given pid, process name, process found with partial argv match or to a device file.\n-  [entry](start/entry.md) - Start the debugged program stopping at its entrypoint address.\n-  [sstart](start/sstart.md) - Alias for 'tbreak __libc_start_main; run'.\n-  [start](start/start.md) - Start the debugged program stopping at the first convenient location\n\n## Step/Next/Continue\n\n-  [nextcall](step_next_continue/nextcall.md) - Breaks at the next call instruction.\n-  [nextjmp](step_next_continue/nextjmp.md) - Breaks at the next jump instruction.\n-  [nextproginstr](step_next_continue/nextproginstr.md) - Breaks at the next instruction that belongs to the running program.\n-  [nextret](step_next_continue/nextret.md) - Breaks at next return-like instruction.\n-  [nextsyscall](step_next_continue/nextsyscall.md) - Breaks at the next syscall not taking branches.\n-  [stepover](step_next_continue/stepover.md) - Breaks on the instruction after this one.\n-  [stepret](step_next_continue/stepret.md) - Breaks at next return-like instruction by 'stepping' to it.\n-  [stepsyscall](step_next_continue/stepsyscall.md) - Breaks at the next syscall by taking branches.\n-  [stepuntilasm](step_next_continue/stepuntilasm.md) - Breaks on the next matching instruction.\n-  [xuntil](step_next_continue/xuntil.md) - Continue execution until an address or expression.\n\n## WinDbg\n\n-  [bc](windbg/bc.md) - Clear the breakpoint with the specified index.\n-  [bd](windbg/bd.md) - Disable the breakpoint with the specified index.\n-  [be](windbg/be.md) - Enable the breakpoint with the specified index.\n-  [bl](windbg/bl.md) - List breakpoints.\n-  [bp](windbg/bp.md) - Set a breakpoint at the specified address.\n-  [da](windbg/da.md) - Dump a string at the specified address.\n-  [db](windbg/db.md) - Starting at the specified address, dump N bytes.\n-  [dc](windbg/dc.md) - Starting at the specified address, hexdump.\n-  [dd](windbg/dd.md) - Starting at the specified address, dump N dwords.\n-  [dds](windbg/dds.md) - Dump pointers and symbols at the specified address.\n-  [dq](windbg/dq.md) - Starting at the specified address, dump N qwords.\n-  [ds](windbg/ds.md) - Dump a string at the specified address.\n-  [dw](windbg/dw.md) - Starting at the specified address, dump N words.\n-  [eb](windbg/eb.md) - Write hex bytes at the specified address.\n-  [ed](windbg/ed.md) - Write hex dwords at the specified address.\n-  [eq](windbg/eq.md) - Write hex qwords at the specified address.\n-  [ew](windbg/ew.md) - Write hex words at the specified address.\n-  [ez](windbg/ez.md) - Write a string at the specified address.\n-  [eza](windbg/eza.md) - Write a string at the specified address.\n-  [go](windbg/go.md) - WinDbg compatibility alias for 'continue' command.\n-  [k](windbg/k.md) - Print a backtrace (alias 'bt').\n-  [ln](windbg/ln.md) - List the symbols nearest to the provided value.\n-  [pc](windbg/pc.md) - WinDbg compatibility alias for 'nextcall' command.\n-  [peb](windbg/peb.md) - Not be windows.\n\n## jemalloc Heap\n\n-  [jemalloc-extent-info](jemalloc_heap/jemalloc-extent-info.md) - Prints extent information for the given address\n-  [jemalloc-find-extent](jemalloc_heap/jemalloc-find-extent.md) - Returns extent information for pointer address allocated by jemalloc\n-  [jemalloc-heap](jemalloc_heap/jemalloc-heap.md) - Prints all extents information\n\n## musl\n\n-  [mallocng-dump](musl/mallocng-dump.md) - Dump the mallocng heap.\n-  [mallocng-explain](musl/mallocng-explain.md) - Gives a quick explanation of musl's mallocng allocator.\n-  [mallocng-find](musl/mallocng-find.md) - Find slot which contains the given address.\n-  [mallocng-group](musl/mallocng-group.md) - Print out information about a mallocng group at the given address.\n-  [mallocng-malloc-context](musl/mallocng-malloc-context.md) - Print out the mallocng __malloc_context (ctx) object.\n-  [mallocng-meta-area](musl/mallocng-meta-area.md) - Print out a mallocng meta_area object at the given address.\n-  [mallocng-meta](musl/mallocng-meta.md) - Print out information about a mallocng group given the address of its meta.\n-  [mallocng-slot-start](musl/mallocng-slot-start.md) - Dump information about a mallocng slot, given its start address.\n-  [mallocng-slot-user](musl/mallocng-slot-user.md) - Dump information about a mallocng slot, given its user address.\n-  [mallocng-visualize-slots](musl/mallocng-visualize-slots.md) - Visualize slots in a group.\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:22.960838"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/integrations/ai.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/integrations/ai.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# ai\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: ai [-h] [-M MODEL] [-t TEMPERATURE] [-m MAX_TOKENS] [-v] [-L]\n          [-c COMMAND]\n          [question ...]\n\n```\n\nAsk GPT-3 a question about the current debugging context.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|question|The question to ask.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-M|--model|The OpenAI model to use.|\n|-t|--temperature|The temperature to use.|\n|-m|--max-tokens|The maximum number of tokens to generate.|\n|-v|--verbose|Print the prompt and response.|\n|-L|--list-models|List the available models.|\n|-c|--command|Run a command in the GDB debugger and ask a question about the output.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:23.354258"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/integrations/bn-sync.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/integrations/bn-sync.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# bn-sync\n\n```text\nusage: bn-sync [-h]\n\n```\n\nSynchronize Binary Ninja's cursor with GDB.\n\n**Alias:** bns\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:23.445520"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/integrations/decomp.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/integrations/decomp.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# decomp\n\n```text\nusage: decomp [-h] [addr] [lines]\n\n```\n\nUse the current integration to decompile code near an address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address to decompile near.|\n|lines|Number of lines of decompilation to show.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:23.547839"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/integrations/j.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/integrations/j.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# j\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: j [-h]\n\n```\n\nSynchronize IDA's cursor with GDB.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:23.743245"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/integrations/r2.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/integrations/r2.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# r2\n\n```text\nusage: r2 [-h] [--no-seek] [--no-rebase] [arguments ...]\n\n```\n\nLaunches radare2.\n\n**Alias:** radare2\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|arguments|Arguments to pass to radare|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n||--no-seek|Do not seek to current pc|\n||--no-rebase|Do not set the base address for PIE according to the current mapping|\n\n### Examples\n```text\npwndbg> r2 -- -S -AA\nWARN: Relocs has not been applied. Please use `-e bin.relocs.apply=true` or `-e bin.cache=true` next time\nINFO: Analyze all flags starting with sym. and entry0 (aa)\n[...]\nINFO: Debugger commands disabled in sandbox mode\n[0x0001d3d0]> help\n\nWelcome to radare2!\n[...]\n```\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:23.855160"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/integrations/r2pipe.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/integrations/r2pipe.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# r2pipe\n\n```text\nusage: r2pipe [-h] arguments [arguments ...]\n\n```\n\nExecute stateful radare2 commands through r2pipe.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|arguments|Arguments to pass to r2pipe|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n### Examples\n```text\npwndbg> r2pipe pdf @ sym.main\n            ; ICOD XREF from entry0 @ 0x1d3e8(r)\n┌ 6786: int main (uint32_t argc, char **argv, char **envp);\n│ `- args(rdi, rsi, rdx) vars(21:sp[0x40..0x18c])\n│           0x0001b920      f30f1efa       endbr64\n│           0x0001b924      4157           push r15\n│           0x0001b926      4156           push r14\n│           0x0001b928      4155           push r13\n│           0x0001b92a      4154           push r12\n[...]\n│           0x0001b966      85c0           test eax, eax\n│       ┌─< 0x0001b968      7545           jne 0x1b9af\n│       │   0x0001b96a      e8311b0100     call sym.xtrace_init\n│       │   0x0001b96f      e80cff0000     call sym.check_dev_tty\n│       │   ; CODE XREF from main @ 0x1b988(x)\n│      ┌──> 0x0001b974      833dd1680f..   cmp dword [obj.debugging_login_shell], 0 ; [0x11224c:4]=0\n│     ┌───< 0x0001b97b      743d           je 0x1b9ba\n│     │╎│   0x0001b97d      bf03000000     mov edi, 3\n[...]\n```\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:24.074441"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/integrations/rop.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/integrations/rop.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# rop\n\n```text\nusage: rop [-h] [--grep GREP] [--memlimit MEMLIMIT] [argument ...]\n\n```\n\nDump ROP gadgets with Jon Salwan's ROPgadget tool.\n\n**Alias:** ropgadget\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|argument|Arguments to pass to ROPgadget|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n||--grep|String to grep the output for|\n||--memlimit|String to grep the output for (default: '50MB')|\n\n### Examples\n```text\npwndbg> rop --grep 'pop rdi' -- --nojop\nGadgets information\n============================================================\n[...]\n0x0007dce8 : pop rdi ; or dword ptr [rax], eax ; add rsp, 0x28 ; ret\n0x0007d838 : pop rdi ; or dword ptr [rax], eax ; je 0x7d840 ; ret\n0x0005b13d : pop rdi ; pop rbp ; ret\n0x0001ee23 : pop rdi ; ret\n\nUnique gadgets found: 8514\n```\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:24.207867"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/integrations/ropper.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/integrations/ropper.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# ropper\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: ropper [-h] [argument ...]\n\n```\n\nROP gadget search with ropper.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|argument|Arguments to pass to ropper|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n### Examples\n```text\npwndbg> ropper -- --console\n[INFO] Load gadgets from cache\n[LOAD] loading... 100%\n[LOAD] removing double gadgets... 100%\n(bash/ELF/x86_64)>\n----\npwndbg> ropper -- --search 'pop rdi; ret;'\n[INFO] Load gadgets from cache\n[LOAD] loading... 100%\n[LOAD] removing double gadgets... 100%\n[INFO] Searching for gadgets: pop rdi; ret;\n\n[INFO] File: /usr/bin/bash\n0x000000000001ee23: pop rdi; ret;\n```\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:24.350167"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/integrations/rz.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/integrations/rz.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# rz\n\n```text\nusage: rz [-h] [--no-seek] [--no-rebase] [arguments ...]\n\n```\n\nLaunches rizin.\n\n**Alias:** rizin\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|arguments|Arguments to pass to rizin|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n||--no-seek|Do not seek to current pc|\n||--no-rebase|Do not set the base address for PIE according to the current mapping|\n\n### Examples\n```text\npwndbg> rz -- -AA\n[x] Analyze all flags starting with sym. and entry0 (aa)\n[x] Analyze function calls\n[...]\n[x] Enable constraint types analysis for variables\n -- Use 'e asm.offset=true' to show offsets in 16bit segment addressing mode.\n[0x0001d3d0]>\n```\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:24.468563"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/integrations/rzpipe.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/integrations/rzpipe.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# rzpipe\n\n```text\nusage: rzpipe [-h] arguments [arguments ...]\n\n```\n\nExecute stateful rizin commands through rzpipe.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|arguments|Arguments to pass to rzpipe|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n### Examples\n```text\npwndbg> rzpipe pdf @ sym.main\n            ; DATA XREF from entry0 @ 0x1d3e8\n┌ int main(int argc, char **argv, char **envp);\n│           ; arg int argc @ rdi\n│           ; arg char **argv @ rsi\n│           ; arg char **envp @ rdx\n[...]\n│           ; var uint64_t var_18ch @ stack - 0x18c\n│           ; var int64_t var_188h @ stack - 0x188\n[...]\n│           ; var int64_t canary @ stack - 0x40\n│           0x0001b920      endbr64\n│           0x0001b924      push  r15\n│           0x0001b926      push  r14\n│           0x0001b928      push  r13\n│           0x0001b92a      push  r12\n[...]\n│           0x0001b966      test  eax, eax\n│       ┌─< 0x0001b968      jne   0x1b9af\n│       │   0x0001b96a      call  sym.xtrace_init\n│       │   0x0001b96f      call  sym.check_dev_tty\n│       │   ; CODE XREF from main @ 0x1b988\n│      ┌──> 0x0001b974      cmp   dword [obj.debugging_login_shell], 0 ; [0x11224c:4]=0\n│     ┌───< 0x0001b97b      je    0x1b9ba\n│     │╎│   0x0001b97d      mov   edi, 3                               ; int s\n[...]\n```\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:24.589222"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/integrations/save-ida.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/integrations/save-ida.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# save-ida\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: save-ida [-h]\n\n```\n\nSave the ida database.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:24.709950"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/jemalloc_heap/jemalloc-extent-info.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/jemalloc_heap/jemalloc-extent-info.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# jemalloc-extent-info\n\n```text\nusage: jemalloc-extent-info [-h] [-v] addr\n\n```\n\nPrints extent information for the given address\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address of the extent metadata|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-v|--verbose|Print all chunk fields, even unused ones.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:24.999480"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/jemalloc_heap/jemalloc-find-extent.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/jemalloc_heap/jemalloc-find-extent.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# jemalloc-find-extent\n\n```text\nusage: jemalloc-find-extent [-h] addr\n\n```\n\nReturns extent information for pointer address allocated by jemalloc\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address of the allocated memory location|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:25.115984"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/jemalloc_heap/jemalloc-heap.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/jemalloc_heap/jemalloc-heap.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# jemalloc-heap\n\n```text\nusage: jemalloc-heap [-h]\n\n```\n\nPrints all extents information\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:25.209845"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/binder.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/binder.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# binder\n\n```text\nusage: binder [-h]\n\n```\n\nShow Android Binder information\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:25.565014"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/buddydump.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/buddydump.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# buddydump\n\n```text\nusage: buddydump [-h] [-z ZONE] [-o ORDER] [-m MTYPE] [-p] [-c CPU] [-n NODE]\n                 [-f FIND]\n\n```\n\nDisplays metadata and freelists of the buddy allocator.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-z|--zone|Displays/searches lists only in the specified zone.|\n|-o|--order|Displays/searches lists only with the specified order.|\n|-m|--mtype|Displays/searches lists only with the specified mtype.|\n|-p|--pcp-only|Displays/searches only PCP lists.|\n|-c|--cpu|CPU nr for searching PCP.|\n|-n|--node||\n|-f|--find|The address to find in page free lists.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:25.681282"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/kbase.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/kbase.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# kbase\n\n```text\nusage: kbase [-h] [-r] [-v]\n\n```\n\nFinds the kernel virtual base address.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-r|--rebase|rebase loaded symbol file|\n|-v|--verbose|show more information relevant to the kbase (e.g. phys addr)|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:25.786830"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/kbpf.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/kbpf.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# kbpf\n\n```text\nusage: kbpf [-h] [-v] [-p] [-m]\n\n```\n\nPrints information about the linux kernel bpf progs and maps.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-v|--verbose| (default: 0)|\n|-p|--progs||\n|-m|--maps||\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:25.905666"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/kchecksec.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/kchecksec.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# kchecksec\n\n```text\nusage: kchecksec [-h]\n\n```\n\nChecks for kernel hardening configuration options.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:26.012132"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/kcmdline.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/kcmdline.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# kcmdline\n\n```text\nusage: kcmdline [-h]\n\n```\n\nReturn the kernel commandline (/proc/cmdline).\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:26.109488"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/kconfig.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/kconfig.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# kconfig\n\n```text\nusage: kconfig [-h] [-l FILE_PATH] [config_name]\n\n```\n\nOutputs the kernel config.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|config_name|A config name to search for|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-l|--load|load kernel config file|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:26.195991"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/kdmabuf.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/kdmabuf.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# kdmabuf\n\n```text\nusage: kdmabuf [-h]\n\n```\n\nPrints DMA buf info\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:26.295504"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/kdmesg.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/kdmesg.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# kdmesg\n\n```text\nusage: kdmesg [-h] [-T]\n\n```\n\nDisplays the kernel ring buffer (dmesg) contents.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-T|--ctime|Print human-readable timestamps.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:26.413101"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/klookup.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/klookup.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# klookup\n\n```text\nusage: klookup [-h] [-a] [symbol]\n\n```\n\nLookup kernel symbols\n\n**Alias:** kallsyms\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|symbol|Address or symbol name to lookup|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-a|--apply|applies all the symbols that satisfy the filter|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:26.503319"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/kmod.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/kmod.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# kmod\n\n```text\nusage: kmod [-h] [-l PATH] [module_name]\n\n```\n\nDisplays the loaded Linux kernel modules.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|module_name|A module name substring to filter for|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-l|--load|the path of the module to load|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:26.563199"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/knft-dump.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/knft-dump.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# knft-dump\n\n```text\nusage: knft-dump [-h] [nsid]\n\n```\n\nDump all nftables: tables, chains, rules, expressions\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|nsid|Network Namespace ID|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:26.804341"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/knft-list-chains.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/knft-list-chains.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# knft-list-chains\n\n```text\nusage: knft-list-chains [-h] [--nsid NSID] [table_family] [table_name]\n\n```\n\nDump netfilter chains form a specific table\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|table_family|Netfilter table family (inet, ip, ip6, netdev, bridge, arp)|\n|table_name|Table name|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-n|--nsid|Network Namespace ID|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:26.943204"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/knft-list-exprs.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/knft-list-exprs.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# knft-list-exprs\n\n```text\nusage: knft-list-exprs [-h] [--nsid NSID]\n                       [table_family] [table_name] [chain_name] [rule_id]\n\n```\n\nDump only expressions from specific rule\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|table_family|Table family, eg: inet, ip, ip6, netdev, bridge, arp|\n|table_name|Table name|\n|chain_name|Chain name|\n|rule_id|Rule Handle ID|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-n|--nsid|Network Namespace ID|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:27.044715"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/knft-list-flowtables.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/knft-list-flowtables.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# knft-list-flowtables\n\n```text\nusage: knft-list-flowtables [-h] [--nsid NSID] [table_family] [table_name]\n\n```\n\nDump netfilter flowtables from a specific table\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|table_family|Netfilter table family (inet, ip, ip6, netdev, bridge, arp)|\n|table_name|Table name|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-n|--nsid|Network Namespace ID|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:27.206436"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/knft-list-objects.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/knft-list-objects.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# knft-list-objects\n\n```text\nusage: knft-list-objects [-h] [--nsid NSID] [table_family] [table_name]\n\n```\n\nDump netfilter objects from a specific table\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|table_family|Table family, eg: inet, ip, ip6, netdev, bridge, arp|\n|table_name|Table name|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-n|--nsid|Network Namespace ID|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:27.315623"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/knft-list-rules.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/knft-list-rules.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# knft-list-rules\n\n```text\nusage: knft-list-rules [-h] [--nsid NSID]\n                       [table_family] [table_name] [chain_name]\n\n```\n\nDump netfilter rules form a specific chain\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|table_family|Table family, eg: inet, ip, ip6, netdev, bridge, arp|\n|table_name|Table name|\n|chain_name|Chain name|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-n|--nsid|Network Namespace ID|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:27.405936"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/knft-list-sets.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/knft-list-sets.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# knft-list-sets\n\n```text\nusage: knft-list-sets [-h] [--nsid NSID] [table_family] [table_name]\n\n```\n\nDump netfilter sets from a specific table\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|table_family|Table family, eg: inet, ip, ip6, netdev, bridge, arp|\n|table_name|Table name|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-n|--nsid|Network Namespace ID|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:27.479859"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/knft-list-tables.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/knft-list-tables.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# knft-list-tables\n\n```text\nusage: knft-list-tables [-h] [--nsid NSID]\n\n```\n\nDump netfliter tables from a specific network namespace\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-n|--nsid|Network Namespace ID|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:27.606069"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/ksyscalls.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/ksyscalls.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# ksyscalls\n\n```text\nusage: ksyscalls [-h] [syscall_name]\n\n```\n\nDisplays Linux syscall table, including names and addresses of syscalls.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|syscall_name|A syscall name to search for|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:27.773982"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/ktask.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/ktask.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# ktask\n\n```text\nusage: ktask [-h] [task_name]\n\n```\n\nDisplays information about kernel tasks.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|task_name|A task name to search for|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:27.883260"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/kversion.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/kversion.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# kversion\n\n```text\nusage: kversion [-h]\n\n```\n\nOutputs the kernel version (/proc/version).\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:27.972732"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/msr.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/msr.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# msr\n\n```text\nusage: msr [-h] [-w [write_value]] [-l] [-r [MSR_RANGE]] [msr]\n\n```\n\nRead or write to Model Specific Register (MSR)\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|msr|MSR value or name|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-w|--write|value to write in MSR|\n|-l|--list|list common MSRs for the current arch|\n|-r|--range|dash separated range of MSRs to read (eg. --range=1-10 where 10 is included)|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:28.205332"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/p2v.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/p2v.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# p2v\n\n```text\nusage: p2v [-h] paddr\n\n```\n\nTranslate physical address to its corresponding virtual address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|paddr||\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:28.325358"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/pageinfo.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/pageinfo.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# pageinfo\n\n```text\nusage: pageinfo [-h] page\n\n```\n\nConvert a pointer to a `struct page` to its corresponding virtual address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|page||\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:28.425329"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/pagewalk.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/pagewalk.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# pagewalk\n\n```text\nusage: pagewalk [-h] [--pgd ENTRY] vaddr\n\n```\n\nPerforms pagewalk.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|vaddr|virtual address to walk|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n||--pgd||\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:28.490172"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/slab.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/slab.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# slab\n\n```text\nusage: slab [-h] {list,info,contains} ...\n\n```\n\nPrints information about the linux kernel's slab allocator SLUB.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|command||\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:28.619728"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/kernel/v2p.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/kernel/v2p.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# v2p\n\n```text\nusage: v2p [-h] vaddr\n\n```\n\nTranslate virtual address to its corresponding physmap address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|vaddr||\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:28.695710"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/argc.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/argc.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# argc\n\n```text\nusage: argc [-h]\n\n```\n\nPrints out the number of arguments.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:29.031509"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/argv.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/argv.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# argv\n\n```text\nusage: argv [-h] [i]\n\n```\n\nPrints out the contents of argv.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|i|Index of the argument to print out.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:29.092293"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/aslr.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/aslr.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# aslr\n\n```text\nusage: aslr [-h] [{on,off}]\n\n```\n\nCheck the current ASLR status, or turn it on/off.\n\nDoes not take effect until the program is restarted.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|state|Turn ASLR on or off (takes effect when target is started)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:29.160264"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/auxv-explore.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/auxv-explore.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# auxv-explore\n\n```text\nusage: auxv-explore [-h]\n\n```\n\nExplore and print information from the Auxiliary ELF Vector.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:29.250837"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/auxv.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/auxv.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# auxv\n\n```text\nusage: auxv [-h]\n\n```\n\nPrint information from the Auxiliary ELF Vector.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:29.303759"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/elfsections.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/elfsections.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# elfsections\n\n```text\nusage: elfsections [-h] [-R]\n\n```\n\nPrints the section mappings contained in the ELF header.\nIf binary not start or use --no-rebase, the section permission based on section flags.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-R|--no-rebase|Print the non-rebased section address. |\n\n### Examples\n```text\nelfsections\nelfsections --no-rebase\n```\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:29.441926"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/envp.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/envp.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# envp\n\n```text\nusage: envp [-h] [name]\n\n```\n\nPrints out the contents of the environment.\n\n**Aliases:** env, environ\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|name|Name of the environment variable to see.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:29.542660"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/errno.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/errno.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# errno\n\n```text\nusage: errno [-h] [err]\n\n```\n\nConverts errno (or argument) to its string representation.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|err|Errno; if not passed, it is retrieved from __errno_location|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:29.628909"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/got.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/got.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# got\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: got [-h] [-p PATH_FILTER | -a] [-r] [symbol_filter]\n\n```\n\nShow the state of the Global Offset Table.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|symbol_filter|Filter results by symbol name. (default: '')|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-p|--path|Filter results by library/objfile path. (default: '')|\n|-a|--all|Process all libs/obfjiles including the target executable.|\n|-r|--show-readonly|Also display read-only entries (which are filtered out by default).|\n\n### Examples\n```text\n> got\n    Print all writable GOT entries in the executable.\n> got -r puts\n    Print all GOT entries that contain the string \"puts\".\n> got -p libc\n    Print all writable GOT entries used by libc. (And any other loaded\n    object files that contain the string \"libc\" in their path).\n> got -ra\n    Print all GOT entries in the address space.\n```\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:29.725539"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/gotplt.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/gotplt.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# gotplt\n\n```text\nusage: gotplt [-h]\n\n```\n\nPrints any symbols found in the .got.plt section if it exists.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:29.791562"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/libcinfo.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/libcinfo.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# libcinfo\n\n```text\nusage: libcinfo [-h]\n\n```\n\nShow libc version and link to its sources\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:29.905678"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/linkmap.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/linkmap.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# linkmap\n\n```text\nusage: linkmap [-h]\n\n```\n\nShow the state of the Link Map\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:29.975914"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/onegadget.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/onegadget.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# onegadget\n\n```text\nusage: onegadget [-h] [--show-unsat] [--no-unknown] [-v]\n\n```\n\nFind gadgets which single-handedly give code execution.\n\nUses the onegadget tool by david942j.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n||--show-unsat|Show unsatisfiable gadgets.|\n||--no-unknown|Do not show unknown gadgets.|\n|-v|--verbose|Show verbose output.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:30.083641"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/parse-seccomp.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/parse-seccomp.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# parse-seccomp\n\n```text\nusage: parse-seccomp [-h] addr\n\n```\n\nParse a struct sock_fprog from memory and dump its filter\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address of sock_fprog structure in target process memory (e.g. 0xdeadbeef)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:30.165207"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/piebase.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/piebase.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# piebase\n\n```text\nusage: piebase [-h] [offset] [module]\n\n```\n\nCalculate VA of RVA from PIE base.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|offset|Offset from PIE base. (default: 0)|\n|module|Module to choose as base. Defaults to the target executable. (default: '')|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:30.264425"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/plt.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/plt.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# plt\n\n```text\nusage: plt [-h] [-a]\n\n```\n\nPrints any symbols found in Procedure Linkage Table sections if any exist.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-a|--all-symbols|Print all symbols, not just those that end in @plt|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:30.361337"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/strings.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/strings.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# strings\n\n```text\nusage: strings [-h] [-n N] [--save-as SAVE_AS] [page_names ...]\n\n```\n\nExtracts and displays ASCII strings from readable memory pages of the debugged process.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|page_names|Mapping to search [e.g. libc]. Can be used with multiple mappings [e.g libc heap stack] (default: '[]')|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-n||Minimum length of ASCII strings to include (default: 4)|\n||--save-as|Sets the filename for the output of this command [e.g. --save-as='out.txt']|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:30.434887"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/threads.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/threads.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# threads\n\n```text\nusage: threads [-h] [-c] [num_threads]\n\n```\n\nList all threads belonging to the selected inferior.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|num_threads|Number of threads to display. Omit to display all threads.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-c|--config|Respect context-max-threads config to limit number of threads displayed.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:30.496449"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/tls.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/tls.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# tls\n\n```text\nusage: tls [-h] [-p] [-a]\n\n```\n\nPrint out base address of the current Thread Local Storage (TLS).\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-p|--pthread-self|Try to get the address of TLS by calling pthread_self().|\n|-a|--all|Do not truncate the dump output.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:30.601479"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/track-got.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/track-got.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# track-got\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: track-got [-h] {enable,disable,info,query} ...\n\n```\n\nControls GOT tracking\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:30.665844"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/linux_libc_elf/track-heap.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/linux_libc_elf/track-heap.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# track-heap\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: track-heap [-h] {enable,disable,toggle-break} ...\n\n```\n\nManages the heap tracker.\n\nThe heap tracker is a module that tracks usage of the GLibc heap and looks for\nuser errors such as double frees and use after frees.\n\nCurrently, the following errors can be detected:\n    - Use After Free\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:30.779058"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/distance.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/distance.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# distance\n\n```text\nusage: distance [-h] a [b]\n\n```\n\nPrint the distance between the two arguments, or print the offset to the address's page base.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|a|The first address.|\n|b|The second address.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:31.123470"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/dump-register-frame.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/dump-register-frame.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# dump-register-frame\n\n```text\nusage: dump-register-frame [-h] [-p]\n                           {armcm-exception,armcm-exception2} [address]\n\n```\n\nDisplay the registers saved to memory for a certain frame type\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|frame_type|The type of frame to print|\n|address|The address to read the frame from|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-p|--print|Show addresses of frame values|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:31.252045"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/gdt.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/gdt.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# gdt\n\n```text\nusage: gdt [-h] address [count]\n\n```\n\nDecode X86-64 GDT entries at address\n\nSee also:\n\n* https://wiki.osdev.org/Global_Descriptor_Table\n* https://wiki.osdev.org/GDT_Tutorial\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|x86-64 GDTR base address (e.g. read from sgdt instruction from [16:79] bits)|\n|count|Number of entries to dump (should be (GDTR.size+1)/8) (default: 8)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n### Notes\nIn 64-bit mode, the Base and Limit values are ignored, each descriptor covers\nthe entire linear address space regardless of what they are set to.\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:31.300926"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/go-dump.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/go-dump.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# go-dump\n\n```text\nusage: go-dump [-h] [-x] [-f [DECIMALS]] [-d] [-p] ty address\n\n```\n\nDumps a Go value of a given type at a specified address.\n\n**Alias:** god\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|ty|Go type of value to dump, e.g. map[int]string, or the address of a type to resolve at runtime, e.g. 0x408860|\n|address|Address to dump|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-x|--hex|Display non-pointer integers as hex|\n|-f|--decimals|Configures the number of decimal places to display for floating points|\n|-d|--debug|Shows debug info, like addresses for slice/map elements, slice capacity, etc.|\n|-p|--pretty|Enables pretty printing|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:31.447297"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/go-type.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/go-type.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# go-type\n\n```text\nusage: go-type [-h] address\n\n```\n\nDumps a Go runtime reflection type at a specified address.\n\n**Alias:** goty\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|Address to dump|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:31.544939"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/hexdump.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/hexdump.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# hexdump\n\n```text\nusage: hexdump [-h] [address] [count]\n\n```\n\nHexdumps data at the specified address or module name.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|Address or module name to dump (default: $sp)|\n|count|Number of bytes to dump (default: 64)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:31.618804"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/leakfind.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/leakfind.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# leakfind\n\n```text\nusage: leakfind [-h] [-p [PAGE_NAME]] [-o [MAX_OFFSET]] [-d [MAX_DEPTH]]\n                [-s [STEP]] [--negative_offset [NEGATIVE_OFFSET]]\n                [address]\n\n```\n\nAttempt to find a leak chain given a starting address.\n\nScans memory near the given address, looks for pointers, and continues that process to attempt to find leaks.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|Starting address to find a leak chain from (default: $sp)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-p|--page_name|Substring required to be part of the name of any found pages|\n|-o|--max_offset|Max offset to add to addresses when looking for leak (default: 72)|\n|-d|--max_depth|Maximum depth to follow pointers to (default: 4)|\n|-s|--step|Step to add between pointers so they are considered. For example, if this is 4 it would only consider pointers at an offset divisible by 4 from the starting pointer (default: 1)|\n||--negative_offset|Max negative offset to search before an address when looking for a leak (default: 0)|\n\n### Examples\n```text\npwndbg> leakfind $rsp --page_name=filename --max_offset=0x48 --max_depth=6.\nThis would look for any chains of leaks that point to a section in filename\nwhich begin near $rsp, are never 0x48 bytes further from a known pointer,\nand are a maximum length of 6.\n```\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:31.678348"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/memfrob.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/memfrob.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# memfrob\n\n```text\nusage: memfrob [-h] address count\n\n```\n\nMemfrobs a region of memory (xor with '*').\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address to start xoring at.|\n|count|The number of bytes to xor.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:31.788533"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/mmap.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/mmap.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# mmap\n\n```text\nusage: mmap [-h] [--quiet] [--force] addr length [prot] [flags] [fd] [offset]\n\n```\n\nCalls the mmap syscall and prints its resulting address.\n\nNote that the mmap syscall may fail for various reasons\n(see `man mmap`) and, in case of failure, its return value\nwill not be a valid pointer.\n\nPROT values: NONE (0), READ (1), WRITE (2), EXEC (4)\n\nMAP values: SHARED (1), PRIVATE (2), SHARED_VALIDATE (3), FIXED (0x10),\n            ANONYMOUS (0x20)\n\nFlags and protection values can be either a string containing the names of the\nflags or permissions or a single number corresponding to the bitwise OR of the\nprotection and flag numbers.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address hint to be given to mmap.|\n|length|Length of the mapping, in bytes. Needs to be greater than zero.|\n|prot|Prot enum or int as in mmap(2). Eg. \"PROT_READ\\|PROT_EXEC\" or 7 (for RWX). (default: '7')|\n|flags|Flags enum or int as in mmap(2). Eg. \"MAP_PRIVATE\\|MAP_ANONYMOUS\" or 0x22. (default: '0x22')|\n|fd|File descriptor of the file to be mapped, or -1 if using MAP_ANONYMOUS. (default: -1)|\n|offset|Offset from the start of the file, in bytes, if using file based mapping. (default: 0)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-q|--quiet|Disable address validity warnings and hints|\n|-f|--force|Force potentially unsafe actions to happen|\n\n### Examples\n```text\nmmap 0x0 4096 PROT_READ|PROT_WRITE|PROT_EXEC MAP_PRIVATE|MAP_ANONYMOUS -1 0\n - Maps a new private+anonymous page with RWX permissions at a location\n   decided by the kernel.\n\nmmap 0x0 4096 PROT_READ MAP_PRIVATE 10 0\n - Maps 4096 bytes of the file pointed to by file descriptor number 10 with\n   read permission at a location decided by the kernel.\n\nmmap 0xdeadbeef 0x1000\n - Maps a new private+anonymous page with RWX permissions at a page boundary\n   near 0xdeadbeef.\n```\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:31.867294"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/mprotect.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/mprotect.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# mprotect\n\n```text\nusage: mprotect [-h] addr length prot\n\n```\n\nCalls the mprotect syscall and prints its result value.\n\nNote that the mprotect syscall may fail for various reasons\n(see `man mprotect`) and a non-zero error return value\ncan be decoded with the `errno <value>` command.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Page-aligned address to all mprotect on.|\n|length|Count of bytes to call mprotect on. Needs to be multiple of page size.|\n|prot|Prot string as in mprotect(2). Eg. \"PROT_READ\\|PROT_EXEC\", \"rx\", or \"5\"|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n### Examples\n```text\nmprotect $rsp 4096 PROT_READ|PROT_WRITE|PROT_EXEC\nmprotect $rsp 4096 rwx\nmprotect $rsp 4096 7\nmprotect some_symbol 0x1000 PROT_NONE\n```\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:31.919661"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/p2p.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/p2p.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# p2p\n\n```text\nusage: p2p [-h] mapping_names [mapping_names ...]\n\n```\n\nPointer to pointer chain search. Searches given mapping for all pointers that point to specified mapping.\n\nAny chain length greater than 0 is valid. If only one mapping is given it just looks for any pointers in that mapping.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|mapping_names|Mapping name |\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:31.996078"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/probeleak.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/probeleak.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# probeleak\n\n```text\nusage: probeleak [-h] [--max-distance MAX_DISTANCE] [--point-to POINT_TO]\n                 [--max-ptrs MAX_PTRS] [--flags FLAGS]\n                 [address] [count]\n\n```\n\nPointer scan for possible offset leaks.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|Leak memory address (default: $sp)|\n|count|Leak size in bytes (default: 64)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n||--max-distance|Max acceptable distance between memory page boundary and leaked pointer (default: 0)|\n||--point-to|Mapping name of the page that you want the pointers point to|\n||--max-ptrs|Stop search after find n pointers, default 0 (default: 0)|\n||--flags|flags of the page that you want the pointers point to. [e.g. rwx]|\n\n### Examples\n```text\n> probeleak $rsp 0x64\nLeaks 0x64 bytes starting at stack pointer and search for valid pointers.\n> probeleak $rsp 0x64 --max-dist 0x10\nAs above, but pointers may point 0x10 bytes outside of memory page.\n> probeleak $rsp 0x64 --point-to libc --max-ptrs 1 --flags rwx\nLeaks 0x64 bytes starting at stack pointer and search for one valid pointer\nwhich points to a libc rwx page.\n```\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:32.065918"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/search.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/search.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# search\n\n```text\nusage: search [-h] [-t {byte,short,word,dword,qword,pointer,string,bytes,asm}]\n              [-1] [-2] [-4] [-8] [-p] [--asm] [--asmbp] [-x] [-e] [-w]\n              [-s STEP] [-l LIMIT] [-a ALIGNED] [--save] [--no-save] [-n]\n              [--trunc-out]\n              value [mapping_name]\n\n```\n\nSearch memory for byte sequences, strings, pointers, and integer values.\n\nBy default search results are cached. If you want to cache all results, but only print a subset, use --trunc-out. If you want to cache only a subset of results, and print the results immediately, use --limit. The latter is specially useful if you're searching a huge section of memory.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|value|Value to search for|\n|mapping_name|Mapping to search [e.g. libc]|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-t|--type|Size of search target (default: 'bytes')|\n|-1|--byte|Search for a 1-byte integer|\n|-2|--short|Search for a 2-byte integer|\n|-4|--dword|Search for a 4-byte integer|\n|-8|--qword|Search for an 8-byte integer|\n|-p|--pointer|Search for a pointer-width integer|\n||--asm|Search for an assembly instruction|\n||--asmbp|Set breakpoint for found assembly instruction|\n|-x|--hex|Target is a hex-encoded (for bytes/strings)|\n|-e|--executable|Search executable segments only|\n|-w|--writable|Search writable segments only|\n|-s|--step|Step search address forward to next alignment after each hit (ex: 0x1000)|\n|-l|--limit|Max results before quitting the search. Differs from --trunc-out in that it will not save all search results before quitting|\n|-a|--aligned|Result must be aligned to this byte boundary|\n||--save|Save results for further searches with --next. Default comes from config 'auto-save-search'|\n||--no-save|Invert --save|\n|-n|--next|Search only locations returned by previous search with --save|\n||--trunc-out|Truncate the output to 20 results. Differs from --limit in that it will first save all search results|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:32.140587"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/telescope.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/telescope.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# telescope\n\n```text\nusage: telescope [-h] [-r] [-f] [-i] [address] [count]\n\n```\n\nRecursively dereferences pointers starting at the specified address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address to telescope at. (default: $sp)|\n|count|The number of lines to show. (default: 8)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-r|--reverse|Show <count> previous addresses instead of next ones|\n|-f|--frame|Show the stack frame, from rsp to rbp|\n|-i|--inverse|Show the stack reverse growth|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:32.219512"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/vmmap-add.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/vmmap-add.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# vmmap-add\n\n```text\nusage: vmmap-add [-h] start size [flags] [offset]\n\n```\n\nAdd virtual memory map page.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|start|Starting virtual address|\n|size|Size of the address space, in bytes|\n|flags|Flags set by the ELF file (r - read, w - write, x - executable) (default: '')|\n|offset|Offset into the original ELF file that the data is loaded from (default: 0)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:32.314979"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/vmmap-clear.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/vmmap-clear.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# vmmap-clear\n\n```text\nusage: vmmap-clear [-h]\n\n```\n\nClear the vmmap cache.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:32.391060"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/vmmap-explore.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/vmmap-explore.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# vmmap-explore\n\n```text\nusage: vmmap-explore [-h] address\n\n```\n\nExplore a page, trying to guess permissions.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|Address of the page to explore|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:32.469132"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/vmmap.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/vmmap.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# vmmap\n\n```text\nusage: vmmap [-h] [-w] [-x] [-s] [-A LINES_AFTER] [-B LINES_BEFORE]\n             [-C CONTEXT] [--gaps]\n             [gdbval_or_str]\n\n```\n\nPrint virtual memory map pages.\n\nUnnamed mappings are named as [anon_%#x] where %#x is high part of their start address. This is useful for filtering with `vmmap` or `search` commands.\n\nKnown issues with vmmap:\nFor QEMU user targets, the QEMU's gdbstub does not provide memory maps information to GDB until [0] is finished & merged. We try to deal with it without parsing the QEMU process' /proc/$pid/maps file, but if our approach fails, we simply create a [0, 0xffff...] vmmap which is not great and may result in lack of proper colors or inability to search memory with the `search` command.\n\nFor QEMU kernel, we use gdb-pt-dump that parses page tables from the guest by reading /proc/$pid/mem of QEMU process. If this does not work for you, use `set kernel-vmmap-via-page-tables off` to refer to our old method of reading vmmap info from `monitor info mem` command exposed by QEMU. Note that the latter may be slower and will not give full vmmaps permission information.\n\nFor coredump debugging, GDB also lacks all vmmap info but we do our best to get it back by using the `info proc mappings` and `maintenance info sections` commands.\n\nAs a last resort, we sometimes try to explore the addresses in CPU registers and if they are readable by GDB, we determine their bounds and create an \"<explored>\" vmmap. However, this method is slow and is not used on each GDB stop.\n\nMemory pages can also be added manually with the use of vmmap-add, vmmap-clear and vmmap-load commands. This may be useful for bare metal debugging.\n\n[0] https://lore.kernel.org/all/20220221030910.3203063-1-dominik.b.czarnota@gmail.com/\n\n**Aliases:** lm, address, vprot, libs\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|gdbval_or_str|Address or module name filter|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-w|--writable|Display writable maps only|\n|-x|--executable|Display executable maps only|\n|-s|--expand-shared-cache|Expand all entries in the DYLD Shared Cache (Darwin only)|\n|-A|--lines-after|Number of pages to display after result (default: 1)|\n|-B|--lines-before|Number of pages to display before result (default: 1)|\n|-C|--context|Number of pages to display around the result|\n||--gaps|Display unmapped memory gap information in the memory map.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:32.580811"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/xinfo.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/xinfo.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# xinfo\n\n```text\nusage: xinfo [-h] [address]\n\n```\n\nShows offsets of the specified address from various useful locations.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|Address to inspect (default: $pc)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:32.633767"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/memory/xor.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/memory/xor.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# xor\n\n```text\nusage: xor [-h] address key count\n\n```\n\nXOR `count` bytes at `address` with the key `key`.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address to start xoring at.|\n|key|The key to use.|\n|count|The number of bytes to xor.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:32.679815"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/asm.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/asm.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# asm\n\n```text\nusage: asm [-h] [-f {hex,string}]\n           [--arch {powerpc64,aarch64,powerpc,riscv32,riscv64,sparc64,mips64,msp430,alpha,amd64,sparc,thumb,cris,i386,ia64,m68k,mips,s390,none,avr,arm,vax}]\n           [-v AVOID] [-n] [-z] [-i INFILE]\n           [shellcode ...]\n\n```\n\nAssemble shellcode into bytes\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|shellcode|Assembler code to assemble (default: '[]')|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-f|--format|Output format (default: 'hex')|\n||--arch|Target architecture|\n|-v|--avoid|Encode the shellcode to avoid the listed bytes (provided as hex)|\n|-n|--newline|Encode the shellcode to avoid newlines|\n|-z|--zero|Encode the shellcode to avoid NULL bytes|\n|-i|--infile|Specify input file|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:32.927606"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/checksec.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/checksec.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# checksec\n\n```text\nusage: checksec [-h] [-f FILE]\n\n```\n\nPrints out the binary security settings using `checksec`.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-f|--file|Specify the file to run `checksec` on.|\n\n### Examples\n```text\npwndbg> checksec\nFile:     /usr/bin/bash\nArch:     amd64\nRELRO:      Full RELRO\nStack:      Canary found\nNX:         NX enabled\nPIE:        PIE enabled\nSHSTK:      Enabled\nIBT:        Enabled\n```\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:33.031764"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/comm.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/comm.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# comm\n\n```text\nusage: comm [-h] [--addr address] comment\n\n```\n\nPut comments in assembly code.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|comment|The text you want to comment|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n||--addr|Address to write comments|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:33.116712"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/cyclic.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/cyclic.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# cyclic\n\n```text\nusage: cyclic [-h] [-a charset] [-n length] [-t seconds] [-l lookup_value]\n              [-d]\n              [count] [filename]\n\n```\n\nCyclic pattern creator/finder.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|count|Number of characters to print from the sequence (default: print the entire sequence) (default: 100)|\n|filename|Name (path) of the file to save the cyclic pattern to|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-a|--alphabet|The alphabet to use in the cyclic pattern (default: abcdefghijklmnopqrstuvwxyz)|\n|-n|--length|Size of the unique subsequences (defaults to the pointer size for the current arch)|\n|-t|--timeout|Timeout in seconds for --detect (default: 2)|\n|-o|--lookup|Do a lookup instead of printing the sequence (accepts constant values as well as expressions)|\n|-d|--detect|Detect cyclic patterns in registers (Immediate values and memory pointed to by registers)|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:33.183674"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/cymbol.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/cymbol.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# cymbol\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: cymbol [-h] {add,remove,edit,load,show,file,show-all} ...\n\n```\n\nManage custom C structures in pwndbg. Supports project-specific auto-loading from .gdbinit.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|subcommand|Available subcommands|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n### Notes\nThe `cymbol` command loads custom C structs and symbols into the debugger using GCC under the hood.\n\n Usage Example:\n    `cymbol file --force ./structs.h`\n\n --force:\n    Use this flag to force symbol reloading, even if symbols with the same name already exist.\n\n Warning:\n    If a loaded structure defines a symbol that already exists, the debugger may prefer the original\n    symbol or behave unexpectedly. It’s recommended to use unique struct names to avoid\n    symbol conflicts.\n\n\n Tip:\n    You can add this command to your `.gdbinit` file for automatic loading:\n        `cymbol file --force ./path/to/structs.h`\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:33.262307"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/down.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/down.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# down\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: down [-h] [n]\n\n```\n\nSelect and print stack frame called by this one.\n\n**Aliases:** do, dow\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|n|The number of stack frames to go down. (default: 1)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:33.337406"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/dt.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/dt.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# dt\n\n```text\nusage: dt [-h] typename [address]\n\n```\n\nDump out information on a type (e.g. ucontext_t).\n\nOptionally overlay that information at an address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|typename|The name of the structure being dumped. Use quotes if the type contains spaces (e.g. \"struct malloc_state\").|\n|address|The address of the structure.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:33.409856"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/dumpargs.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/dumpargs.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# dumpargs\n\n```text\nusage: dumpargs [-h] [-f]\n\n```\n\nPrints determined arguments for call/syscall instruction.\n\n**Alias:** args\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-f|--force|Force displaying of all arguments.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:33.475699"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/getfile.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/getfile.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# getfile\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: getfile [-h]\n\n```\n\nGets the current file.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:33.558048"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/hex2ptr.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/hex2ptr.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# hex2ptr\n\n```text\nusage: hex2ptr [-h] hex_string\n\n```\n\nConverts a space-separated hex string to a little-endian address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|hex_string|Hexadecimal string to convert (e.g., '00 70 75 c1 cd ef 59 00').|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:33.660788"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/hijack-fd.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/hijack-fd.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# hijack-fd\n\n```text\nusage: hijack-fd [-h] fdnum newfile\n\n```\n\nReplace a file descriptor of a debugged process.\n\nThe new file descriptor can point to:\n\n- a file\n- a pipe\n- a socket\n- a device, etc.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|fdnum|File descriptor (FD) number to be replaced with the specified new socket or file.|\n|newfile|Specify a file or a socket.  For files, the filename must start with `/` (e.g., `/etc/passwd`).  For sockets, the following formats are allowed: - `127.0.0.1:80` (default is TCP) - `tcp://[::1]:80` - `udp://example.com:80` - `tcp+ipv6://example.com:80`     |\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n### Examples\n```text\n1. Redirect STDOUT to a file:\n   `hijack-fd 1 /dev/null`\n\n2. Redirect STDERR to a socket:\n   `hijack-fd 2 tcp://localhost:8888`\n```\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:33.710981"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/ipi.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/ipi.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# ipi\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: ipi [-h]\n\n```\n\nStart an interactive IPython prompt.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:33.749862"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/patch-list.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/patch-list.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# patch-list\n\n```text\nusage: patch-list [-h]\n\n```\n\nList all patches.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:33.838786"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/patch-revert.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/patch-revert.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# patch-revert\n\n```text\nusage: patch-revert [-h] address\n\n```\n\nRevert patch at given address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|Address to revert patch on|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:33.949398"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/patch.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/patch.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# patch\n\n```text\nusage: patch [-h] [-q] address ins\n\n```\n\nPatches given instruction with given code or bytes.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address to patch|\n|ins|instruction[s]|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-q|--quiet|don't print anything|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:34.001479"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/plist.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/plist.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# plist\n\n```text\nusage: plist [-h] [-s SENTINEL] [-i INNER_NAME] [-f FIELD_NAME] [-o OFFSET]\n             [-c COUNT]\n             path next\n\n```\n\nDumps the elements of a linked list.\n\nThis command traverses the linked list beginning at a given element, dumping its\ncontents and the contents of all the elements that come after it in the list.\nTraversal is configurable and can handle multiple types of linked lists, but will\nalways stop when a cycle is detected.\n\nThe path to the first element can be any GDB expression that evaluates to either\nthe first element directly, or a to pointer to it. The next element is the name\nof the field containing the next pointer, in either the structure itself or in\nthe structure given by --inner.\n\nAn address value may be given with --sentinel that signals the end of the list.\nBy default, the value used is NULL (0).\n\nIf only one field inside each node is desired, it can be printed exclusively by\nspecifying its name with --field.\n\nThis command supports traversing three types of linked lists, classified by how\nthe next pointer can be found in the structure and what type it is:\n    1 - Next pointer is field of structure, type is the same as structure.\n    2 - Next pointer is field of inner nested structure, pointed to type is the\n        same as outer structure.\n    3 - Next pointer is field of inner nested structure, pointed to type is the\n        same as inner structure.\nTypes 2 and 3 require --inner to be specified.\n\nExample 1:\n\n```\nstruct node {\n    int value;\n    struct node *next;\n};\nstruct node node_c = { 2, NULL };\nstruct node node_b = { 1, &node_c };\nstruct node node_a = { 0, &node_b };\n```\n\npwndbg> plist node_a next\n0x4000011050 <node_a>: {\n  value = 0,\n  next = 0x4000011040 <node_b>\n}\n0x4000011040 <node_b>: {\n  value = 1,\n  next = 0x4000011010 <node_c>\n}\n0x4000011010 <node_c>: {\n  value = 2,\n  next = 0x0\n}\n\nExample 2:\n\n```\nstruct node_inner_a {\n    struct node_inner_a *next;\n};\nstruct inner_a_node {\n    int value;\n    struct node_inner_a inner;\n};\nstruct inner_a_node inner_a_node_c = { 2, { NULL } };\nstruct inner_a_node inner_a_node_b = { 1, { &inner_a_node_c.inner } };\nstruct inner_a_node inner_a_node_a = { 0, { &inner_a_node_b.inner } };\n```\n\npwndbg> plist inner_a_node_a -i inner next\n0x4000011070 <inner_a_node_a>: {\n  value = 0,\n  inner = {\n    next = 0x4000011068 <inner_a_node_b+8>\n  }\n}\n0x4000011060 <inner_a_node_b>: {\n  value = 1,\n  inner = {\n    next = 0x4000011028 <inner_a_node_c+8>\n  }\n}\n0x4000011020 <inner_a_node_c>: {\n  value = 2,\n  inner = {\n    next = 0x0\n  }\n}\n\nExample 3:\n\n```\nstruct inner_b_node;\nstruct node_inner_b {\n    struct inner_b_node *next;\n};\nstruct inner_b_node {\n    int value;\n    struct node_inner_b inner;\n};\nstruct inner_b_node inner_b_node_c = { 2, { NULL } };\nstruct inner_b_node inner_b_node_b = { 1, { &inner_b_node_c } };\nstruct inner_b_node inner_b_node_a = { 0, { &inner_b_node_b } };\n```\n\npwndbg> plist inner_b_node_a -i inner next\n0x4000011090 <inner_b_node_a>: {\n  value = 0,\n  inner = {\n    next = 0x4000011080 <inner_b_node_b>\n  }\n}\n0x4000011080 <inner_b_node_b>: {\n  value = 1,\n  inner = {\n    next = 0x4000011030 <inner_b_node_c>\n  }\n}\n0x4000011030 <inner_b_node_c>: {\n  value = 2,\n  inner = {\n    next = 0x0\n  }\n}\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|path|The first element of the linked list|\n|next|The name of the field pointing to the next element in the list|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-s|--sentinel|The address that stands in for an end of list marker in a non-cyclic list (default: 0)|\n|-i|--inner|The name of the inner nested structure where the next pointer is stored|\n|-f|--field|The name of the field to be displayed, if only one is desired|\n|-o|--offset|The offset of the first list element to display. Defaults to zero. (default: 0)|\n|-c|--count|The number of elements to display. Defaults to the value of dereference-limit.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:34.078428"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/sigreturn.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/sigreturn.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# sigreturn\n\n```text\nusage: sigreturn [-h] [-a] [-p] [address]\n\n```\n\nDisplay the SigreturnFrame at the specific address\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address to read the frame from|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-a|--all|Show all values in the frame in addition to common registers|\n|-p|--print|Show addresses of frame values|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:34.186051"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/spray.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/spray.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# spray\n\n```text\nusage: spray [-h] [--value VALUE] [-x] addr [length]\n\n```\n\nSpray memory with cyclic() generated values\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address to spray|\n|length|Length of byte sequence, when unspecified sprays until the end of vmmap which address belongs to (default: 0)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n||--value|Value to spray memory with, when prefixed with '0x' treated as hex string encoded big-endian|\n|-x|--only-funcptrs|Spray only addresses whose values points to executable pages|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:34.341375"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/tips.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/tips.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# tips\n\n```text\nusage: tips [-h] [-a]\n\n```\n\nShows tips.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-a|--all|Show all tips.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:34.417123"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/up.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/up.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# up\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: up [-h] [n]\n\n```\n\nSelect and print stack frame that called this one.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|n|The number of stack frames to go up. (default: 1)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:34.543763"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/valist.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/valist.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# valist\n\n```text\nusage: valist [-h] addr [count]\n\n```\n\nDumps the arguments of a va_list.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|Address of the va_list|\n|count|Number of arguments to dump (default: 8)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:34.688879"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/misc/vmmap-load.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/misc/vmmap-load.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# vmmap-load\n\n```text\nusage: vmmap-load [-h] [filename]\n\n```\n\nLoad virtual memory map pages from ELF file.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|filename|ELF filename, by default uses current loaded filename.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:34.864575"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/musl/mallocng-dump.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/musl/mallocng-dump.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# mallocng-dump\n\n```text\nusage: mallocng-dump [-h] [-ma META_AREA]\n\n```\n\nDump the mallocng heap.\n\nMay produce lots of output.\n\n**Alias:** ng-dump\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-ma|--meta-area|Dump only the meta area at the provided address.|\n\n### Notes\nSince the command may produce lots of output, you may want to pipe it to\nless with `| ng-dump | less -R`.\n\nThe [index] next to the metas is their index in the doubly linked list\npointed to by ctx.freed_meta_head. The [index] next to the slots is\nthe slot's index inside of its group (thus, these will always be sequential).\n\nNotice that the pointers in the output of this command aren't colored according\nto their mapping's color but rather according to the object's allocation status.\nColor legend: allocated; freed; available.\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:35.282421"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/musl/mallocng-explain.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/musl/mallocng-explain.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# mallocng-explain\n\n```text\nusage: mallocng-explain [-h]\n\n```\n\nGives a quick explanation of musl's mallocng allocator.\n\n**Alias:** ng-explain\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:35.419516"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/musl/mallocng-find.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/musl/mallocng-find.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# mallocng-find\n\n```text\nusage: mallocng-find [-h] [-a] [-m] [-s] address\n\n```\n\nFind slot which contains the given address.\n\nReturns the `start` of the slot. We say a slot 'contains'\nan address if the address is in [start, start + stride).\n\n**Alias:** ng-find\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address to look for.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-a|--all|Print out all information. Including meta and group data.|\n|-m|--metadata|If the given address falls onto some in-band metadata, return the slot which owns that metadata. In other words, the containment check becomes [start - IB, end).|\n|-s|--shallow|Return the biggest slot which contains this address, don't recurse for smaller slots. The group  which owns this slot will not be a nested group.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:35.576841"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/musl/mallocng-group.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/musl/mallocng-group.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# mallocng-group\n\n```text\nusage: mallocng-group [-h] [-i INDEX] address\n\n```\n\nPrint out information about a mallocng group at the given address.\n\n**Alias:** ng-group\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address of the group object.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-i|--index|Print start address of slot at given index (0-indexed).|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:35.702949"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/musl/mallocng-malloc-context.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/musl/mallocng-malloc-context.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# mallocng-malloc-context\n\n```text\nusage: mallocng-malloc-context [-h] [address]\n\n```\n\nPrint out the mallocng __malloc_context (ctx) object.\n\n**Alias:** ng-ctx\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|Use the provided address instead of the one Pwndbg found.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:35.827629"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/musl/mallocng-meta-area.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/musl/mallocng-meta-area.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# mallocng-meta-area\n\n```text\nusage: mallocng-meta-area [-h] [-i INDEX] address\n\n```\n\nPrint out a mallocng meta_area object at the given address.\n\n**Aliases:** ng-metaarea, ng-ma\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address of the meta_area object.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-i|--index|Print address of meta at given index (0-indexed).|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:35.955621"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/musl/mallocng-meta.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/musl/mallocng-meta.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# mallocng-meta\n\n```text\nusage: mallocng-meta [-h] address\n\n```\n\nPrint out information about a mallocng group given the address of its meta.\n\n**Alias:** ng-meta\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address of the meta object.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:36.039991"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/musl/mallocng-slot-start.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/musl/mallocng-slot-start.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# mallocng-slot-start\n\n```text\nusage: mallocng-slot-start [-h] [-a] address\n\n```\n\nDump information about a mallocng slot, given its start address.\n\n**Alias:** ng-slots\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The start of the slot (not including IB).|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-a|--all|Print out all information. Including meta and group data.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:36.184379"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/musl/mallocng-slot-user.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/musl/mallocng-slot-user.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# mallocng-slot-user\n\n```text\nusage: mallocng-slot-user [-h] [-a] address\n\n```\n\nDump information about a mallocng slot, given its user address.\n\n**Alias:** ng-slotu\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The start of user memory. Referred to as `p` in the source.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-a|--all|Print out all information. Including meta and group data.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:36.272992"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/musl/mallocng-visualize-slots.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/musl/mallocng-visualize-slots.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# mallocng-visualize-slots\n\n```text\nusage: mallocng-visualize-slots [-h] address [count]\n\n```\n\nVisualize slots in a group.\n\n**Alias:** ng-vis\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|Address which is inside some slot.|\n|count|The amount of slots to visualize. (default: 10)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:36.384013"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/process/killthreads.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/process/killthreads.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# killthreads\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: killthreads [-h] [-a] [thread_ids ...]\n\n```\n\nKill all or given threads.\n\nSwitches to given threads and calls pthread_exit(0) on them.\nThis is performed with scheduler-locking to prevent other threads from operating at the same time.\n\nKilling all other threads may be useful to use GDB checkpoints, e.g., to test given input & restart the execution to the point of interest (checkpoint).\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|thread_ids|Thread IDs to kill.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-a|--all|Kill all threads except the current one.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:36.716991"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/process/pid.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/process/pid.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# pid\n\n```text\nusage: pid [-h]\n\n```\n\nGets the pid.\n\n**Alias:** getpid\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:36.820342"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/process/procinfo.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/process/procinfo.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# procinfo\n\n```text\nusage: procinfo [-h]\n\n```\n\nDisplay information about the running process.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:36.920810"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/pwndbg/bugreport.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/pwndbg/bugreport.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# bugreport\n\n```text\nusage: bugreport [-h] [--run-browser | --use-gh]\n\n```\n\nGenerate a bug report.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-b|--run-browser|Open browser on github/issues/new|\n|-g|--use-gh|Create issue using Github CLI|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:37.234504"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/pwndbg/config.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/pwndbg/config.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# config\n\n```text\nusage: config [-h] [filter_pattern]\n\n```\n\nShows Pwndbg-specific configuration.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|filter_pattern|Filter to apply to config parameters names/descriptions|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:37.327094"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/pwndbg/configfile.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/pwndbg/configfile.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# configfile\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: configfile [-h] [--show-all]\n\n```\n\nGenerates a configuration file for the current Pwndbg options.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n||--show-all|Display all configuration options.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:37.420138"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/pwndbg/heap-config.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/pwndbg/heap-config.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# heap-config\n\n```text\nusage: heap-config [-h] [filter_pattern]\n\n```\n\nShows heap related configuration.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|filter_pattern|Filter to apply to config parameters names/descriptions|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:37.491006"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/pwndbg/memoize.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/pwndbg/memoize.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# memoize\n\n```text\nusage: memoize [-h]\n\n```\n\nToggles memoization (caching).\n\nUseful for diagnosing caching-related bugs. Decreases performance.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:37.565279"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/pwndbg/profiler.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/pwndbg/profiler.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# profiler\n\n```text\nusage: profiler [-h] {start,stop} ...\n\n```\n\nUtilities for profiling Pwndbg.\n\nCheck out the `./profiling` folder for other useful utilities.\nUse `./profiling/print_stats.py` to generate a report from a `.pstats` file.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|command||\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:37.688008"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/pwndbg/pwndbg.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/pwndbg/pwndbg.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# pwndbg\n\n```text\nusage: pwndbg [-h] [-c CATEGORY_ | --list-categories] [filter_pattern]\n\n```\n\nPrints out a list of all Pwndbg commands.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|filter_pattern|Filter to apply to commands names/docs|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-c|--category|Filter commands by category|\n||--list-categories|List command categories|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:37.795091"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/pwndbg/reinit-pwndbg.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/pwndbg/reinit-pwndbg.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# reinit-pwndbg\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: reinit-pwndbg [-h]\n\n```\n\nMakes Pwndbg reinitialize all state.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:37.887025"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/pwndbg/reload.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/pwndbg/reload.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# reload\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: reload [-h]\n\n```\n\nReload Pwndbg.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:37.981284"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/pwndbg/theme.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/pwndbg/theme.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# theme\n\n```text\nusage: theme [-h] [filter_pattern]\n\n```\n\nShows Pwndbg-specific theme configuration.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|filter_pattern|Filter to apply to theme parameters names/descriptions|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:38.107180"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/pwndbg/themefile.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/pwndbg/themefile.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# themefile\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: themefile [-h] [--show-all]\n\n```\n\nGenerates a configuration file for the current Pwndbg theme options.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n||--show-all|Force displaying of all theme options.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:38.245990"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/pwndbg/version.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/pwndbg/version.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# version\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: version [-h]\n\n```\n\nDisplays Pwndbg and its important deps versions.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:38.474336"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/register/cpsr.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/register/cpsr.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# cpsr\n\n```text\nusage: cpsr [-h] [cpsr_value]\n\n```\n\nPrint out ARM CPSR or xPSR register.\n\n**Aliases:** xpsr, pstate\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|cpsr_value|Parse the given CPSR value instead of the actual one.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:38.828610"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/register/fsbase.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/register/fsbase.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# fsbase\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: fsbase [-h]\n\n```\n\nPrints out the FS base address. See also $fsbase.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:38.945054"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/register/gsbase.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/register/gsbase.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# gsbase\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: gsbase [-h]\n\n```\n\nPrints out the GS base address. See also $gsbase.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:39.066342"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/register/setflag.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/register/setflag.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# setflag\n\n```text\nusage: setflag [-h] flag value\n\n```\n\nModify the flags register.\n\n**Alias:** flag\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|flag|Flag for which you want to change the value|\n|value|Value to which you want to set the flag - only valid options are 0 and 1|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n### Examples\n```text\nOn X86/X64:\n    setflag ZF 1        -- set zero flag\n    setflag CF 0        -- unset carry flag\n\nOn ARM:\n    setflag Z 0         -- unset the Z cpsr/xpsr flag\n\nTo see flags registers:\n    info reg eflags     -- on x86/x64\n    info reg cpsr/xpsr  -- on ARM (specific register may vary)\n```\n### Notes\nThis command supports flags registers that are defined for architectures in the pwndbg/regs.py file.\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:39.143465"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/stack/canary.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/stack/canary.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# canary\n\n```text\nusage: canary [-h] [-a]\n\n```\n\nPrint out the current stack canary.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-a|--all|Print out stack canaries for all threads instead of the current thread only.|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:39.486568"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/stack/retaddr.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/stack/retaddr.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# retaddr\n\n```text\nusage: retaddr [-h]\n\n```\n\nPrint out the stack addresses that contain return addresses.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:39.559272"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/stack/stack-explore.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/stack/stack-explore.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# stack-explore\n\n```text\nusage: stack-explore [-h]\n\n```\n\nExplore stack from all threads.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:39.611613"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/stack/stack.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/stack/stack.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# stack\n\n```text\nusage: stack [-h] [-f] [-i] [count] [offset]\n\n```\n\nDereferences on stack data with specified count and offset.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|count|number of element to dump (default: 8)|\n|offset|Element offset from $sp (support negative offset) (default: 0)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n|-f|--frame|Show the stack frame, from rsp to rbp|\n|-i|--inverse|Show reverse stack growth|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:39.672584"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/stack/stackf.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/stack/stackf.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# stackf\n\n```text\nusage: stackf [-h] [count] [offset]\n\n```\n\nDereferences on stack data, printing the entire stack frame with specified count and offset .\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|count|number of element to dump (default: 8)|\n|offset|Element offset from $sp (support negative offset) (default: 0)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:39.745379"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/start/attachp.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/start/attachp.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# attachp\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: attachp [-h] [--no-truncate] [--retry] [--user USER] [-e] [-a] [target]\n\n```\n\nAttaches to a given pid, process name, process found with partial argv match or to a device file.\n\nThis command wraps the original GDB `attach` command to add the ability\nto debug a process with a given name or partial name match. In such cases,\nthe process identifier is fetched via the `pidof <name>` command first. If no\nmatches are found, then it uses the `ps -eo pid,args` command to search for\npartial name matches.\n\nOriginal GDB attach command help:\n    Attach to a process or file outside of GDB.\n    This command attaches to another target, of the same type as your last\n    \"target\" command (\"info files\" will show your target stack).\n    The command may take as argument a process id or a device file.\n    For a process id, you must have permission to send the process a signal,\n    and it must have the same effective uid as the debugger.\n    When using \"attach\" with a process id, the debugger finds the\n    program running in the process, looking first in the current working\n    directory, or (if not found there) using the source file search path\n    (see the \"directory\" command).  You can also use the \"file\" command\n    to specify the program, and to load its symbol table.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|target|pid, process name, part of cmdline to be matched or device file to attach to (uses current loaded file name if not provided)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n||--no-truncate|dont truncate command args|\n||--retry|retry until a target is found|\n||--user|username or uid to filter by|\n|-e|--exact|get the pid only for an exact command name match|\n|-a|--all|get pids also for partial cmdline matches etc|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:40.113055"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/start/entry.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/start/entry.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# entry\n\n```text\nusage: entry [-h] [args ...]\n\n```\n\nStart the debugged program stopping at its entrypoint address.\n\nNote that the entrypoint may not be the first instruction executed\nby the program. If you want to stop on the first executed instruction,\nuse the GDB's `starti` command or LLDB's `process launch -s`.\n\nArgs may include \"*\", or \"[...]\"; they are expanded using the\nshell that will start the program (specified by the \"$SHELL\" environment\nvariable).  Input and output redirection with \">\", \"<\", or \">>\"\nare also allowed.\n\nWith no arguments, uses arguments last specified (with \"run\" or\n\"set args\").  To cancel previous arguments and run with no arguments,\nuse \"set args\" without arguments.\n\nTo start the inferior without using a shell, use \"set startup-with-shell off\".\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|args|The arguments to run the binary with.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:40.180338"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/start/sstart.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/start/sstart.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# sstart\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: sstart [-h]\n\n```\n\nAlias for 'tbreak __libc_start_main; run'.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:40.253005"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/start/start.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/start/start.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# start\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: start [-h] [args ...]\n\n```\n\nStart the debugged program stopping at the first convenient location\nfrom this list: main, _main, start, _start, init or _init.\nYou may specify arguments to give it.\n\nArgs may include \"*\", or \"[...]\"; they are expanded using the\nshell that will start the program (specified by the \"$SHELL\" environment\nvariable).  Input and output redirection with \">\", \"<\", or \">>\"\nare also allowed.\n\nWith no arguments, uses arguments last specified (with \"run\" or\n\"set args\").  To cancel previous arguments and run with no arguments,\nuse \"set args\" without arguments.\n\nTo start the inferior without using a shell, use \"set startup-with-shell off\".\n\n**Aliases:** main, init\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|args|The arguments to run the binary with.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:40.328216"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/step_next_continue/nextcall.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/step_next_continue/nextcall.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# nextcall\n\n```text\nusage: nextcall [-h] [symbol_regex]\n\n```\n\nBreaks at the next call instruction.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|symbol_regex|A regex matching the name of next symbol to be broken on before calling.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:40.622905"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/step_next_continue/nextjmp.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/step_next_continue/nextjmp.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# nextjmp\n\n```text\nusage: nextjmp [-h]\n\n```\n\nBreaks at the next jump instruction.\n\n**Alias:** nextjump\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:40.677292"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/step_next_continue/nextproginstr.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/step_next_continue/nextproginstr.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# nextproginstr\n\n```text\nusage: nextproginstr [-h]\n\n```\n\nBreaks at the next instruction that belongs to the running program.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:40.773674"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/step_next_continue/nextret.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/step_next_continue/nextret.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# nextret\n\n```text\nusage: nextret [-h]\n\n```\n\nBreaks at next return-like instruction.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:40.853583"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/step_next_continue/nextsyscall.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/step_next_continue/nextsyscall.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# nextsyscall\n\n```text\nusage: nextsyscall [-h]\n\n```\n\nBreaks at the next syscall not taking branches.\n\n**Alias:** nextsc\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:40.950801"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/step_next_continue/stepover.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/step_next_continue/stepover.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# stepover\n\n```text\nusage: stepover [-h] [addr]\n\n```\n\nBreaks on the instruction after this one.\n\n**Alias:** so\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|The address to break after.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:41.054848"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/step_next_continue/stepret.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/step_next_continue/stepret.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# stepret\n\n```text\nusage: stepret [-h]\n\n```\n\nBreaks at next return-like instruction by 'stepping' to it.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:41.119530"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/step_next_continue/stepsyscall.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/step_next_continue/stepsyscall.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# stepsyscall\n\n```text\nusage: stepsyscall [-h]\n\n```\n\nBreaks at the next syscall by taking branches.\n\n**Alias:** stepsc\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:41.188620"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/step_next_continue/stepuntilasm.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/step_next_continue/stepuntilasm.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# stepuntilasm\n\n```text\nusage: stepuntilasm [-h] mnemonic [op_str ...]\n\n```\n\nBreaks on the next matching instruction.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|mnemonic|The mnemonic of the instruction|\n|op_str|The operands of the instruction|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:41.330231"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/step_next_continue/xuntil.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/step_next_continue/xuntil.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# xuntil\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: xuntil [-h] target\n\n```\n\nContinue execution until an address or expression.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|target|Location to stop execution at|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:41.389013"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/bc.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/bc.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# bc\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: bc [-h] [which]\n\n```\n\nClear the breakpoint with the specified index.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|which|Index of the breakpoint to clear. (default: '*')|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:41.726346"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/bd.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/bd.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# bd\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: bd [-h] [which]\n\n```\n\nDisable the breakpoint with the specified index.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|which|Index of the breakpoint to disable. (default: '*')|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:41.789301"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/be.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/be.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# be\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: be [-h] [which]\n\n```\n\nEnable the breakpoint with the specified index.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|which|Index of the breakpoint to enable. (default: '*')|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:41.896069"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/bl.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/bl.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# bl\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: bl [-h]\n\n```\n\nList breakpoints.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:42.046374"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/bp.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/bp.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# bp\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: bp [-h] where\n\n```\n\nSet a breakpoint at the specified address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|where|The address to break at.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:42.156125"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/da.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/da.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# da\n\n```text\nusage: da [-h] address [max]\n\n```\n\nDump a string at the specified address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|Address to dump|\n|max|Maximum string length (default: 256)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:42.257015"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/db.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/db.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# db\n\n```text\nusage: db [-h] address [count]\n\n```\n\nStarting at the specified address, dump N bytes.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address to dump from.|\n|count|The number of bytes to dump. (default: 64)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:42.357687"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/dc.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/dc.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# dc\n\n```text\nusage: dc [-h] address [count]\n\n```\n\nStarting at the specified address, hexdump.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address to dump from.|\n|count|The number of bytes to hexdump. (default: 8)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:42.467033"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/dd.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/dd.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# dd\n\n```text\nusage: dd [-h] address [count]\n\n```\n\nStarting at the specified address, dump N dwords.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address to dump from.|\n|count|The number of dwords to dump. (default: 16)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:42.561454"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/dds.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/dds.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# dds\n\n```text\nusage: dds [-h] addr\n\n```\n\nDump pointers and symbols at the specified address.\n\n**Aliases:** kd, dps, dqs\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|addr|The address to dump from.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:42.653494"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/dq.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/dq.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# dq\n\n```text\nusage: dq [-h] address [count]\n\n```\n\nStarting at the specified address, dump N qwords.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address to dump from.|\n|count|The number of qwords to dump. (default: 8)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:42.735166"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/ds.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/ds.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# ds\n\n```text\nusage: ds [-h] address [max]\n\n```\n\nDump a string at the specified address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|Address to dump|\n|max|Maximum string length (default: 256)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:42.811467"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/dw.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/dw.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# dw\n\n```text\nusage: dw [-h] address [count]\n\n```\n\nStarting at the specified address, dump N words.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address to dump from.|\n|count|The number of words to dump. (default: 32)|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:42.899015"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/eb.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/eb.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# eb\n\n```text\nusage: eb [-h] address [data ...]\n\n```\n\nWrite hex bytes at the specified address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address to write to.|\n|data|The bytes to write.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:42.966466"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/ed.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/ed.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# ed\n\n```text\nusage: ed [-h] address [data ...]\n\n```\n\nWrite hex dwords at the specified address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address to write to.|\n|data|The dwords to write.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:43.072111"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/eq.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/eq.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# eq\n\n```text\nusage: eq [-h] address [data ...]\n\n```\n\nWrite hex qwords at the specified address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address to write to.|\n|data|The qwords to write.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:43.153786"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/ew.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/ew.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# ew\n\n```text\nusage: ew [-h] address [data ...]\n\n```\n\nWrite hex words at the specified address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address to write to.|\n|data|The words to write.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:43.299746"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/ez.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/ez.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# ez\n\n```text\nusage: ez [-h] address data\n\n```\n\nWrite a string at the specified address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address to write to.|\n|data|The string to write.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:43.402577"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/eza.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/eza.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# eza\n\n```text\nusage: eza [-h] address data\n\n```\n\nWrite a string at the specified address.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|address|The address to write to.|\n|data|The string to write.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:43.475739"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/go.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/go.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# go\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: go [-h]\n\n```\n\nWinDbg compatibility alias for 'continue' command.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:43.588739"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/k.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/k.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# k\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n```text\nusage: k [-h]\n\n```\n\nPrint a backtrace (alias 'bt').\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:43.673859"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/ln.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/ln.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# ln\n\n```text\nusage: ln [-h] [value]\n\n```\n\nList the symbols nearest to the provided value.\n### Positional arguments\n\n|Positional Argument|Help|\n| :--- | :--- |\n|value|The address you want the name of.|\n\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:43.782299"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/pc.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/pc.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# pc\n\n```text\nusage: pc [-h]\n\n```\n\nWinDbg compatibility alias for 'nextcall' command.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:43.907146"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/commands/windbg/peb.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/commands/windbg/peb.md", "content": "<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n# peb\n\n```text\nusage: peb [-h]\n\n```\n\nNot be windows.\n### Optional arguments\n\n|Short|Long|Help|\n| :--- | :--- | :--- |\n|-h|--help|show this help message and exit|\n\n<!-- END OF AUTOGENERATED PART. Do not modify this line or the line below, they mark the end of the auto-generated part of the file. If you want to extend the documentation in a way which cannot easily be done by adding to the command help description, write below the following line. -->\n<!-- ------------\\>8---- ----\\>8---- ----\\>8------------ -->\n", "timestamp": "2025-10-24T11:39:43.986548"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/configuration/config.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/configuration/config.md", "content": "<!-- THIS WHOLE FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n\n\n\n\n# config\n\n## **ai-anthropic-api-key**\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n\nAnthropic API key.\n\nDefaults to ANTHROPIC_API_KEY environment variable if not set.\n\n**Default:** ''  \n\n----------\n\n## **ai-history-size**\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n\nMaximum number of questions and answers to keep in the prompt.\n\n\n\n**Default:** 3  \n\n----------\n\n## **ai-max-tokens**\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n\nThe maximum number of tokens to return in the response.\n\nUseful when limiting verbosity or conserving resources. Set to a lower value to restrict output.\n\n**Default:** 100  \n\n----------\n\n## **ai-model**\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n\nThe name of the large language model to query.\n\nChanging this affects the behavior, response quality, and cost (if applicable) of AI responses.\n\n**Default:** 'gpt-3.5-turbo'  \n\n----------\n\n## **ai-ollama-endpoint**\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n\nOllama API endpoint.\n\nDefaults to OLLAMA_ENDPOINT environment variable if not set.\n\n**Default:** ''  \n\n----------\n\n## **ai-openai-api-key**\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n\nOpenAI API key.\n\nWill default to OPENAI_API_KEY environment variable if not set.\n\n**Default:** ''  \n\n----------\n\n## **ai-show-usage**\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n\nWhether to show how many tokens are used with each OpenAI API call.\n\n\n\n**Default:** off  \n\n----------\n\n## **ai-stack-depth**\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n\nRows of stack context to include in the prompt for the ai command.\n\n\n\n**Default:** 16  \n\n----------\n\n## **ai-temperature**\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n\nThe temperature specification for the LLM query.\n\nThis controls the degree of randomness in the response.\n\n**Default:** 0  \n\n----------\n\n## **attachp-resolution-method**\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n\nHow to determine the process to attach when multiple candidates exists.\n\n\n\n**Default:** 'ask'  \n**Valid values:** 'none', 'oldest', 'newest', 'ask'\n\n----------\n\n## **auto-explore-auxv**\n\n\nStack exploration for AUXV information; it may be really slow.\n\n\n\n**Default:** 'warn'  \n**Valid values:** 'warn', 'yes', 'no'\n\n----------\n\n## **auto-explore-pages**\n\n\nWhether to try to infer page permissions when memory maps are missing.\n\nThis command can cause errors.\n\n**Default:** 'warn'  \n**Valid values:** 'yes', 'warn', 'no'\n\n----------\n\n## **auto-explore-stack**\n\n\nStack exploration; it may be really slow.\n\n\n\n**Default:** 'warn'  \n**Valid values:** 'warn', 'yes', 'no'\n\n----------\n\n## **auto-save-search**\n\n\nAutomatically pass --save to \"search\" command.\n\n\n\n**Default:** off  \n\n----------\n\n## **bn-autosync**\n\n\nWhether to automatically run bn-sync every step.\n\n\n\n**Default:** off  \n\n----------\n\n## **bn-il-level**\n\n\nThe IL level to use when displaying Binary Ninja decompilation.\n\n\n\n**Default:** 'hlil'  \n**Valid values:** 'disasm', 'llil', 'mlil', 'hlil'\n\n----------\n\n## **bn-rpc-host**\n\n\nBinary Ninja XML-RPC server host.\n\n\n\n**Default:** '127.0.0.1'  \n\n----------\n\n## **bn-rpc-port**\n\n\nBinary Ninja XML-RPC server port.\n\n\n\n**Default:** 31337  \n\n----------\n\n## **bn-timeout**\n\n\nTime to wait for Binary Ninja XML-RPC, in seconds.\n\n\n\n**Default:** 2  \n\n----------\n\n## **context-backtrace-lines**\n\n\nNumber of lines to print in the backtrace context.\n\n\n\n**Default:** 8  \n\n----------\n\n## **context-clear-screen**\n\n\nWhether to clear the screen before printing the context.\n\n\n\n**Default:** off  \n\n----------\n\n## **context-code-lines**\n\n\nNumber of source code lines to print by the context command.\n\n\n\n**Default:** 10  \n\n----------\n\n## **context-code-tabstop**\n\n\nNumber of spaces that a <tab> in the source code counts for.\n\n\n\n**Default:** 8  \n\n----------\n\n## **context-disasm-lines**\n\n\nNumber of additional lines to print in the disasm context.\n\n\n\n**Default:** 10  \n\n----------\n\n## **context-ghidra**\n\n\nWhen to try to decompile the current function with ghidra.\n\nDoing this is slow and requires radare2/r2pipe or rizin/rzpipe.\n\n**Default:** 'never'  \n**Valid values:** 'always', 'never', 'if-no-source'\n\n----------\n\n## **context-history-size**\n\n\nNumber of context history entries to store.\n\n\n\n**Default:** 50  \n\n----------\n\n## **context-integration-decompile**\n\n\nWhether context should fall back to decompilation with no source code.\n\n\n\n**Default:** on  \n\n----------\n\n## **context-max-threads**\n\n\nMaximum number of threads displayed by the context command.\n\n\n\n**Default:** 4  \n\n----------\n\n## **context-output**\n\n\nWhere Pwndbg should output (\"stdout\" or file/tty).\n\n\n\n**Default:** 'stdout'  \n\n----------\n\n## **context-reserve-lines**\n\n\nWhen to reserve lines after the prompt to reduce context shake.\n\nThe \"if-ctx-fits\" setting only reserves lines if the whole context would still fit vertically in the current terminal window.\nIt doesn't take into account line-wrapping due to insufficient terminal width.\n\n**Default:** 'if-ctx-fits'  \n**Valid values:** 'never', 'if-ctx-fits', 'always'\n\n----------\n\n## **context-sections**\n\n\nWhich context sections are displayed (controls order).\n\n\n\n**Default:** 'regs disasm code ghidra stack backtrace expressions threads heap_tracker'  \n\n----------\n\n## **context-stack-lines**\n\n\nNumber of lines to print in the stack context.\n\n\n\n**Default:** 8  \n\n----------\n\n## **cymbol-editor**\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n\nPath to the editor for editing custom structures.\n\n\n\n**Default:** ''  \n\n----------\n\n## **debug-events**\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n\nDisplay internal event debugging info.\n\n\n\n**Default:** off  \n\n----------\n\n## **decompiler**\n\n\nFramework that your ghidra plugin installed.\n\n\n\n**Default:** 'radare2'  \n**Valid values:** 'radare2', 'rizin'\n\n----------\n\n## **default-visualize-chunk-number**\n\n\nDefault number of chunks to visualize.\n\n\n\n**Default:** 10  \n\n----------\n\n## **dereference-limit**\n\n\nMax number of pointers to dereference in a chain.\n\n\n\n**Default:** 5  \n\n----------\n\n## **disasm-annotations**\n\n\nDisplay annotations for instructions.\n\n\n\n**Default:** on  \n\n----------\n\n## **disasm-inline-symbols**\n\n\nReplacing constant operands with their symbol in the disassembly.\n\n\n\n**Default:** on  \n\n----------\n\n## **disasm-reg-alias**\n\n\nForce the disassembly to use register aliases (e.g. aarch64 x29 -> fp).\n\nThe register aliasing is done by capstone, see:\nhttps://github.com/capstone-engine/capstone/blob/next/docs/cs_v6_release_guide.md#:~:text=None.-,Register%20alias,-Register%20alias%20\n\nEnabling this may make disassembly slower.\n\n**Default:** off  \n\n----------\n\n## **disasm-telescope-depth**\n\n\nDepth of telescope for disasm annotations.\n\n\n\n**Default:** 3  \n\n----------\n\n## **disasm-telescope-string-length**\n\n\nThe number of characters in strings to display in disasm annotations.\n\n\n\n**Default:** 50  \n\n----------\n\n## **emulate**\n\n\nUnicorn emulation of code from the current PC register.\n\nEmulate can be:\n\n1. off             - no emulation is performed\n2. jumps-only      - emulation is done only to resolve branch instructions\n3. on              - emulation is done to resolve registers/memory values etc.\n\nEmulation can slow down Pwndbg. Disabling it may improve performance.\nEmulation requires >1GB RAM being available on the system and ability to allocate RWX memory.\n\n**Default:** 'on'  \n**Valid values:** 'on', 'off', 'jumps-only'\n\n----------\n\n## **emulate-annotations**\n\n\nUnicorn emulation for instruction annotations.\n\nRefers to register and memory value annotations.\n\n**Default:** on  \n\n----------\n\n## **emulate-future-annotations**\n\n\nUnicorn emulation for future instruction's annotations.\n\n\n\n**Default:** on  \n\n----------\n\n## **exception-debugger**\n\n\nWhether to debug exceptions raised in Pwndbg commands.\n\n\n\n**Default:** off  \n\n----------\n\n## **exception-verbose**\n\n\nPrint a full stacktrace for exceptions raised in Pwndbg commands.\n\n\n\n**Default:** off  \n\n----------\n\n## **gcc-compiler-path**\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n\nPath to the gcc/g++ toolchain for generating imported symbols.\n\n\n\n**Default:** ''  \n\n----------\n\n## **gdb-workaround-stop-event**\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n\nAsynchronous stop events to improve 'commands' functionality.\n\nNote that this may cause unexpected behavior with Pwndbg or gdb.execute.\n\nValues explained:\n\n+ `disabled` - Disable the workaround (default).\n+ `disabled-deadlock` - Disable only deadlock detection; deadlocks may still occur.\n+ `enabled` - Enable asynchronous stop events; gdb.execute may behave unexpectedly (asynchronously).\n\n**Default:** 'disabled'  \n**Valid values:** 'disabled', 'disabled-deadlock', 'enabled'\n\n----------\n\n## **go-dump-indent-amount**\n\n\nThe indent amount for go-dump pretty printing.\n\n\n\n**Default:** 4  \n\n----------\n\n## **go-dump-line-width**\n\n\nThe soft line width for go-dump pretty printing.\n\n\n\n**Default:** 80  \n\n----------\n\n## **hexdump-bytes**\n\n\nNumber of bytes printed by hexdump command.\n\n\n\n**Default:** 64  \n\n----------\n\n## **hexdump-group-use-big-endian**\n\n\nUse big-endian within each group of bytes in hexdump command.\n\nWhen `on`, use big-endian within each group of bytes. Only applies to raw bytes, not the ASCII part. See also hexdump-highlight-group-lsb.\n\n**Default:** off  \n\n----------\n\n## **hexdump-group-width**\n\n\nNumber of bytes grouped in hexdump command.\n\nIf -1, the architecture's pointer size is used.\n\n**Default:** -1  \n\n----------\n\n## **hexdump-limit-mb**\n\n\nThe maximum size in megabytes (MB) `hexdump` will read.\n\nSet the maximum size in megabytes (MB) that the `hexdump` command will attempt to read at once.\n    Prevents GDB crashes due to excessive memory allocation requests.\n    Set to 0 for unlimited (use with caution).\n\n**Default:** 10  \n\n----------\n\n## **hexdump-width**\n\n\nLine width of hexdump command.\n\n\n\n**Default:** 16  \n\n----------\n\n## **ida-rpc-host**\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n\nIda xmlrpc server address.\n\n\n\n**Default:** '127.0.0.1'  \n\n----------\n\n## **ida-rpc-port**\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n\nIda xmlrpc server port.\n\n\n\n**Default:** 31337  \n\n----------\n\n## **ida-timeout**\n<small style=\"color: lightgray;\">(only in GDB)</small>\n\n\nTime to wait for ida xmlrpc in seconds.\n\n\n\n**Default:** 2  \n\n----------\n\n## **integration-function-lookup**\n\n\nUse integration to look up function type signatures.\n\n\n\n**Default:** on  \n\n----------\n\n## **integration-provider**\n\n\nWhich provider to use for integration features.\n\n\n\n**Default:** 'none'  \n**Valid values:** 'none', 'binja', 'ida'\n\n----------\n\n## **integration-smart-enhance**\n\n\nUse integration to determine when to disassemble during enhancing.\n\n\n\n**Default:** on  \n\n----------\n\n## **integration-symbol-lookup**\n\n\nWhether to use integration to look up unknown symbols.\n\n\n\n**Default:** on  \n\n----------\n\n## **kernel-vmmap**\n\n\nThe method to get vmmap information when debugging via QEMU kernel.\n\nValues explained:\n\n+ `page-tables` - read /proc/$qemu-pid/mem to parse kernel page tables to render vmmap\n+ `monitor` - use QEMU's `monitor info mem` to render vmmap\n+ `none` - disable vmmap rendering; useful if rendering is particularly slow\n\nNote that the page-tables method will require the QEMU kernel process to be on the same machine and within the same PID namespace. Running QEMU kernel and GDB in different Docker containers will not work. Consider running both containers with --pid=host (meaning they will see and so be able to interact with all processes on the machine).\n\n**Default:** 'page-tables'  \n**Valid values:** 'page-tables', 'monitor', 'none'\n\n----------\n\n## **left-pad-disasm**\n\n\nWhether to left-pad disassembly.\n\n\n\n**Default:** on  \n\n----------\n\n## **max-decimal-number**\n\n\nShow all numbers greater than this in hex.\n\nFor negative numbers, their absolute value is used.\n\nSet the parameter to 'unlimited' if you want all values in decimal.\nSpecially, set the parameter to zero if you want all values in hex.\n\nThe assembly instruction operands come from capstone, and are thus\nnot controlled by this setting. For consistency with them, leave\nthis setting at 9 (the default).\n\n**Default:** 9  \n\n----------\n\n## **max-visualize-chunk-size**\n\n\nMax display size for heap chunks visualization (0 for display all).\n\n\n\n**Default:** 0  \n\n----------\n\n## **nearpc-integration-comments**\n\n\nWhether to show comments from integration provider.\n\n\n\n**Default:** on  \n\n----------\n\n## **nearpc-lines**\n\n\nNumber of additional lines to print for the nearpc command.\n\n\n\n**Default:** 10  \n\n----------\n\n## **nearpc-num-opcode-bytes**\n\n\nNumber of opcode bytes to print for each instruction.\n\n\n\n**Default:** 0  \n\n----------\n\n## **nearpc-opcode-separator-bytes**\n\n\nNumber of spaces between opcode bytes.\n\n\n\n**Default:** 1  \n\n----------\n\n## **nearpc-show-args**\n\n\nWhether to show call arguments below instruction.\n\n\n\n**Default:** on  \n\n----------\n\n## **objc-max-function-arguments**\n\n\nMaximum number of arguments to resolve for an Objective-C method call.\n\n\n\n**Default:** 32  \n\n----------\n\n## **objc-max-function-types-depth**\n\n\nMaximum allowed depth for a type in an Objective-C method call.\n\n\n\n**Default:** 32  \n\n----------\n\n## **safe-linking**\n\n\nWhether glibc uses safe-linking.\n\n\n\n**Default:** auto  \n**Valid values:** on, off, auto.\n\n----------\n\n## **show-compact-regs**\n\n\nWhether to show a compact register view with columns.\n\n\n\n**Default:** off  \n\n----------\n\n## **show-compact-regs-columns**\n\n\nThe number of columns (0 for dynamic number of columns).\n\n\n\n**Default:** 2  \n\n----------\n\n## **show-compact-regs-min-width**\n\n\nThe minimum width of each column.\n\n\n\n**Default:** 20  \n\n----------\n\n## **show-compact-regs-separation**\n\n\nThe number of spaces separating columns.\n\n\n\n**Default:** 4  \n\n----------\n\n## **show-flags**\n\n\nWhether to show flags registers.\n\n\n\n**Default:** off  \n\n----------\n\n## **show-retaddr-reg**\n\n\nWhether to show return address register.\n\n\n\n**Default:** on  \n\n----------\n\n## **show-tips**\n\n\nWhether to display the tip of the day on startup.\n\n\n\n**Default:** on  \n\n----------\n\n## **syntax-highlight**\n\n\nSource code / assembly syntax highlight.\n\n\n\n**Default:** on  \n\n----------\n\n## **telescope-dont-skip-registers**\n\n\nDon't skip a repeated line if a registers points to it.\n\n\n\n**Default:** on  \n\n----------\n\n## **telescope-frame-print-retaddr**\n\n\nPrint one pointer past the stack frame.\n\n\n\n**Default:** on  \n\n----------\n\n## **telescope-framepointer-offset**\n\n\nPrint offset to framepointer for each address, if sufficiently small.\n\n\n\n**Default:** on  \n\n----------\n\n## **telescope-lines**\n\n\nNumber of lines to printed by the telescope command.\n\n\n\n**Default:** 8  \n\n----------\n\n## **telescope-skip-repeating-val**\n\n\nWhether to skip repeating values of the telescope command.\n\n\n\n**Default:** on  \n\n----------\n\n## **telescope-skip-repeating-val-min**\n\n\nMinimum amount of repeated values before skipping lines.\n\n\n\n**Default:** 3  \n\n----------\n\n## **vmmap-prefer-relpaths**\n\n\nShow relative paths by default in vmmap.\n\n\n\n**Default:** on  \n\n----------\n", "timestamp": "2025-10-24T11:39:44.343759"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/configuration/heap.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/configuration/heap.md", "content": "<!-- THIS WHOLE FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n\n\n\n\n# heap\n\n## **glibc**\n\n\nGlibc version for heap heuristics resolution (e.g. 2.31).\n\n\n\n**Default:** ''  \n\n----------\n\n## **global-max-fast**\n\n\nThe address of global_max_fast.\n\n\n\n**Default:** '0'  \n\n----------\n\n## **heap-corruption-check-limit**\n\n\nAmount of chunks to traverse for the bin corruption check.\n\nThe bins are traversed both forwards and backwards.\n\n**Default:** 64  \n\n----------\n\n## **heap-dereference-limit**\n\n\nNumber of chunks to dereference in each bin.\n\n\n\n**Default:** 8  \n\n----------\n\n## **main-arena**\n\n\nThe address of main_arena.\n\n\n\n**Default:** '0'  \n\n----------\n\n## **mp**\n\n\nThe address of mp_.\n\n\n\n**Default:** '0'  \n\n----------\n\n## **ng-search-on-fail**\n\n\nLet the ng-slot* commands search the heap if necessary.\n\nFor freed, avail(able) and corrupted slots, it may be\nimpossible to recover the start of the group and meta.\n\nWhen this option is set to True, the ng-slotu and ng-slots\ncommands will search the heap to try to find the correct meta/group.\n\n**Default:** on  \n\n----------\n\n## **ng-vis-count**\n\n\nDefault count for ng-vis.\n\n\n\n**Default:** 10  \n\n----------\n\n## **resolve-heap-via-heuristic**\n\n=== \"GDB\"\n\n     The strategy to resolve heap via heuristic.\n\n    Values explained:\n\n    + `auto` - Pwndbg will try to use heuristics if debug symbols are missing\n    + `force` - Pwndbg will always try to use heuristics, even if debug symbols are available\n    + `never` - Pwndbg will never use heuristics to resolve the heap\n\n    If the output of the heap related command produces errors with heuristics, you\n    can try manually setting the libc symbol addresses.\n    For this, see the `heap_config` command output and set the `main_arena`, `mp_`,\n    `global_max_fast`, `tcache` and `thread_arena` addresses.\n\n    Note: Pwndbg will generate more reliable results with proper debug symbols.\n    Therefore, when debug symbols are missing, you should try to install them first\n    if you haven't already.\n\n    They can probably be installed via the package manager of your choice.\n    See also: https://sourceware.org/gdb/onlinedocs/gdb/Separate-Debug-Files.html .\n\n    E.g. on Ubuntu/Debian you might need to do the following steps (for 64-bit and\n    32-bit binaries):\n    ```bash\n    sudo apt-get install libc6-dbg\n    sudo dpkg --add-architecture i386\n    sudo apt-get install libc-dbg:i386\n    ```\n    If you used setup.sh on Arch based distro you'll need to do a power cycle or set\n    environment variable manually like this:\n    ```bash\n    export DEBUGINFOD_URLS=https://debuginfod.archlinux.org\n    ```\n\n    In addition, even you have the debug symbols of libc, you might still see the\n    following warning when debugging a multi-threaded program:\n    ```\n    warning: Unable to find libthread_db matching inferior's thread library, thread\n    debugging will not be available.\n    ```\n\n    You'll need to ensure that the correct `libthread_db.so` is loaded. To do this,\n    set the search path using:\n    ```\n    set libthread-db-search-path <path having correct libthread_db.so>\n    ```\n    Then, restart your program to enable proper thread debugging.\n\n    **Default:** 'auto'  \n    **Valid values:** 'auto', 'force', 'never'\n=== \"LLDB\"\n\n     The strategy to resolve heap via heuristic.\n\n    Values explained:\n\n    + `auto` - Pwndbg will try to use heuristics if debug symbols are missing\n    + `force` - Pwndbg will always try to use heuristics, even if debug symbols are available\n    + `never` - Pwndbg will never use heuristics to resolve the heap\n\n    If the output of the heap related command produces errors with heuristics, you\n    can try manually setting the libc symbol addresses.\n    For this, see the `heap_config` command output and set the `main_arena`, `mp_`,\n    `global_max_fast`, `tcache` and `thread_arena` addresses.\n\n    Note: Pwndbg will generate more reliable results with proper debug symbols.\n    Therefore, when debug symbols are missing, you should try to install them first\n    if you haven't already.\n\n    They can probably be installed via the package manager of your choice.\n    See also: https://sourceware.org/gdb/onlinedocs/gdb/Separate-Debug-Files.html .\n\n    E.g. on Ubuntu/Debian you might need to do the following steps (for 64-bit and\n    32-bit binaries):\n    ```bash\n    sudo apt-get install libc6-dbg\n    sudo dpkg --add-architecture i386\n    sudo apt-get install libc-dbg:i386\n    ```\n    If you used setup.sh on Arch based distro you'll need to do a power cycle or set\n    environment variable manually like this:\n    ```bash\n    export DEBUGINFOD_URLS=https://debuginfod.archlinux.org\n    ```\n\n    **Default:** 'auto'  \n    **Valid values:** 'auto', 'force', 'never'\n\n----------\n\n## **tcache**\n\n\nThe address pointed by tcache.\n\n\n\n**Default:** '0'  \n\n----------\n\n## **thread-arena**\n\n\nThe address pointed by thread_arena.\n\n\n\n**Default:** '0'  \n\n----------\n", "timestamp": "2025-10-24T11:39:44.444798"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/configuration/index.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/configuration/index.md", "content": "# Configuration\n\nPwndbg can be configured in various ways. You can tune features, control what it displays, how it displays it, and even what is going on under the hood.\n\nThere are three \"scopes\" of configuration parameters currently:\n\n1. [the config scope](./config.md) - for generic parameters\n2. [the heap scope](./heap.md) - for heap-related parameters\n3. [the theme scope](./theme.md) - for Pwndbg theming\n\nTo see the parameters belonging to these scopes, use the [`config`](../commands/pwndbg/config.md), [`heap-config`](../commands/pwndbg/heap-config.md), and [`theme`](../commands/pwndbg/theme.md) commands respectively. You can also use the [`configfile`](../commands/pwndbg/configfile.md) and [`themefile`](../commands/pwndbg/themefile.md) commands to save your live configuration to a file which you can then load in your `~/.(gdb/lldb)init` file (after sourcing Pwndbg!).\n\nTo see the value of any parameter, use `show param-name`. To set the value, use `set param-name param-value`. To see a more detailed description of the parameter use `help set param-name`.\n\nIf you wish to use a theme different from the default one, check out [pwndbg/pwndbg-themes](https://github.com/pwndbg/pwndbg-themes). If you made a theme yourself, feel free to open a PR!\n", "timestamp": "2025-10-24T11:39:44.563190"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/configuration/theme.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/configuration/theme.md", "content": "<!-- THIS WHOLE FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n\n\n\n\n# theme\n\n## **backtrace-address-color**\n\n\nColor for backtrace (address).\n\n\n\n**Default:** 'none'  \n\n----------\n\n## **backtrace-frame-label**\n\n\nFrame number label for backtrace.\n\n\n\n**Default:** ''  \n\n----------\n\n## **backtrace-frame-label-color**\n\n\nColor for backtrace (frame label).\n\n\n\n**Default:** 'none'  \n\n----------\n\n## **backtrace-prefix**\n\n\nPrefix for current backtrace label.\n\n\n\n**Default:** '►'  \n\n----------\n\n## **backtrace-prefix-color**\n\n\nColor for prefix of current backtrace label.\n\n\n\n**Default:** 'none'  \n\n----------\n\n## **backtrace-symbol-color**\n\n\nColor for backtrace (symbol).\n\n\n\n**Default:** 'none'  \n\n----------\n\n## **banner-color**\n\n\nColor for banner line.\n\n\n\n**Default:** 'blue'  \n\n----------\n\n## **banner-separator**\n\n\nRepeated banner separator character.\n\n\n\n**Default:** '─'  \n\n----------\n\n## **banner-title-color**\n\n\nColor for banner title.\n\n\n\n**Default:** 'none'  \n\n----------\n\n## **banner-title-position**\n\n\nBanner title position.\n\n\n\n**Default:** 'center'  \n**Valid values:** 'center', 'left', 'right'\n\n----------\n\n## **banner-title-surrounding-left**\n\n\nBanner title surrounding char (left side).\n\n\n\n**Default:** '[ '  \n\n----------\n\n## **banner-title-surrounding-right**\n\n\nBanner title surrounding char (right side).\n\n\n\n**Default:** ' ]'  \n\n----------\n\n## **bn-decomp-style**\n\n\nDecompilation highlight theme for Binary Ninja.\n\n\n\n**Default:** 'dark'  \n**Valid values:** 'dark', 'light'\n\n----------\n\n## **chain-arrow-color**\n\n\nColor of chain formatting (arrow).\n\n\n\n**Default:** 'normal'  \n\n----------\n\n## **chain-arrow-left**\n\n\nLeft arrow of chain formatting.\n\n\n\n**Default:** '◂—'  \n\n----------\n\n## **chain-arrow-right**\n\n\nRight arrow of chain formatting.\n\n\n\n**Default:** '—▸'  \n\n----------\n\n## **chain-contiguous-marker**\n\n\nContiguous marker of chain formatting.\n\n\n\n**Default:** '...'  \n\n----------\n\n## **chain-contiguous-marker-color**\n\n\nColor of chain formatting (contiguous marker).\n\n\n\n**Default:** 'normal'  \n\n----------\n\n## **code-prefix**\n\n\nPrefix marker for 'context code' command.\n\n\n\n**Default:** '►'  \n\n----------\n\n## **code-prefix-color**\n\n\nColor for 'context code' command (prefix marker).\n\n\n\n**Default:** 'none'  \n\n----------\n\n## **comment-color**\n\n\nColor for comment.\n\n\n\n**Default:** 'gray'  \n\n----------\n\n## **context-flag-bracket-color**\n\n\nColor for flags register (bracket).\n\n\n\n**Default:** 'none'  \n\n----------\n\n## **context-flag-changed-color**\n\n\nColor for flags register (flag changed).\n\n\n\n**Default:** 'underline'  \n\n----------\n\n## **context-flag-set-color**\n\n\nColor for flags register (flag set).\n\n\n\n**Default:** 'green,bold'  \n\n----------\n\n## **context-flag-unset-color**\n\n\nColor for flags register (flag unset).\n\n\n\n**Default:** 'red'  \n\n----------\n\n## **context-flag-value-color**\n\n\nColor for flags register (register value).\n\n\n\n**Default:** 'none'  \n\n----------\n\n## **context-register-changed-color**\n\n\nColor for registers label (change marker).\n\n\n\n**Default:** 'red'  \n\n----------\n\n## **context-register-changed-marker**\n\n\nChange marker for registers label.\n\n\n\n**Default:** '*'  \n\n----------\n\n## **context-register-color**\n\n\nColor for registers label.\n\n\n\n**Default:** 'bold'  \n\n----------\n\n## **disable-colors**\n\n\nWhether to color the output or not.\n\n\n\n**Default:** off  \n\n----------\n\n## **disasm-branch-color**\n\n\nColor for disasm (branch/call instruction).\n\n\n\n**Default:** 'bold'  \n\n----------\n\n## **disasm-branch-off**\n\n\nMarker for branches that will NOT be taken.\n\n\n\n**Default:** '✘'  \n\n----------\n\n## **disasm-branch-on**\n\n\nMarker for branches that WILL be taken.\n\n\n\n**Default:** '✔'  \n\n----------\n\n## **enhance-comment-color**\n\n\nColor of value enhance (comment).\n\n\n\n**Default:** 'none'  \n\n----------\n\n## **enhance-integer-value-color**\n\n\nColor of value enhance (integer).\n\n\n\n**Default:** 'none'  \n\n----------\n\n## **enhance-string-value-color**\n\n\nColor of value enhance (string).\n\n\n\n**Default:** 'none'  \n\n----------\n\n## **enhance-unknown-color**\n\n\nColor of value enhance (unknown value).\n\n\n\n**Default:** 'none'  \n\n----------\n\n## **go-dump-debug**\n\n\nColor for 'go-dump' command's debug info when --debug is specified.\n\n\n\n**Default:** 'blue'  \n\n----------\n\n## **hexdump-address-color**\n\n\nColor for hexdump command (address label).\n\n\n\n**Default:** 'none'  \n\n----------\n\n## **hexdump-ascii-block-separator**\n\n\nBlock separator char of the hexdump command.\n\n\n\n**Default:** '│'  \n\n----------\n\n## **hexdump-byte-separator**\n\n\nSeparator of single bytes in hexdump (does NOT affect group separator).\n\n\n\n**Default:** ' '  \n\n----------\n\n## **hexdump-colorize-ascii**\n\n\nWhether to colorize the hexdump command ascii section.\n\n\n\n**Default:** on  \n\n----------\n\n## **hexdump-highlight-group-lsb**\n\n\nHighlight LSB of each group.\n\nApplies only if hexdump-use-big-endian actually changes byte order.\n\n**Default:** 'underline'  \n\n----------\n\n## **hexdump-normal-color**\n\n\nColor for hexdump command (normal bytes).\n\n\n\n**Default:** 'none'  \n\n----------\n\n## **hexdump-offset-color**\n\n\nColor for hexdump command (offset label).\n\n\n\n**Default:** 'none'  \n\n----------\n\n## **hexdump-printable-color**\n\n\nColor for hexdump command (printable characters).\n\n\n\n**Default:** 'bold'  \n\n----------\n\n## **hexdump-separator-color**\n\n\nColor for hexdump command (group separator).\n\n\n\n**Default:** 'none'  \n\n----------\n\n## **hexdump-special-color**\n\n\nColor for hexdump command (special bytes).\n\n\n\n**Default:** 'yellow'  \n\n----------\n\n## **hexdump-zero-color**\n\n\nColor for hexdump command (zero bytes).\n\n\n\n**Default:** 'red'  \n\n----------\n\n## **highlight-breakpoints**\n\n\nWhether to highlight breakpoints.\n\n\n\n**Default:** on  \n\n----------\n\n## **highlight-color**\n\n\nColor added to highlights like source/pc.\n\n\n\n**Default:** 'green,bold'  \n\n----------\n\n## **highlight-pc**\n\n\nWhether to highlight the current instruction.\n\n\n\n**Default:** on  \n\n----------\n\n## **highlight-source**\n\n\nWhether to highlight the closest source line.\n\n\n\n**Default:** on  \n\n----------\n\n## **memory-code-color**\n\n\nColor for executable memory.\n\n\n\n**Default:** 'red'  \n\n----------\n\n## **memory-data-color**\n\n\nColor for all other writable memory.\n\n\n\n**Default:** 'purple'  \n\n----------\n\n## **memory-guard-color**\n\n\nColor added to all guard pages (no perms).\n\n\n\n**Default:** 'cyan'  \n\n----------\n\n## **memory-heap-color**\n\n\nColor for heap memory.\n\n\n\n**Default:** 'blue'  \n\n----------\n\n## **memory-rodata-color**\n\n\nColor for all read only memory.\n\n\n\n**Default:** 'normal'  \n\n----------\n\n## **memory-stack-color**\n\n\nColor for stack memory.\n\n\n\n**Default:** 'yellow'  \n\n----------\n\n## **memory-wx-color**\n\n\nColor added to all WX memory.\n\n\n\n**Default:** 'underline'  \n\n----------\n\n## **message-breakpoint-color**\n\n\nColor of breakpoint messages.\n\n\n\n**Default:** 'yellow'  \n\n----------\n\n## **message-debug-color**\n\n\nColor of debug messages.\n\n\n\n**Default:** 'blue'  \n\n----------\n\n## **message-error-color**\n\n\nColor of error messages.\n\n\n\n**Default:** 'red'  \n\n----------\n\n## **message-exit-color**\n\n\nColor of exit messages.\n\n\n\n**Default:** 'red'  \n\n----------\n\n## **message-hint-color**\n\n\nColor of hint and marker messages.\n\n\n\n**Default:** 'yellow'  \n\n----------\n\n## **message-info-color**\n\n\nColor of info messages.\n\n\n\n**Default:** 'white'  \n\n----------\n\n## **message-notice-color**\n\n\nColor of notice messages.\n\n\n\n**Default:** 'purple'  \n\n----------\n\n## **message-signal-color**\n\n\nColor of signal messages.\n\n\n\n**Default:** 'bold,red'  \n\n----------\n\n## **message-status-off-color**\n\n\nColor of off status messages.\n\n\n\n**Default:** 'red'  \n\n----------\n\n## **message-status-on-color**\n\n\nColor of on status messages.\n\n\n\n**Default:** 'green'  \n\n----------\n\n## **message-success-color**\n\n\nColor of success messages.\n\n\n\n**Default:** 'green'  \n\n----------\n\n## **message-system-color**\n\n\nColor of system messages.\n\n\n\n**Default:** 'light-red'  \n\n----------\n\n## **message-warning-color**\n\n\nColor of warning messages.\n\n\n\n**Default:** 'yellow'  \n\n----------\n\n## **nearpc-address-color**\n\n\nColor for nearpc command (address).\n\n\n\n**Default:** 'normal'  \n\n----------\n\n## **nearpc-argument-color**\n\n\nColor for nearpc command (target argument).\n\n\n\n**Default:** 'bold'  \n\n----------\n\n## **nearpc-branch-marker**\n\n\nBranch marker line for nearpc command.\n\n\n\n**Default:** '    ↓'  \n\n----------\n\n## **nearpc-branch-marker-color**\n\n\nColor for nearpc command (branch marker line).\n\n\n\n**Default:** 'normal'  \n\n----------\n\n## **nearpc-branch-marker-contiguous**\n\n\nContiguous branch marker line for nearpc command.\n\n\n\n**Default:** ' '  \n\n----------\n\n## **nearpc-breakpoint-color**\n\n\nColor for nearpc command (breakpoint marker).\n\n\n\n**Default:** 'red'  \n\n----------\n\n## **nearpc-breakpoint-prefix**\n\n\nBreakpoint marker for nearpc command.\n\n\n\n**Default:** 'b+'  \n\n----------\n\n## **nearpc-integration-comments-color**\n\n\nColor for nearpc command (integration comments).\n\n\n\n**Default:** 'bold'  \n\n----------\n\n## **nearpc-prefix**\n\n\nPrefix marker for nearpc command.\n\n\n\n**Default:** '►'  \n\n----------\n\n## **nearpc-prefix-color**\n\n\nColor for nearpc command (prefix marker).\n\n\n\n**Default:** 'none'  \n\n----------\n\n## **nearpc-symbol-color**\n\n\nColor for nearpc command (symbol).\n\n\n\n**Default:** 'normal'  \n\n----------\n\n## **nearpc-syscall-name-color**\n\n\nColor for nearpc command (resolved syscall name).\n\n\n\n**Default:** 'red'  \n\n----------\n\n## **prompt-alive-color**\n\n\nPrompt alive color.\n\n\n\n**Default:** 'bold,green'  \n\n----------\n\n## **prompt-color**\n\n\nPrompt color.\n\n\n\n**Default:** 'bold,red'  \n\n----------\n\n## **prop-name-color**\n\n\nColor used to highlight the name in name-value pairs.\n\n\nUsed heavily in mallocng commands.\n\n\n**Default:** 'bold'  \n\n----------\n\n## **prop-title-color**\n\n\nColor used to highlight the title of name-value pair groups.\n\n\nUsed heavily in mallocng commands.\n\n\n**Default:** 'green'  \n\n----------\n\n## **prop-value-color**\n\n\nColor used to highlight the value in name-value pairs.\n\n\nUsed heavily in mallocng commands.\n\n\n**Default:** 'yellow'  \n\n----------\n\n## **syntax-highlight-style**\n\n\nSource code / assembly syntax highlight stylename of pygments module.\n\n\n\n**Default:** 'monokai'  \n\n----------\n\n## **telescope-offset-color**\n\n\nColor of the telescope command (offset prefix).\n\n\n\n**Default:** 'normal'  \n\n----------\n\n## **telescope-offset-delimiter**\n\n\nOffset delimiter of the telescope command.\n\n\n\n**Default:** ':'  \n\n----------\n\n## **telescope-offset-delimiter-color**\n\n\nColor of the telescope command (offset delimiter).\n\n\n\n**Default:** 'normal'  \n\n----------\n\n## **telescope-offset-separator**\n\n\nOffset separator of the telescope command.\n\n\n\n**Default:** '│'  \n\n----------\n\n## **telescope-offset-separator-color**\n\n\nColor of the telescope command (offset separator).\n\n\n\n**Default:** 'normal'  \n\n----------\n\n## **telescope-register-color**\n\n\nColor of the telescope command (register).\n\n\n\n**Default:** 'bold'  \n\n----------\n\n## **telescope-repeating-marker**\n\n\nRepeating values marker of the telescope command.\n\n\n\n**Default:** '... ↓'  \n\n----------\n\n## **telescope-repeating-marker-color**\n\n\nColor of the telescope command (repeating values marker).\n\n\n\n**Default:** 'normal'  \n\n----------\n", "timestamp": "2025-10-24T11:39:44.670229"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/contributing/adding-a-command.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/contributing/adding-a-command.md", "content": "# Adding a Command\n## Command skeleton\nTo add a command to Pwndbg, create a new python file in `pwndbg/commands/my_command.py` where `my_command` is the name of the command you want to add.  The most basic command looks like this:\n```python\nimport argparse\nimport pwndbg.commands\n\nparser = argparse.ArgumentParser(description=\"Command description.\")\nparser.add_argument(\"arg\", type=str, help=\"An example argument.\")\n\n@pwndbg.commands.Command(parser, category=pwndbg.commands.CommandCategory.MISC)\ndef my_command(arg: str) -> None:\n    \"\"\"Print the argument\"\"\"\n    print(f\"Argument is {arg}\")\n```\nNext, import this file in the `load_commands` function in `pwndbg/commands/__init__.py`.\n\nThat's all you need to get it working!\n```text\npwndbg> my-command foo\nArgument is foo\n```\n## Getting started\nLet's see what arguments the `@pwndbg.commands.Command` decorator takes. It is defined in `pwndbg/commands/__init__.py`:\n```python\n    def __init__(\n        self,\n        parser_or_desc: argparse.ArgumentParser | str,\n        *,  # All further parameters are not positional\n        category: CommandCategory,\n        command_name: str | None = None,\n        aliases: List[str] = [],\n        examples: str = \"\",\n        notes: str = \"\",\n        only_debuggers: Set[pwndbg.dbg_mod.DebuggerType] = None,\n        exclude_debuggers: Set[pwndbg.dbg_mod.DebuggerType] = None,\n\t) -> None:\n\t\t# ...\n```\nWe will cover the first four arguments now, and come back to the rest later.\n\nIf your command takes no arguments you can pass the description of the command as the first argument (`parser_or_desc`) to the constructor. Otherwise you will be passing an [`argparse.ArgumentParser`](https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser) object there.\n\nThe only other required argument is `category`. The `category` determines how commands are grouped together in the output of the [`pwndbg`](https://pwndbg.re/pwndbg/dev/commands/pwndbg/pwndbg/) command and in the [documentation](https://pwndbg.re/pwndbg/dev/commands/). Peruse the list of all commands inside a debugger (by running the `pwndbg` command) and decide in which category your command fits best. The enum of all command categories is defined at the top of the `pwndbg/commands/__init__.py` file.\n### Picking a command name\nNext, the `command_name` argument. It is optional because if it is not specified the command name will be the same as the function you used to define the command (except the underscores are replaced with dashes). As such, it is generally not needed to specify this argument.\n\nThat being said, it is important to pick a good name for your command. Ideally your command name should be one to two words that are *not* delimited by a dash (e.g. `errno`, `libcinfo`, `buddydump`) since that is easiest to remember and type.\n\nIf your command is porting behavior from some other debugger or tool, you should consider using the same name they use so users don't need to relearn it when switching.\n\nIf the command name contains three or more words, you should use dashes to make it more legible. If that is the case, or if the name is long, consider providing an alias that makes it quicker to type (like `vis-heap-chunks [vis]`).\n\nYou provide aliases to a command by specifying a list of strings to the `aliases` argument. Again, you may provide aliases to help users transitioning from other tools/debuggers (e.g. `nearpc [pdisass, u]`).\n## The arguments your command will take\nWe are using [`argparse.ArgumentParser`](https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser) from the python standard library to define command arguments. Take a look at the python documentation to see how it works. Let's take a look at an example from the source (the [`setflag`](https://pwndbg.re/pwndbg/dev/commands/register/setflag/) command):\n```python\nparser = argparse.ArgumentParser(description=\"Modify the flags register.\")\n\nparser.add_argument(\n\t\"flag\",\n\ttype=str,\n\thelp=\"Flag for which you want to change the value\"\n )\n\nparser.add_argument(\n    \"value\",\n    type=int,\n    help=\"Value to which you want to set the flag - only valid options are 0 and 1\",\n)\n```\nFor usage inside Pwndbg, to instantiate an `argparse.ArgumentParser` object, you must pass the `description` argument and may pass the `epilog` argument. Everything else, including `prog`, `usage`, `formatter_class` etc. will be set up by Pwndbg (by the `@pwndbg.commands.Command` decorator). Here we see only the `description` was provided.\n\nAdd arguments to your command with [`parser.add_argument`](https://docs.python.org/3/library/argparse.html#the-add-argument-method). Again, consult the python documentation for an explanation. One nice thing specific to Pwndbg is that by setting an argument's `type` to `int`, it will also accept debugger values and symbols that can resolve to an int. For instance:\n```python\npwndbg> setflag ZF (1-1)\nSet flag ZF=0 in flag register eflags (old val=0x206, new val=0x206)\npwndbg> setflag ZF $rdi\nSet flag ZF=1 in flag register eflags (old val=0x246, new val=0x246)\npwndbg> setflag ZF (int)main^(int)main\nSet flag ZF=0 in flag register eflags (old val=0x246, new val=0x206)\n```\nBe careful when deciding which arguments are positional, and which are optional. Especially take care if you have positional arguments which are not required, think about which of those will be specified more often by users and put them first.\n\nYour function signature should match the arguments you defined with argparse (and their order!), unsurprisingly the `setflag` function has this signature:\n```python\ndef setflag(flag: str, value: int) -> None:\n```\nYou can see the help of your command with `my_command -h` or `help my_command`, so for `setflag`:\n```\npwndbg> help setflag\nusage: setflag [-h] flag value\n\nModify the flags register.\n\npositional arguments:\n  flag        Flag for which you want to change the value\n  value       Value to which you want to set the flag - only valid options are 0 and 1\n\noptions:\n  -h, --help  show this help message and exit\n\nExamples:\nOn X86/X64:\n    setflag ZF 1        -- set zero flag\n    setflag CF 0        -- unset carry flag\n\nOn ARM:\n    setflag Z 0         -- unset the Z cpsr/xpsr flag\n\nTo see flags registers:\n    info reg eflags     -- on x86/x64\n    info reg cpsr/xpsr  -- on ARM (specific register may vary)\n\nNotes:\nThis command supports flags registers that are defined for architectures in the pwndbg/regs.py file.\n\nAlias: flag\n```\nEh? Where is all that extra text coming from? Well the `Alias: flag` line is being automatically generated by Pwndbg but...\n## Examples, notes, and debugger support\nComing back to the arguments of the `pwndbg.commands.Command` constructor:\n```python\n    def __init__(\n        self,\n        parser_or_desc: argparse.ArgumentParser | str,\n        *,  # All further parameters are not positional\n        category: CommandCategory,\n        command_name: str | None = None,\n        aliases: List[str] = [],\n        examples: str = \"\",  #  <--- we left off here\n        notes: str = \"\",\n        only_debuggers: Set[pwndbg.dbg_mod.DebuggerType] = None,\n        exclude_debuggers: Set[pwndbg.dbg_mod.DebuggerType] = None,\n\t) -> None:\n\t\t# ...\n```\nYou may supply the `examples` and `notes` arguments to add additional text at the end of the command's help. It is defined like so for `setflag`:\n```python\n@pwndbg.commands.Command(\n    parser,\n    aliases=[\"flag\"],\n    category=CommandCategory.REGISTER,\n    examples=\"\"\"\nOn X86/X64:\n    setflag ZF 1        -- set zero flag\n    setflag CF 0        -- unset carry flag\n\nOn ARM:\n    setflag Z 0         -- unset the Z cpsr/xpsr flag\n\nTo see flags registers:\n    info reg eflags     -- on x86/x64\n    info reg cpsr/xpsr  -- on ARM (specific register may vary)\n    \"\"\",\n    notes=\"\"\"\nThis command supports flags registers that are defined for architectures in the pwndbg/regs.py file.\n    \"\"\",\n)\n@pwndbg.commands.OnlyWhenRunning\ndef setflag(flag: str, value: int) -> None:\n\t# ....\n```\nWhen writing this (and the command description for that matter), you should consider what it will [look like in the documentation](https://pwndbg.re/pwndbg/dev/commands/register/setflag/) after being parsed as markdown.\n\nAs for `only_debuggers` and `exclude_debuggers`, you must use (usually one of) them if your command does not work an all debuggers that Pwndbg supports. For instance, if it uses some features from `pwndbg.gdblib` (which should be avoided if at all possible). In such a case, you probably also need to conditionally import it in the `load_commands` function.\n## Can your command be invoked all the time?\nIn most cases a command cannot be legally invoked at every moment in a debugging session, or for every debugging session. For instance, you can't use heap commands if the heap isn't initialized yet, you can't use kernel commands if you're not debugging a kernel.\n\nTo make sure these cases are properly handled, Pwndbg provides certain decorators. They are defined in `pwndbg/commands/__init__.py`. Check the source to see an up-to-date list, but here are some important ones:\n```\nOnlyWhenRunning\nOnlyWhenLocal\nOnlyWithFile\nOnlyWhenQemuKernel\nOnlyWhenUserspace\nOnlyWithKernelDebugInfo\nOnlyWithKernelDebugSymbols\nOnlyWhenPagingEnabled\nOnlyWithTcache\nOnlyWhenHeapIsInitialized\nOnlyWithResolvedHeapSyms\n```\nFeel free to add more of these decorators yourself!\n\nAnother very important one is `OnlyWithArch`, defined in `pwndbg/aglib/proc.py`. Does your command work on all architectures? If not, make sure to specify this decorator and pass in the architectures which you do support.\n## Actually implementing the command\nThere is no single right way to do it. You will want to read the source of some similar commands and see how they work. Check out the [general developer notes](dev-notes.md), and feel free to ask a question on the [discord server](https://discord.gg/x47DssnGwm). Good luck!\n", "timestamp": "2025-10-24T11:39:44.993428"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/contributing/adding-a-parameter.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/contributing/adding-a-parameter.md", "content": "# Adding a Configuration Option\nConfiguration options are also called \"parameters\" in the source. Let's take a look at an existing parameter `gdb-workaround-stop-event` defined in `pwndbg/gdblib/events.py`.\n```python\nDISABLED = \"disabled\"\nDISABLED_DEADLOCK = \"disabled-deadlock\"\nENABLED = \"enabled\"\n\ngdb_workaround_stop_event = config.add_param(\n    \"gdb-workaround-stop-event\",\n    DISABLED,\n    \"asynchronous stop events to improve 'commands' functionality\",\n    help_docstring=f\"\"\"\nNote that this may cause unexpected behavior with Pwndbg or gdb.execute.\n\nValues explained:\n\n+ `{DISABLED}` - Disable the workaround (default).\n+ `{DISABLED_DEADLOCK}` - Disable only deadlock detection; deadlocks may still occur.\n+ `{ENABLED}` - Enable asynchronous stop events; gdb.execute may behave unexpectedly (asynchronously).\n    \"\"\",\n    param_class=pwndbg.lib.config.PARAM_ENUM,\n    enum_sequence=[DISABLED, DISABLED_DEADLOCK, ENABLED],\n)\n```\nTo understand it, let's also look at the signature of the `Config.add_param` function defined in `pwndbg/lib/config.py`:\n```python\n    def add_param(\n        self,\n        name: str,\n        default: Any,\n        set_show_doc: str,\n        *,\n        help_docstring: str = \"\",\n        param_class: int | None = None,\n        enum_sequence: Sequence[str] | None = None,\n        scope: Scope = Scope.config,\n    ) -> Parameter:\n\t    # ...\n```\nSo, the first argument specifies the name by which the parameter will be used inside the debugger. The second argument specifies the default value of the parameter.\n## set_show_doc\nThe third argument is a very brief description of what the parameter is for. The argument is called `set_show_doc` due to how it is used in GDB.\n```text\npwndbg> set gdb-workaround-stop-event enabled\nSet asynchronous stop events to improve 'commands' functionality to 'enabled'.\n   |------------------------------------------------------------|\n```\n```text\npwndbg> show gdb-workaround-stop-event\nAsynchronous stop events to improve 'commands' functionality is 'enabled'. [...]\n|-----------------------------------------------------------|\n```\nIt is therefore recommended to use a noun phrase rather than describe an action. However, it sometimes may be necessary to break this rule to retain the brevity of the description.\n\nThe `set_show_doc` argument should be short because it is displayed with the `config` family of commands.\n```text\npwndbg> config\nName                               Documentation                                                            Value (Default)\n----------------------------------------------------------------------------------------------------------------------------\nai-anthropic-api-key               Anthropic API key                                                        ''\nai-history-size                    maximum number of questions and answers to keep in the prompt            3\nai-max-tokens                      the maximum number of tokens to return in the response                   100\nai-model                           the name of the large language model to query                            'gpt-3.5-turbo'\nai-ollama-endpoint                 Ollama API endpoint                                                      ''\nai-openai-api-key                  OpenAI API key                                                           ''\nai-show-usage                      whether to show how many tokens are used with each OpenAI API call       off\nai-stack-depth                     rows of stack context to include in the prompt for the ai command        16\nai-temperature                     the temperature specification for the LLM query                          0\nattachp-resolution-method          how to determine the process to attach when multiple candidates exists   'ask'\nauto-explore-auxv                  stack exploration for AUXV information; it may be really slow            'warn'\nauto-explore-pages                 whether to try to infer page permissions when memory maps are missing    'warn'\nauto-explore-stack                 stack exploration; it may be really slow                                 'warn'\nauto-save-search                   automatically pass --save to \"search\" command                            off\nbn-autosync                        whether to automatically run bn-sync every step                          off\n[...]\n```\nBecause of the various contexts in which a parameter can be show, the first letter of the `set_show_doc` string should be lowercase (unless the first word is a name or an abbreviation) and there should be no punctuation at the end. This way, Pwndbg and GDB can more easily modify the string to fit it into these contexts.\n## help_docstring\nWhile `help_docstring` is not mandatory, it is highly recommended to use it. Put a detailed explanation of what the parameter does here, and explain any caveats. This string does not have a size limit and is shown with the following command in GDB and LLDB:\n```text\npwndbg> help set gdb-workaround-stop-event\nSet asynchronous stop events to improve 'commands' functionality.\nNote that this may cause unexpected behavior with Pwndbg or gdb.execute.\n\nValues explained:\n\n+ `disabled` - Disable the workaround (default).\n+ `disabled-deadlock` - Disable only deadlock detection; deadlocks may still occur.\n+ `enabled` - Enable asynchronous stop events; gdb.execute may behave unexpectedly (asynchronously).\n\nDefault: 'disabled'\nValid values: 'disabled', 'disabled-deadlock', 'enabled'\n```\nNote that the last two lines are automatically generated by Pwndbg.\n\nWhen writing this explanation, it is important to take into account how it will be displayed [in the documentation](https://pwndbg.re/pwndbg/dev/configuration/) after being parsed as markdown. See what `gdb-workaround-stop-event` looks like here: https://pwndbg.re/pwndbg/dev/configuration/config/#gdb-workaround-stop-event . If there wasn't an empty line between `Values explained:` and ``+ `disabled`..`` the list wouldn't have rendered properly.\n## param_class\nThis argument describes the type of the parameter. It will be used by GDB to perform input validation when the parameter is being set so it is important to set this to the correct value. The possible values are defined in `pwndbg/lib/config.py`, use the most restrictive one that fits:\n```python\n# Boolean value. True or False, same as in Python.\nPARAM_BOOLEAN = 0\n# Boolean value, or 'auto'.\nPARAM_AUTO_BOOLEAN = 1\n# Signed integer value. Disallows zero.\nPARAM_INTEGER = 2\n# Signed integer value.\nPARAM_ZINTEGER = 3\n# Unsigned integer value. Disallows zero.\nPARAM_UINTEGER = 4\n# Unsigned integer value.\nPARAM_ZUINTEGER = 5\n# Unlimited ZUINTEGER.\nPARAM_ZUINTEGER_UNLIMITED = 6\n# String value. Accepts escape sequences.\nPARAM_STRING = 7\n# String value, accepts only one of a number of possible values, specified at\n# parameter creation.\nPARAM_ENUM = 8\n# String value corresponding to the name of a file, if present.\nPARAM_OPTIONAL_FILENAME = 9\n```\nFor more information (for instance about what `None` or `\"unlimited\"` mean) see https://sourceware.org/gdb/current/onlinedocs/gdb.html/Parameters-In-Python.html .\n### enum_sequence\nIf the `param_class` is set to `pwndbg.lib.config.PARAM_ENUM` then the `enum_sequence` argument must be supplied as well. It should constitute an array of legal values. GDB and (our) LLDB (driver) won't allow setting the parameter to any other value. The legal values will be automatically displayed at the end of `help_docstring` as previously shown.\n\nIf it isn't immediately obvious what the enum values do, explain them in `help_docstring` using same format that `gdb-workaround-stop-event` uses.\n## scope\nThe `scope` argument has the default value of `pwndbg.lib.config.Scope.config` and is used to group parameters. The legal values are:\n```python\nclass Scope(Enum):\n    # If you want to add another scope here, don't forget to add\n    # a command which prints it!\n    config = 1\n    theme = 2\n    heap = 3\n```\nThe parameters of each scope are printed using a different command. The `config` scope is printed with [`config`](https://pwndbg.re/pwndbg/dev/commands/pwndbg/config/), the `heap` scope is printed with [`heap-config`](https://pwndbg.re/pwndbg/dev/commands/pwndbg/heap-config/) and the `theme` scope is printed with [`theme`](https://pwndbg.re/pwndbg/dev/commands/pwndbg/theme/). The `config` and `theme` scopes also have corresponding [`configfile`](https://pwndbg.re/pwndbg/dev/commands/pwndbg/configfile/) and [`themefile`](https://pwndbg.re/pwndbg/dev/commands/pwndbg/themefile/) commands which export the values of all the parameters from those scopes.\n### The `theme` scope\nYou should never directly pass this scope to `pwndbg.config.add_param`. Instead use the `pwndbg.color.theme.add_param` and `pwndbg.color.theme.add_color_param` wrapper commands like this:\n```python\n# pwndbg/aglib/nearpc.py\nnearpc_branch_marker = pwndbg.color.theme.add_param(\n    \"nearpc-branch-marker\", \"    ↓\", \"branch marker line for nearpc command\"\n)\n```\n```python\n# pwndbg/color/context.py\nconfig_highlight_color = theme.add_color_param(\n    \"highlight-color\", \"green,bold\", \"color added to highlights like source/pc\"\n)\n```\n## Using the parameter in code\nUsually when a parameter is defined its value is also set to a variable, for instance `gdb_workaround_stop_event = ...` in the initial example. This isn't necessary, as all registered parameters are available as `pwndbg.config.<parameter_name_except_with_underscores>` so in our example, we could also access the `gdb-workaround-stop-event` parameter as `pwndbg.config.gdb_workaround_stop_event`.\n\nThat being said, defining the variable can reduce code verbosity:\n```python\n# pwndbg/aglib/godbg.py\nline_width = pwndbg.config.add_param(\n    \"go-dump-line-width\", 80, \"the soft line width for go-dump pretty printing\"\n)\n```\nSince the variable is scoped to the `godbg.py` file, its name can be short, and we don't have to write `pwndbg.config.go_dump_line_width` every time.\n### Using color parameters\nNote that the `theme.add_color_param()` function returns a `ColorParameter` object instead of a `Parameter`. The parameter should be used via its `color_function()` method:\n```python\n# pwndbg/aglib/godbg.py\ndef fmt_debug(self, val: str, default: str = \"\") -> str:\n\tif self.debug:\n\t\treturn debug_color.color_function(val)\n\telse:\n\t\treturn default\n```\nThough you will also see `generateColorFunction(debug_color)(val)` being used in the code to the same effect.\n", "timestamp": "2025-10-24T11:39:45.114842"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/contributing/dev-notes.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/contributing/dev-notes.md", "content": "# Developer Notes\n\n## Random developer notes\n\nFeel free to update the list below!\n\n* If you want to play with Pwndbg functions under GDB, you can always use GDB's `pi` which launches python interpreter or just `py <some python line>`.\n\n* If you want to do the same in LLDB, you should type `lldb`, followed by `script`, which brings up an interactive Python REPL. Don't forget to `import pwndbg`!\n\n* Do not access debugger-specific functionality - eg. anything that uses the `gdb`, `lldb`, or `gdblib` modules - from outside the proper module in `pwndbg.dbg`.\n\n* Use `aglib` instead of `gdblib`, as the latter is [in the process of being removed](https://github.com/pwndbg/pwndbg/issues/2489). Both modules should have nearly identical interfaces, so doing this should be a matter of typing `pwndbg.aglib.X` instead of `pwndbg.gdblib.X`. Ideally, an issue should be opened if there is any functionality present in `gdblib` that's missing from `aglib`.\n\n* We have our own `pwndbg.config.Parameter` - read about it in [Adding a Configuration Option](adding-a-parameter.md).\n\n* The dashboard/display/context we are displaying is done by `pwndbg/commands/context.py` which is invoked through GDB's and LLDB's prompt hook, which are defined, respectively, in `pwndbg/gdblib/prompt.py` as `prompt_hook_on_stop`, and in `pwndb/dbg/lldb/hooks.py` as `prompt_hook`.\n\n* We change a bit GDB settings - this can be seen in `pwndbg/dbg/gdb.py` under `GDB.setup` - there are also imports for all Pwndbg submodules.\n\n* Pwndbg has its own event system, and thanks to it we can set up code to be invoked in response to them. The event types and the conditions in which they occurr are defined and documented in the `EventType` enum, and functions are registered to be called on events with the `@pwndbg.dbg.event_handler` decorator. Both the enum and the decorator are documented in `pwndbg/dbg/__init__.py`.\n\n* We have a caching mechanism ([\"memoization\"](https://en.wikipedia.org/wiki/Memoization)) which we use through Python's decorators - those are defined in `pwndbg/lib/cache.py` - just check its usages\n\n* To block a function before the first prompt was displayed use the `pwndbg.decorators.only_after_first_prompt` decorator.\n\n* Memory accesses should be done through `pwndbg/aglib/memory.py` functions.\n\n* Process properties can be retrieved thanks to `pwndbg/aglib/proc.py` - e.g. using `pwndbg.aglib.proc.pid` will give us current process pid\n\n\n* We have a wrapper for handling exceptions that are thrown by commands - defined in `pwndbg/exception.py` - current approach seems to work fine - by using `set exception-verbose on` - we get a stacktrace. If we want to debug stuff we can always do `set exception-debugger on`.\n\n* Some of Pwndbg's functionality require us to have an instance of `pwndbg.dbg.Value` - the problem with that is that there is no way to define our own types in either GDB or LLDB - we have to ask the debugger if it detected a particular type in this particular binary (that sucks). We do that in `pwndbg/aglib/typeinfo.py` and it works most of the time. The known bug with that is that it might not work properly for Golang binaries compiled with debugging symbols.\n\n## Support for Multiple Debuggers\n\nPwndbg is a tool that supports multiple debuggers, and so using debugger-specific functionality\noutside of `pwndbg.dbg.X` is generally discouraged, with one imporant caveat, that we will get into\nlater. When adding code to Pwndbg, one must be careful with the functionality being used.\n\n### The Debugger API\n\nOur support for multiple debuggers is primarily achieved through use of the Debugger API, found\nunder `pwndbg/dbg/`, which defines a terse set of debugging primitives that can then be built upon\nby the rest of Pwndbg. It comprises two parts: the interface, and the implementations. The interface\ncontains the abstract classes and the types that lay out the \"shape\" of the functionality that may\nbe used by the rest of Pwndbg, and the implementations, well, _implement_ the interface on top of each\nsupported debugger.\n\nAs a matter of clarity, it makes sense to think of the Debugger API as a debugger-agnostic version\nof the `lldb` and `gdb` Python modules. Compared to both modules, it is much closer in spirit to\n`lldb` than to `gdb`.\n\nIt is important to note that a lot of care must be exercised when adding things to the Debugger API,\nas one must always add implementations for all supported debuggers of whatever new functionality is\nbeing added, even if only to properly gate off debuggers in which the functionality is not supported.\nAdditionally, it is important to keep the Debugger API interfaces as terse as possible in order to\nreduce code duplication. As a rule of thumb, if all the implementations of an interface are expected\nto share code, that interface is probably better suited for `aglib`, and it should be further broken\ndown into its primitives, which can then be added to the Debugger API.\n\nSome examples of debugging primitives are memory reads, memory writes, memory map acquisition,\nsymbol lookup, register reads and writes, and execution frames. These are all things that one can\nfind in both the GDB and LLDB APIs.\n\nThe entry point for the Debugger API is `pwndbg.dbg`, though most process-related methods are accessed\nthrough a `Process` object. Unless you really know what you're doing, you're going to want to use the\nobjected yielded by `pwndbg.dbg.selected_inferior()` for this.\n\n### `aglib`\n\nAlong with the Debugger API, there is also `aglib`, found under `pwndbg/aglib/`, in which lives\nfunctionality that is both too broad for a single command, and that can be shared between multiple\ndebuggers. Things like QEMU handling, ELF and dynamic section parsing, operating system functionality,\ndisassembly with capstone, heap analysis, and more, all belong in `aglib`.\n\nIn order to facilitate the process of porting Pwndbg to the debugger-agnostic interfaces, and also\nbecause of its historical roots, `aglib` is intended to export the exact same functionality provided\nby `gdblib`, but on top of a debugger-agnostic foundation.\n\nIf it helps, one may think of `aglib` like a `pwndbglib`. It takes the debugging primitives provided\nby the Debugger API and builds the more complex and interesting bits of functionality found in\nPwndbg on top of them.\n\n### Mappings from GDB and LLDB to the Debugger API\n\nHere are some things one may want to do, along with how they can be achieved in the GDB, LLDB, and\nPwndbg Debugger APIs.\n\n=== \"GDB\"\n    Setting a breakpoint at an address:\n    ```python\n    gdb.Breakpoint(\"*<address>\")\n    ```\n    Querying for the address of a symbol:\n    ```python\n    int(gdb.lookup_symbol(<name>).value().address)\n    ```\n    Setting a watchpoint at an address:\n    ```python\n    gdb.Breakpoint(f\"(char[{<size>}])*{<address>}\", gdb.BP_WATCHPOINT)\n    ```\n\n=== \"LLDB\"\n    Setting a breakpoint at an address:\n    ```python\n    lldb.target.BreakpointCreateByAddress(<address>)\n    ```\n    Querying for the address of a symbol:\n    ```python\n    lldb.target.FindSymbols(<name>).GetContextAtIndex(0).symbol.GetStartAddress().GetLoadAddress(lldb.target)\n    ```\n    Setting a watchpoint at an address:\n    ```python\n    lldb.target.WatchAddress(<address>, <size>, ...)\n    ```\n\n=== \"Debugger API\"\n    ```python\n    # Fetch a Process object on which we will operate.\n    inf = pwndbg.dbg.selected_inferior()\n    ```\n    Setting a breakpoint at an address:\n    ```python\n    inf.break_at(BreakpointLocation(<address>))\n    ```\n    Querying for the address of a symbol:\n    ```python\n    inf.lookup_symbol(<name>)\n    ```\n    Setting a watchpoint at an address:\n    ```python\n    inf.break_at(WatchpointLocation(<address>, <size>))\n    ```\n\n### Exception to use of Debugger-agnostic interfaces\n\nSome commands might not make any sense outside the context of a single debugger. For these commands,\nit is generally okay to talk to the debugger directly. However, they must be properly marked as\ndebugger-specific and their loading must be properly gated off behind the correct debugger. They\nshould ideally be placed in a separate location from the rest of the commands in `pwndbg/commands/`.\n\n## Porting public tools\n\nIf porting a public tool to Pwndbg, please make a point of crediting the original author. This can be added to [CREDITS.md](https://github.com/pwndbg/pwndbg/blob/dev/CREDITS.md) noting the original author/inspiration, and linking to the original tool/article. Also please be sure that the license of the original tool is suitable to porting into Pwndbg, such as MIT.\n\n## Minimum Supported Versions\n\nOur goal is to fully support all Ubuntu LTS releases that have not reached end-of-life, with support for other\nplatforms on a best-effort basis. Currently that means all code should work on Ubuntu 22.04, and 24.04 with GDB\n12.1 and later. This means that the minimum supported Python version is 3.10, and we cannot use any newer\nPython features unless those features are backported to this minimum version.\n\nNote that while all code should run without errors on these supported LTS versions, it's fine if older versions\ndon't support all of the features of newer versions, as long as this is handled correctly and this information\nis shown to the user. For example, we may make use of some GDB APIs in newer versions that we aren't able to\nprovide alternative implementations for in older versions, and so in these cases we should inform the user that\nthe functionality can't be provided due to the version of GDB.\n\nThe `lint.sh` script described in the previous section runs [`vermin`](https://github.com/netromdk/vermin) to\nensure that our code does not use any features that aren't supported on Python 3.10.\n", "timestamp": "2025-10-24T11:39:45.240439"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/contributing/improving-annotations.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/contributing/improving-annotations.md", "content": "# Improving Annotations\n\nAlongside the disassembled instructions in the dashboard, Pwndbg also has the ability to display annotations - text that contains relevent information regarding the execution of the instruction. For example, on the x86 `MOV` instruction, we can display the concrete value that gets placed into the destination register. Likewise, we can indicate the results of mathematical operations and memory accesses. The annotation in question is always dependent on the exact instruction being annotated - we handle it in a case-by-case basis.\n\nThe main hurdle in providing annotations is determining what each instruction does, getting the relevent CPU registers and memory that are accessed, and then resolving concrete values of the operands. We call the process of determining this information \"enhancement\", as we enhance the information provided natively by GDB.\n\nThe Capstone Engine disassembly framework is used to statically determine information about instructions and their operands. Take the x86 instruction `sub rax, rdx`. Given the raw bytes of the machine instructions, Capstone creates an object that provides an API that, among many things, exposes the names of the operands and the fact that they are both 8-byte wide registers. It provides all the information necessary to describe each operand. It also tells the general 'group' that a instruction belongs to, like if its a JUMP-like instruction, a RET, or a CALL. These groups are architecture agnostic.\n\nHowever, the Capstone Engine doesn't fill in concrete values that those registers take on. It has no way of knowing the value in `rdx`, nor can it actually read from memory.\n\nTo determine the actual values that the operands take on, and to determine the results of executing an instruction, we use the Unicorn Engine, a CPU emulator framework. The emulator has its own internal CPU register set and memory pages that mirror that of the host process, and it can execute instructions to mutate its internal state. Note that the Unicorn Engine cannot execute syscalls - it doesn't have knowledge of a kernel.\n\nWe have the ability to single-step the emulator - tell it to execute the instruction at the program counter inside the emulator. After doing so, we can inspect the state of the emulator - read from its registers and memory. The Unicorn Engine itself doesn't expose information regarding what each instruction is doing - what is the instruction (is it an `add`, `mov`, `push`?) and what registers/memory locations is it reading to and writing from? - which is why we use the Capstone engine to statically determine this information.\n\nUsing what we know about the instruction based on the Capstone engine - such as that it was a `sub` instruction and `rax` was written to - we query the emulator after stepping in to determine the results of the instruction.\n\nWe also read the program counter from the emulator to determine jumps and so we can display the instructions that will actually be executed, as opposed to displaying the instructions that follow consecutively in memory.\n\n## Enhancing\n\nEverytime the inferior process stops (and when the `disasm` context section is displayed), we display the next handful of assembly instructions in the dashboard so the user can understand where the process is headed. The exact amount is determined by the `context-disasm-lines` setting.\n\nWe will be enhancing the instruction at the current program counter, as well as all the future instructions that are displayed. The end result of enhancement is that we get a list of `PwndbgInstruction` objects, each encapsulating relevent information regarding the instructions execution.\n\nWhen the process stops, we instantiate the emulator from scratch. We copy all the registers from the host process into the emulator. For performance purposes, we register a handler to the Unicorn Engine to lazily map memory pages from the host to the emulator when they are accessed (a page fault from within the emulator), instead of immediately copying all the memory from the host to the emulator.\n\nThe enhancement is broken into a couple stops:\n\n1. First, we resolve the values of all the operands of the instruction before stepping the emulator. This means we read values from registers and dereference memory depending on the operand type. This gives us the values of operands before the instruction executes.\n2. Then, we step the emulator, executing a single instruction.\n3. We resolve the values of all operands again, giving us the `after_value` of each operand.\n4. Then, we enhance the \"condition\" field of PwndbgInstructions, where we determine if the instruction is conditional (conditional branch or conditional mov are common) and if the action is taken.\n5. We then determine the `next` and `target` fields of PwndbgInstructions. `next` is the address that the program counter will take on after using the GDB command `nexti`, and `target` indicates the target address of branch/jump/PC-changing instructions.\n6. With all this information determined, we now effectively have a big switch statement, matching on the instruction type, where we set the `annotation` string value, which is the text that will be printed alongside the instruction in question.\n\nWe go through the enhancement process for the instruction at the program counter and then ensuing handful of instructions that are shown in the dashboard.\n\n## When to use emulation / reasoning about process state\n\nIn general, the code aims to be organized in a way as to allow as many features as possible even in the absence of emulation. If there is information that can be determined statically, then we try to expose it as an alternative to emulation. This is so we can display annotations even when the Unicorn Engine is disabled. For example, say we come to a stop, and are faced with enhancing the following three instructions in the dashboard:\n\n```asm\n1.     lea    rax, [rip + 0xd55]\n2. >   mov    rsi, rax      # The host process program counter is here\n3.     mov    rax, rsi\n```\n\nInstruction 1, the `lea` instruction, is already in the past - we pull our enhanced PwndbgInstruction for it from a cache.\n\nInstruction 2, the first `mov` instruction, is where the host process program counter is at. If we did `stepi` in GDB, this instruction would be executed. In this case, there is two ways we can determine the value that gets written to `rsi`.\n\n1. After stepping the emulator, read from the emulators `rsi` register.\n2. Given the context of the instruction, we know the value in `rsi` will come from `rax`. We can just read the `rax` register from the host. This avoids emulation.\n\nThe decision on which option to take is implemented in the annotation handler for the specific instruction. When possible, we have a preference for the second option, because it makes the annotations work even when emulation is off.\n\nThe reason we could do the second option, in this case, is because we could reason about the process state at the time this instruction would execute. This instruction is about to be executed (`Program PC == instruction.address`). We can safely read from `rax` from the host, knowing that the value we get is the true value it takes on when the instruction will execute. It must - there are no instructions in-between that could have mutated `rax`.\n\nHowever, this will not be the case while enhancing instruction 3 while we are paused at instruction 2. This instruction is in the future, and without emulation, we cannot safely reason about the operands in question. It is reading from `rsi`, which might be mutated from the current value that `rsi` has in the stopped process (and in this case, we happen to know that it will be mutated). We must use emulation to determine the `before_value` of `rsi` in this case, and can't just read from the host processes register set. This principle applies in general - future instructions must be emulated to be fully annotated. When emulation is disable, the annotations are not as detailed since we can't fully reason about process state for future instructions.\n\n## What if the emulator fails?\n\nIt is possible for the emulator to fail to execute an instruction - either due to a restrictions in the engine itself, or the instruction inside segfaults and cannot continue. If the Unicorn Engine fails, there is no real way we can recover. When this happens, we simply stop emulating for the current step, and we try again the next time the process stops when we instantiate the emulator from scratch again.\n\n## Caching annotations\n\nWhen we are stepping through the emulator, we want to remember the annotations of the past couple instructions. We don't want to `nexti`, and suddenly have the annotation of the previously executed instruction deleted. At the same time, we also never want stale annotations that might result from coming back to point in the program to which we have stepped before, such as the middle of a loop via a breakpoint.\n\nNew annotations are only created when the process stops, and we create annotations for next handful of instructions to be executed. If we `continue` in GDB and stop at a breakpoint, we don't want annotations to appear behind the PC that are from a previous time we were near the location in question. To avoid stale annotations while still remembering them when stepping, we have a simple caching method:\n\nWhile we are doing our enhancement, we create a list containing the addresses of the future instructions that are displayed.\n\nFor example, say we have the following instructions with the first number being the memory address:\n\n```gdb\n   0x555555556259 <main+553>    lea    rax, [rsp + 0x90]\n   0x555555556261 <main+561>    mov    edi, 1                          EDI => 1\n   0x555555556266 <main+566>    mov    rsi, rax\n   0x555555556269 <main+569>    mov    qword ptr [rsp + 0x78], rax\n   0x55555555626e <main+574>    call   qword ptr [rip + 0x6d6c]    <fstat64>\n\n ► 0x555555556274 <main+580>    mov    edx, 5                  EDX => 5\n   0x555555556279 <main+585>    lea    rsi, [rip + 0x3f30]     RSI => 0x55555555a1b0 ◂— 'standard output'\n   0x555555556280 <main+592>    test   eax, eax\n   0x555555556282 <main+594>    js     main+3784                   <main+3784>\n\n   0x555555556288 <main+600>    mov    rsi, qword ptr [rsp + 0xc8]\n   0x555555556290 <main+608>    mov    edi, dword ptr [rsp + 0xa8]\n```\n\nIn this case, our `next_addresses_cache` would be `[0x555555556279, 0x555555556280, 0x555555556282, 0x555555556288, 0x555555556290]`.\n\nThen, the next time our program comes to a stop (after using `si`, `n`, or any GDB command that continues the process), we immediately check if the current program counter is in this list. If it is, then we can infer that the annotations are still valid, as the program has only executed a couple instructions. In all other cases, we delete our cache of annotated instructions.\n\nWe might think \"why not just check if it's the next address - 0x555555556279 in this case? Why a list of the next couple addresses?\". This is because when source code is available, `step` and `next` often skip a couple instructions. It would be jarring to remove the annotations in this case. Likewise, this method has the added benefit that if we stop somewhere, and there happens to be a breakpoint only a couple instructions in front of us that we `continue` to, then previous couple annotations won't be wiped.\n\n## Other random annotation details\n\n- We don't emulate through CALL instructions. This is because the function might be very long.\n- We resolve symbols during the enhancement stage for operand values.\n- The folder [`pwndbg/aglib/disasm`](https://github.com/pwndbg/pwndbg/tree/dev/pwndbg/aglib/disasm) contains the code for enhancement. It follows an object-oriented model, with `arch.py` implementing the parent class with shared functionality, and the per-architecture implementations are implemented as subclasses in their own files.\n- `pwndbg/aglib/nearpc.py` is responsible for getting the list of enhanced PwndbgInstruction objects and converting them to the output seen in the 'disasm' view of the dashboard.\n\n## Adding or fixing annotations\n\nWe annotate on an instruction-by-instruction basis. Effectively, imagine a giant `switch` statement that selects the correct handler to create an annotation based on the specific instruction. Many instruction types can be grouped and annotated using the same logic, such as `load`, `store`, and `arithmetic` instructions.\n\nSee [`pwndbg/aglib/disasm/aarch64.py`](https://github.com/pwndbg/pwndbg/tree/dev/pwndbg/aglib/disasm/aarch64.py) as an example. We define sets that group instructions using the unique Capstone ID for each instruction, and inside the constructor of `DisassemblyAssistant` we have a mapping of instructions to a specific handler. The `_set_annotation_string` function will match the instruction to the correct handler, which set the `instruction.annotation` field.\n\nIf there is a bug in an annotation, the first order of business is finding its annotation handler. To track down where we are handling the instruction, you can search for its Capstone constant. For example, the RISC-V store byte instruction, `sb`, is represented as the Capstone constant `RISCV_INS_SB`. Or, if you are looking for the handler for the AArch64 instruction SUB, you can search the disasm code for `_INS_SUB` to find where we reference the appropriate Capstone constant for the instruction and following the code to the function that ultimately sets the annotation.\n\nIf an annotation is causing a crash, is it most likely due to a handler making an incorrect assumption on the number of operands, leading to a `list index out of range` error. One possible source of this is that a given instruction has multiple different disassembly representations. Take the RISC-V `JALR` instruction. It can be represented in 3 ways:\n\n```asm\njalr rs1        # return register is implied as ra, and imm is implied as 0\njalr rs1, imm   # return register is implied as ra\njalr rd, rs1, imm\n```\n\nCapstone will expose the most \"simplified\" one possible, and the underlying list of register operands will change. If the handler doesn't take these different options into account, and rather assumes that `jalr` always has 3 operands, then an index error can occur if the handler accesses `instruction.operands[2]`.\n\n## Bug root cause\n\nWhen encountering an instruction that is behaving strangely (incorrect annotation, or there is a jump target when one shouldn't exist, or the target is incorrect), there are a couple routine things to check.\n\n1\\. Use the `dev-dump-instruction` command to print all the enhancement information. With no arguments, it will dump the info from the instruction at the current address. If given an address, it will pull from the instruction cache at the corresponding location.\n\nIf the issue is not related to branches, check the operands and the resolved values for registers and memory accesses. Verify that the values are correct - are the resolved memory locations correct? Step past the instruction and use instructions like `telescope` and `regs` to read memory and verify if the claim that the annotation is making is correct. For things like memory operands, you can try to look around the resolved memory location in memory to see the actual value that the instruction dereferenced, and see if the resolved memory location is simply off by a couple bytes.\n\nExample output of dumping a `mov` instruction:\n\n```\nmov qword ptr [rsp], rsi at 0x55555555706c (size=4) (arch: x86)\n        ID: 460, mov\n        Raw asm: mov    qword ptr [rsp], rsi\n        New asm: mov    qword ptr [rsp], rsi\n        Next: 0x555555557070\n        Target: 0x555555557070, Target string=, const=None\n        Condition: UNDETERMINED\n        Groups: []\n        Annotation: [0x7fffffffe000] => 0x7fffffffe248 —▸ 0x7fffffffe618 ◂— '/usr/bin/ls'\n        Operands: [['[0x7fffffffe000]': Symbol: None, Before: 0x7fffffffe000, After: 0x7fffffffe000, type=CS_OP_MEM, size=8, access=CS_AC_WRITE]] ['RSI': Symbol: None, Before: 0x7fffffffe248, After: 0x7fffffffe248, type=CS_OP_REG, size=8, access=CS_AC_READ]]]\n        Conditional jump: False. Taken: False\n        Unconditional jump: False\n        Declare unconditional: None\n        Can change PC: False\n        Syscall:  N/A\n        Causes Delay slot: False\n        Split: NO_SPLIT\n        Call-like: False\n```\n\n2\\. Use the Capstone disassembler to verify the number of operands the instruction groups.\n\nTaken the raw instruction bytes and pass them to `cstool` to see the information that we are working with:\n\n```sh\ncstool -d mips 0x0400000c\n```\n\nThe number of operands may not match the visual appearance. You might also check the instruction groups, and verify that an instruction that we might consider a `call` has the Capstone `call` group. Capstone is not 100% correct in every single case in all architectures, so it's good to verify. Report a bug to Capstone if there appears to be an error, and in the meanwhile we can create a fix in Pwndbg to work around the current behavior.\n\n3\\. Check the state of the emulator.\n\nGo to [pwndbg/emu/emulator.py](https://github.com/pwndbg/pwndbg/tree/dev/pwndbg/emu/emulator.py) and uncomment the `DEBUG = -1` line. This will enable verbose debug printing. The emulator will print it's current `pc` at every step, and indicate important events, like memory mappings. Likewise, in [pwndbg/aglib/disasm/arch.py](https://github.com/pwndbg/pwndbg/tree/dev/pwndbg/aglib/disasm/arch.py) you can set `DEBUG_ENHANCEMENT = True` to print register accesses to verify they are sane values.\n\nPotential bugs:\n\n- A register is 0 (may also be the source of a Unicorn segfault if used as a memory operand) - often means we are not copying the host processes register into the emulator. By default, we map register by name - if in Pwndbg, it's called `rax`, then we find the UC constant named `U.x86_const.UC_X86_REG_RAX`. Sometimes, this default mapping doesn't work, sometimes do to differences in underscores (`FSBASE` vs `FS_BASE`). In these cases, we have to manually add the mapping.\n- Unexpected crash - the instruction at hand might require a 'coprocessor', or some information that is unavailable to Unicorn (it's QEMU under the hood).\n- Instructions are just no executing - we've seen this in the case of Arm Thumb instructions. There might be some specific API/way to invoke the emulator that is required for a certain processor state.\n\n## Creating small cross-architecture programs\n\nIf you are encountering a strange behavior with a certain instruction or scenario in a non-native-architecture program, you can use some great functions from `pwntools` to handle the compilation and debugging. This is a great way to create a small reproducible example to isolate an issue.\n\nThe following Python program, when run from inside a `tmux` session, will take some AArch64 assembly, compile it, and run it with GDB attached in a new `tmux` pane. It will search your system for the appropriate cross compiler for the architecture at hand, and run the compiled binary with QEMU.\n\n```python\nfrom pwn import *\n\ncontext.arch = \"aarch64\"\n\nAARCH64_GRACEFUL_EXIT = \"\"\"\nmov x0, 0\nmov x8, 93\nsvc 0\n\"\"\"\n\nout = make_elf_from_assembly(STORE)\n# Debug info\nprint(out)\ngdb.debug(out)\n\npause()\n```\n", "timestamp": "2025-10-24T11:39:45.301788"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/contributing/index.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/contributing/index.md", "content": "# Contributing Guide\n\n## Contributing Overview\nThank you for your interest in contributing to Pwndbg!\n\nNote that while it is recommended that your pull request (PR) links to an issue (which can be used for discussing the bug / feature), you do not need to be assigned to it - just create the PR and it will be reviewed.\n\nTo start, [install Pwndbg from source and set it up for development](setup-pwndbg-dev.md).\nFor common tasks see:\n\n+ [Adding a command](adding-a-command.md)\n+ [Adding a configuration option](adding-a-parameter.md)\n+ [Improving annotations](improving-annotations.md)\n\nRegardless of the contents of your PR, you will need to [lint](#linting) and [test](#running-tests) your code so make sure to read those sections. It is also likely you will need to [update the documentation](#updating-documentation).\n\nRead [General developer notes](dev-notes.md) to get more familiar with the various systems in place in Pwndbg. If you have any questions don't hesitate to ask us on our [discord server](https://discord.gg/x47DssnGwm)!\n## Linting\nThe `lint.sh` script runs isort, ruff, shfmt, and vermin. isort and ruff (mostly) are able to automatically fix any issues they detect. You may apply all available fixes by running\n```{.bash .copy}\n./lint.sh -f\n```\n!!! note\n    You can find the configuration files for these tools in `pyproject.toml` or by checking the arguments passed inside `lint.sh`.\n\nWhen submitting a PR, the continuous integration (CI) job defined in `.github/workflows/lint.yml` will verify that running `./lint.sh` succeeds, otherwise the job will fail and we won't be able to merge your PR.\n\nIt is recommended to enable the pre-push git hook to run the lint if you haven't already done so. You may re-run `./setup-dev.sh` to set it.\n## Running tests\nYour PR will not be merged without passing the testing CI. Moreover, it is highly recommended you write a new test or update an existing test whenever adding new functionality to Pwndbg. To see how to do this, check out [Writing tests](writing-tests.md).\n\nTo run the tests in the same environment as the testing CI, you can use the following docker commands.\n```{.bash .copy}\n# General (x86_64) test suite\ndocker compose run --rm --build ubuntu24.04-mount ./tests.sh -d gdb -g gdb\n# Cross-architecture tests\ndocker compose run --rm --build ubuntu24.04-mount ./tests.sh -d gdb -g cross-arch-user\n# Kernel tests (x86_64 and aarch64)\ndocker compose run --rm --build ubuntu24.04-mount ./kernel-tests.sh\n# Unit tests\ndocker compose run --rm --build ubuntu24.04-mount ./unit-tests.sh\n```\nThis comes in handy particularly for cross-architecture tests because the docker environment has all the cross-compilers installed. The active `pwndbg` directory is mounted, preventing the need for a full rebuild whenever you update the codebase.\n\nRemove the `-mount` if you want the tests to run from a clean slate (no files are mounted, meaning all binaries are recompiled each time).\n\nIf you wish to focus on some failing tests, you can filter the tests to run by providing an argument to the script, such as `<docker..> ./tests.sh heap`, which will only run tests that contain \"heap\" in the name. See `./tests.sh --help` for more information and other options. You can also do this with the cross-arch and kernel tests.\n\nIf you want to, you may also [run the tests with nix](#running-tests-with-nix) or [run them bare](#running-without-docker).\n\n#### Running tests with nix\nYou will need to build a nix-compatible `gdbinit.py` file, which you can do with\n```{.bash .copy}\nnix build .#pwndbg-dev\n```\nThen simply run the test by adding the `--nix` flag:\n```{.bash .copy}\n./tests.sh --nix [filter]\n```\n#### Running without docker\nIf you wish to improve Pwndbg support for your distribution (or the testing infrastructure) you may run the testing suite without the docker container.\n\nThe commands are analogous to the docker commands.\n```{.bash .copy}\n# General (x86_64) test suite\n./tests.sh -d gdb -g gdb\n# Cross-architecture tests\n./tests.sh -d gdb -g cross-arch-user\n# Kernel tests (x86_64 and aarch64)\n./kernel-tests.sh\n# Unit tests\n./unit-tests.sh\n```\n\n## Updating Documentation\nAll the documentation is written in markdown files in the `./docs/` folder. The docs are built into a website using [mkdocs](https://www.mkdocs.org/) (you may see the configuration in `./mkdocs.yml`), pushed to the gh-pages branch, and published via [github pages](https://pages.github.com/). All of this happens in the CI.\n\nIn general, for your PR to be accepted you will only need to [Update the auto-generated documentation](#update-the-auto-generated-documentation).\n\n### Update the auto-generated documentation\nThe `./docs/commands`, `./docs/functions`, and `./docs/configuration` folders are automatically generated[^1] by extracting the necessary information from the source code. If your changes modify things like a command's description, a configuration's valid values, a [convenience function's](../functions/index.md) arguments - i.e. pretty much anything that's user-facing - you must run\n```{.bash .copy}\n./scripts/generate-docs.sh\n```\nto update the documentation. You need to have a supported version of GDB *and* [LLDB installed](setup-pwndbg-dev.md#running-with-lldb) for this to work. Commit these changes in a separate commit.\n\nIf you forget to do that the CI will detect a discrepency between the documentation and source code (using the `./scripts/verify-docs.sh` script, which you may also invoke yourself) and prevent your PR from being merged (until you push new changes, re-running the CI).\n\n### Manual updates\nOf course, if you wish to update some other part of the documentation, you may simply modify the necessary markdown files. All autogenerated files (or parts of files) will have noticable markers written as markdown comments, for instance:\n```md\n<!-- THIS PART OF THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n```\nIn case you want to add something that cannot be cleanly viewed from the debugger, like a video, screenshot, or long example, every command markdown file also has a dedicated part at the bottom for hand-written text which you can use. The `./scripts/generate-docs.sh` script will never delete these hand-written parts, so if you are for instance renaming a command you will have to transfer this part by copy pasting it to the new file.\n\nIf you wish to preview the documentation locally, you may do so by running:\n```{.bash .copy}\n./scripts/docs-live.sh\n```\nThe build will take some time due to the `Source` section being built. You may disable this by temporarily commenting these lines\n```\n  - api-autonav:\n      modules: ['pwndbg']\n      nav_section_title: \"Source\"\n```\nin the `mkdocs.yml` file. This will provide much faster build times (but make sure not to commit those changes!). Visit `http://127.0.0.1:8000/pwndbg/` to see the docs. Note that the `Home` section will not be available (it is generated in the CI by copying the README.md), and the site will lack the version selector.\n\n[^1]: Actually, the `./docs/configuration/index.md` file is hand-written, and the intro text to the `./docs/functions/index.md` file is defined in the doc generating file's source code.\n", "timestamp": "2025-10-24T11:39:45.411498"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/contributing/making-a-gif.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/contributing/making-a-gif.md", "content": "# Making a Pwndbg gif\n\n## The rundown\n\nIf you wish to make a gif of your terminal while using Pwndbg (usually to add an example of some command/workflow to the website) you should use [charmbracelet/vhs](https://github.com/charmbracelet/vhs). This ensures a consistent look to the gifs throughout the documentation, makes them easily updateable when UI changes are made, and just makes them more easily reproducable and modifiable in general.\n\n!!! note\n    Here \"gif\" really means \"a video that loops\", in practice it is better to use `.webm` with `.mp4` as a fallback because they are better optimized file formats.\n\nThe workflow to creating a gif is simple. Start a recording:\n```{.bash .copy}\nvhs record > my_thingy.tape\n```\nWhatever you now do in the terminal will be \"recorded\" to the `my_thingy.tape` file. Exit the shell to save the recording. The tape probably isn't ready to use as-is. You will want to add some metadata and fixup some lines.\n??? example\n\n    This is the tape used to generate the gif at https://pwndbg.re/pwndbg/dev/commands/context/context/ :\n    ```bash\n    # https://github.com/charmbracelet/vhs\n\n    Output pwndbg.mp4\n    Output pwndbg.webm\n\n    Set FontSize 24\n    Set Width 1920\n    Set Height 1080\n    Set TypingSpeed 100ms\n\n    Sleep 1s\n    Type \"pwndbg /bin/sh\"\n    Enter\n    Sleep 2s\n    Type \"start\"\n    Enter\n    Sleep 3s\n    Type \"stepsyscall\"\n    Sleep 3s\n    Enter 1\n    Sleep 3s\n    Type \"up\"\n    Sleep 1s\n    Enter 1\n    Sleep 1s\n    Type \"up\"\n    Sleep 1s\n    Enter 1\n    Sleep 1s\n    Type \"up\"\n    Sleep 1s\n    Enter 1\n    Sleep 1s\n    Type \"context\"\n    Sleep 4s\n    Enter 1\n    Sleep 7s\n    Type \"down\"\n    Sleep 1s\n    Enter 1\n    Sleep 1s\n    Type \"ctx\"\n    Sleep 4s\n    Enter 1\n    Sleep 7s\n    ```\n\nYou may now run\n```{.bash .copy}\nvhs my_thingy.tape\n```\nand it will generate a gif with the filename you specified in the tape (the `Output` line in the example).\n\nMake sure to commit the `.tape` file along with the gif.\n\n## Recording in Docker\n\nIf the setup for the gif is not highly involved, you may want to use a Dockerfile to generate the gif to ensure reproducability (or if wish to make sure your environment variables aren't visible during the debugging session). Here is a sample Dockerfile you can modify to your liking:\n```{.Dockerfile .copy}\n# https://github.com/charmbracelet/vhs\nFROM ghcr.io/charmbracelet/vhs\n\n# Install Pwndbg\nRUN apt update && apt install -y git \\\n    && git clone https://github.com/pwndbg/pwndbg.git /pwndbg \\\n    && cd /pwndbg \\\n    && ./setup.sh\n\n# Create a pwndbg executable in PATH so we can run with\n# `pwndbg /bin/sh`.\nRUN echo '#!/bin/sh\\ngdb --quiet \"$@\"' > /usr/local/bin/pwndbg \\\n    && chmod +x /usr/local/bin/pwndbg\n\n# Make sure uv.lock.hash is created so we don't get\n# a message about updating during the gif.\nRUN gdb /bin/sh --batch\n\n# The ENTRYPOINT and CMD are defined in the vhs docker image.\n```\nyou can use a script like this to run it easily.\n```{.bash .copy}\n#!/bin/sh\n\nset -e\n\nIMAGE_NAME=\"vhs-pwndbg\"\n\nrm -f .gdb_history\ndocker build -t \"$IMAGE_NAME\" .\ndocker run --rm -v \"$(pwd)\":/vhs \"$IMAGE_NAME\" my_thingy.tape\n```\n", "timestamp": "2025-10-24T11:39:45.508521"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/contributing/setup-pwndbg-dev.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/contributing/setup-pwndbg-dev.md", "content": "# Setup Pwndbg for Development\n\n## Installing Pwndbg from source\n\nRun the following:\n```{.bash .copy}\ngit clone https://github.com/pwndbg/pwndbg\ncd pwndbg\n./setup.sh\n```\nOfficially supported is Ubuntu 22.04 and later, but the setup script also supports the following distributions:\n\n* Debian-based OSes (via apt-get)\n* Fedora and Red Hat (via dnf)\n* Clear (via swiped)\n* OpenSUSE LEAP (via zypper)\n* Arch and Manjaro (via community AUR packages)\n* Void (via xbps)\n* Gentoo (via emerge)\n\n!!! tip\n    If you have an older ubuntu version you may still use Pwndbg:\n\n    - for Ubuntu 20.04 use the [2024.08.29 release](https://github.com/pwndbg/pwndbg/releases/tag/2024.08.29)\n    - for Ubuntu 18.04 use the [2023.07.17: ubuntu18.04-final release](https://github.com/pwndbg/pwndbg/releases/tag/2023.07.17)\n\n    however if you wish to contribute, it is recommended you upgrade your distribution.\n\n### Running with GDB\nPwndbg requires GDB 12.1 or later. If the GDB version your distro provides is too old, [build GDB from source](https://sourceware.org/gdb/wiki/BuildingNatively):\n```{.bash .copy}\nsudo apt install libgmp-dev libmpfr-dev libreadline-dev texinfo  # required by build\ngit clone git://sourceware.org/git/binutils-gdb.git\nmkdir gdb-build\ncd gdb-build\n../binutils-gdb/configure --enable-option-checking --disable-nls --disable-werror --with-system-readline --with-python=$(which python3) --with-system-gdbinit=/etc/gdb/gdbinit --enable-targets=all --disable-binutils --disable-ld --disable-gold --disable-gas --disable-sim --disable-gprof\nmake -j $(nproc)\n```\nSince the `./setup.sh` script made it so you source Pwndbg from your `~/.gdbinit`, Pwndbg will start up automatically any time you run `gdb`.\n\n### Running with LLDB\nPwndbg requires LLDB 19 or later. You can get it like this on Ubuntu 24.04:\n```{.bash .copy}\nsudo apt install -y lldb-19 liblldb-19-dev\n```\nbut it will be added to your PATH as `lldb-19` so you should either alias it or export it in your shell:\n```{.bash .copy}\nexport PATH=/usr/lib/llvm-19/bin/:$PATH\n```\nso you can invoke it as `lldb`. Also export this environment variable:\n```{.bash .copy}\nexport LLDB_DEBUGSERVER_PATH=/usr/lib/llvm-19/bin/lldb-server\n```\nPwndbg doesn't use the `lldb` driver binary directly, it drives its own REPL and interacts with LLDB through liblldb.\nYou can run Pwndbg with LLDB by running:\n```{.bash .copy}\nuv run pwndbg-lldb [binary-to-debug]\n```\n\n## The development environment\n\nAfter installing Pwndbg like described above, there are a few ways to set up the development environment. The simplest one is by running:\n```{.bash .copy}\n./setup-dev.sh\n```\nbut you can also use the [docker container](#development-from-docker) or [develop using nix](#development-using-nix).\n\n!!! note\n    For a proper development environment you must be able to run Pwndbg with both GDB and LLDB, otherwise you won't be able to use some important development features (like doc generation).\n\n### Development from docker\nYou can create a Docker image with everything already installed for you. You can use docker compose\n```{.bash .copy}\ndocker compose run -i main\n```\nor build and run the container with\n```{.bash .copy}\ndocker build -t pwndbg .\ndocker run -it --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -v `pwd`:/pwndbg pwndbg bash\n```\n\n### Development using Nix\nPwndbg supports development with Nix which installs all the required\ndevelopment dependencies:\n\n1. Install Nix with [Determinate Nix Installer](https://github.com/DeterminateSystems/nix-installer?tab=readme-ov-file#determinate-nix-installer).\n2. Enter the development shell with `nix develop` or automate this with `direnv`.\n3. Run local changes with `pwndbg` or `pwndbg-lldb`. Run tests with `./tests.sh`.\n", "timestamp": "2025-10-24T11:39:45.579466"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/contributing/writing-tests.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/contributing/writing-tests.md", "content": "# Writing Tests\n\n## Overview\n\n!!! note\n    This is written under the assumption you already know how to [run the tests](../contributing/index.md#running-tests).\n\nIn Pwndbg we have four types of tests: extensive x86_64 GDB tests, cross-architecture tests, linux kernel tests\nand unit-tests. They are all located in subdirectories of [`./tests`](https://github.com/pwndbg/pwndbg/tree/dev/tests).\n\nThe x86_64 tests encompass most of the Pwndbg testing suite. If your tests do not belong in any of the other\ncategories, they should go here. Since we do not yet perform testing on LLDB, these are run from inside GDB\nand are located in the [`./tests/library/gdb`](https://github.com/pwndbg/pwndbg/tree/dev/tests/library/gdb/)\ndirectory. They can be run with `./tests.sh -d gdb -g gdb`.\n\nThe cross-architecture tests are run using qemu-user emulation. They test architecture-specific logic and\nare located in the [`./tests/library/qemu-user`](https://github.com/pwndbg/pwndbg/tree/dev/tests/library/qemu-user)\ndirectory. They can be run with `./tests.sh -d gdb -g cross-arch-user`.\n\nThe linux kernel tests are run using qemu-system emulation. They are located in the\n[`./tests/library/qemu_system`](https://github.com/pwndbg/pwndbg/tree/dev/tests/library/qemu-system)\ndirectory and run for a variety kernel configurations and architectures.\n\nThe unit tests are not run from within a debugger, but rather directly with pytest. They are located\nin the [`./tests/unit_tests/`](https://github.com/pwndbg/pwndbg/tree/dev/tests/unit-tests)\ndirectory.\n\nHere are the options supported by `./tests.sh` which you can get by running `./tests.sh -h`.\n```\nusage: tests.py [-h] -g {gdb,dbg,cross-arch-user} -d {gdb} [-p] [-c] [-v] [-s] [--nix] [--collect-only] [test_name_filter]\n\nRun tests.\n\npositional arguments:\n  test_name_filter      run only tests that match the regex\n\noptions:\n  -h, --help            show this help message and exit\n  -g {gdb,dbg,cross-arch-user}, --group {gdb,dbg,cross-arch-user}\n  -d {gdb}, --driver {gdb}\n  -p, --pdb             enable pdb (Python debugger) post mortem debugger on failed tests\n  -c, --cov             enable codecov\n  -v, --verbose         display all test output instead of just failing test output\n  -s, --serial          run tests one at a time instead of in parallel\n  --nix                 run tests using built for nix environment\n  --collect-only        only show the output of test collection, don't run any tests\n```\n## Writing tests\n\nEach test is a Python function that runs inside of an isolated GDB session.\nUsing a [`pytest`](https://docs.pytest.org/en/latest/) fixture at the beginning of each test,\nGDB will attach to a [`binary`](https://github.com/pwndbg/pwndbg/tree/dev/tests/library/gdb/conftest.py)\nor connect to a [`QEMU instance`](https://github.com/pwndbg/pwndbg/tree/dev/tests/library/qemu-user/conftest.py).\nEach test runs some commands and uses Python `assert` statements to verify correctness. We can access Pwndbg\nlibrary code like `pwndbg.aglib.regs.rsp` as well as execute GDB commands with `gdb.execute()`.\n\nWe can take a look at [`tests/library/gdb/tests/test_symbol.py`](https://github.com/pwndbg/pwndbg/tree/dev/tests/library/gdb/tests/test_symbol.py)\nfor an example of a simple test. Looking at a simplified version of the top-level code, we have this:\n\n```python\nimport gdb\nimport pwndbg\nimport tests\n\nBINARY = tests.get_binary(\"symbol_1600_and_752.out\")\n```\n\nSince these tests run inside GDB, we can import the `gdb` Python library. We also import the `tests` module,\nwhich makes it easy to get the path to the test binaries located in [`tests/gdb-tests/tests/binaries`](https://github.com/pwndbg/pwndbg/tree/dev/tests/gdb-tests/tests/binaries).\nYou should be able to reuse the binaries in this folder for most tests, but if not feel free to add a new one.\n\nHere's a small snippet of the actual test:\n\n```python\ndef test_hexdump(start_binary):\n    start_binary(BINARY)\n    pwndbg.config.hexdump_group_width.value = -1\n\n    gdb.execute(\"set hexdump-byte-separator\")\n    stack_addr = pwndbg.aglib.regs.rsp - 0x100\n```\n\n`pytest` will run any function that starts with `test_` as a new test, so there is no need to register your new\ntest anywhere. The `start_binary` argument is a function that will run the binary you give it, and it will set\nsome common options before starting the binary. Using `start_binary` is recommended if you don't need any\nadditional customization to GDB settings before starting the binary, but if you do it's fine to not use it.\n\n## QEMU Tests\n\nOur `gdb` tests run in x86. To debug other architectures, we use QEMU for emulation and attach to its debug\nport. These tests are located in\n[`tests/library/qemu-user/tests`](https://github.com/pwndbg/pwndbg/tree/dev/tests/library/qemu-user/tests).\nTest creation is identical to our x86 tests - create a Python function with a Pytest fixture name as\nthe parameter (it matches based on the name), and call the argument to start debugging a binary. The\n`qemu_assembly_run` fixture takes in a Python string of assembly code, compiles it in the\nappropriate architecture, and runs it - no need to create an external file or edit a Makefile.\n", "timestamp": "2025-10-24T11:39:45.677213"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/features.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/features.md", "content": "---\nhide:\n  - navigation\n---\n\n<!--\n  This document should give an overview of some of the most interesting\n  features Pwndbg has to offer. Use a lot of screenshots and recordings.\n  Don't go too much in-depth - it is better to write a tutorial in another\n  page of the docs and simply link to it.\n-->\n\n# Features\n\nPwndbg has a great deal of useful features. You can a see all available commands at any time by typing the `pwndbg` command or by checking the [Commands section](commands/index.md) of the documentation. For configuration and theming see the [Configuration section](configuration/index.md). Below is a subset of commands which are easy to capture in screenshots.\n\n## Disassembly and Emulation\n\nPwndbg leverages the [capstone](https://github.com/capstone-engine/capstone) and [unicorn](https://github.com/unicorn-engine/unicorn) engines, along with its own instrospection, to display, annotate and emulate instructions.\n\nOperands of instructions are resolved, conditions evaluated, and only the instructions that will actually be executed are shown.\n\n![](assets/caps/disasm_example.png)\n\nThis is incredibly useful when stepping through jump tables, PLT entries, and ROPping.\n\n![](assets/caps/emulation_rop.png)\n\n## Context\n\nA useful summary of the current execution context is printed every time the debugger stops (e.g. breakpoint or single-step), displaying all registers, the stack, call frames, disassembly, and additionally recursively dereferencing all pointers.  All memory addresses are color-coded to the type of memory they represent.\n\n![](assets/caps/context.png)\n\nA history of previous context output is kept which can be accessed using the `contextprev` and `contextnext` commands.\n\n### Arguments\n\nAll function call sites are annotated with the arguments to those functions.  This works best with debugging symbols, but also works in the most common case where an imported function (e.g. libc function via GOT or PLT) is used.\n\n![](assets/caps/arguments_getenv.png)\n![](assets/caps/arguments_memcpy.png)\n![](assets/caps/arguments_sigsetjmp.png)\n![](assets/caps/arguments_strcpy.png)\n![](assets/caps/arguments_syscall.png)\n![](assets/caps/arguments_xtraceinit.png)\n\n### Splitting / Layouting Context\n\nThe context sections can be distributed among different tty by using the `contextoutput` command. Thus, if you want to make better use of some of the empty space in the default Pwndbg output, you can split the panes in your terminal and redirect the various contexts among them.\n\n![](assets/caps/context_splitting.png)\n\nSee [Splitting the Context](tutorials/splitting-the-context.md) for more information.\n\n### GDB TUI\nThe context sections are available as native [GDB TUI](https://sourceware.org/gdb/current/onlinedocs/gdb.html/TUI.html) windows named `pwndbg_[sectionname]`. There are some predefined layouts coming with Pwndbg which you can select using `layout pwndbg` or `layout pwndbg_code`.\n\n![](assets/caps/context_tui.png)\n\nSee [GDB TUI](tutorials/gdb-tui.md) for more information.\n\n### Watch Expressions\n\nYou can add expressions to be watched by the context. Those expressions are evaluated and shown on every context refresh. For instance by doing `contextwatch execute \"info args\"` we can see the arguments of every function we are in (here we are in `mmap`):\n\n![](assets/caps/cwatch_infoargs.png)\n\nSee [`contextwatch`](commands/context/contextwatch.md) for more information.\n\n## Integrations\n\n### Ghidra\n\nWith the help of [radare2](https://github.com/radareorg/radare2) or [rizin](https://github.com/rizinorg/rizin) it is possible to show the decompiled source code of the ghidra decompiler.\n\nSee [Ghidra Integration](tutorials/decompiler-integration/ghidra-integration.md) for more information.\n\n### IDA Pro/Binary Ninja\n\nPwndbg is capable of integrating with IDA Pro or Binary Ninja by installing an XMLRPC server in the decompiler as a plugin, and then querying it for information.\n\nThis allows extraction of comments, decompiled lines of source, breakpoints, symbols, and synchronized debugging (single-steps update the cursor in the decompiler).\n\n![](assets/caps/ida_context.png){ style=\"width: 70%;\" }\n\nSee [Binary Ninja Integration](tutorials/decompiler-integration/binja-integration.md) or [IDA Integration](tutorials/decompiler-integration/ida-integration.md) for setup information.\n\n## Heap Inspection\n\nPwndbg provides commands for inspecting the heap and the allocator's state. Currently supported are:\n\n+ [glibc malloc](commands/index.md#glibc-ptmalloc2-heap)\n+ [jemalloc](commands/index.md#jemalloc-heap)\n+ [linux's buddy allocator](commands/kernel/buddydump.md)\n+ [linux's SLUB allocator](commands/kernel/slab.md)\n\nSee *some* of the commands for glibc malloc:\n![](assets/caps/heap_vis.png){ style=\"width: 70%;\" }\n![](assets/caps/heap_hi_bins.png){ style=\"width: 70%;\" }\n![](assets/caps/heap_try_free.png)\n![](assets/caps/heap_find_fake_fast.png){ style=\"width: 70%;\" }\n\n## LLDB\n\nWhile most other GDB plugins are well *GDB plugins*, Pwndbg's implementation is debugger-agnostic. You can use Pwndbg with LLDB!\n\n![](assets/caps/lldb.png){ style=\"width: 70%;\" }\n\n## WinDbg Compatibility\n\nFor those coming from a Windows background, Pwndbg has a complete WinDbg compatibility layer.  You can `dd`, `dps`, `eq`, and even `eb $rip 90` to your heart's content.\n\n![](assets/caps/windbg.png){ style=\"width: 70%;\" }\n\n## Go Debugging\n\nPwndbg has support for dumping complex Go values like maps and slices, including automatically parsing out type layouts in certain cases.\n\nSee the [Go debugging guide](tutorials/go-debugging.md) for more information.\n\n## So many commands\n\nGo take a look at [Commands](commands/index.md)! Here is some cool stuff you can do to get you started.\n\n### Process State Inspection\n\nUse the [`procinfo`](commands/process/procinfo.md) command in order to inspect the current process state, like UID, GID, Groups, SELinux context, and open file descriptors! Pwndbg works particularly well with remote GDB debugging like with Android phones.\n\n![](assets/caps/procinfo.png){ style=\"width: 50%;\" }\n![](assets/caps/procinfo_curl.png){ style=\"width: 50%;\" }\n\n### ROP Gadgets\n\nTools for finding rop gadgets statically don't know about everything that will be loaded into the address space and they can make mistakes about which addresses will actually end up executable. You can now rop at runtime with Pwndbg's [`rop`](commands/integrations/rop.md) and [`ropper`](commands/integrations/ropper.md).\n\n![](assets/caps/rop_grep.png){ style=\"width: 70%;\" }\n\n### Search\n\nPwndbg makes [`search`](commands/memory/search.md)ing the target memory space easy, with a complete and easy-to-use interface.  Whether you're searching for bytes, strings, or various sizes of integer values or pointers, it's a simple command away.\n\n![](assets/caps/search.png)\n\n### Finding Leaks\nFinding leak chains can be done using the [`leakfind`](commands/memory/leakfind.md) and [`probeleak`](commands/memory/probeleak.md) commands. They recursively inspect address ranges for pointers, and report on all pointers found.\n\n![](assets/caps/leakfind.png)\n![](assets/caps/probeleak.png)\n\n### Telescope\nInspecting memory dumps is easy with the [`telescope`](commands/memory/telescope.md) command.  It recursively dereferences a range of memory, letting you see everything at once.  As an added bonus, Pwndbg checks all of the available registers to see if they point into the memory range.\n\n![](assets/caps/telescope.png){ style=\"width: 70%;\" }\n\n### Virtual Memory Maps\nPwndbg enhances the standard memory map listing and allows easy searching with [`vmmap`](commands/memory/vmmap.md).\n\n![](assets/caps/vmmap.png){ style=\"width: 70%;\" }\n![](assets/caps/vmmap_rip.png){ style=\"width: 70%;\" }\n\n### Tracking glibc heap allocations\nIt can be very useful to see allocations happening in real time. It can give us a good idea of what the allocation pattern of a program looks like, and allows us to make informed decisions on how to optimize or attack it. The [`track-heap`](commands/linux_libc_elf/track-heap.md) command does just that.\n\n<video style=\"width: 80%;\" autoplay loop muted playsinline alt=\"track-heap example\">\n  <source src=\"../assets/videos/track-heap.webm\" type=\"video/webm\">\n  <source src=\"../assets/videos/track-heap.mp4\" type=\"video/mp4\">\n</video>\n\n### Tracking the GOT\nThe Procedure Linkage Table (PLT) and Global Offset Table (GOT) are very interesting exploitation targets since they contain many often-accessed function pointers. You can track how your program goes through the GOT using the [`track-got`](commands/linux_libc_elf/track-got.md) command.\n\n<video autoplay loop muted playsinline alt=\"track-got example\">\n  <source src=\"../assets/videos/track-got.webm\" type=\"video/webm\">\n  <source src=\"../assets/videos/track-got.mp4\" type=\"video/mp4\">\n</video>\n\n### Attach to a process by name\nThe days of running pidof in a different terminal are over. Use [`attachp`](commands/start/attachp.md) to attach to any process by name, pid, arguments or device file!\n\n![](assets/caps/attachp.png){ style=\"width: 70%;\" }\n", "timestamp": "2025-10-24T11:39:45.749715"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/functions/index.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/functions/index.md", "content": "---\nhide:\n  - navigation\n---\n<!-- THIS WHOLE FILE IS AUTOGENERATED. DO NOT MODIFY IT. See scripts/generate-docs.sh -->\n\n\n\n\n# Functions\n\n\nPwndbg provides a set of functions which can be used during expression evaluation to\nquickly perform common calculations. These can even be passed to other commands as arguments.\nCurrently, they **only work in gdb**.\n\nTo see a list of all functions, including those built into GDB, use `help function`. To see\nthe help of any given function use `help function function_name`. Function invocation must\ninclude a preceding $ sign and must include brackets. For instance, invoke the `environ`\nfunction like so:\n```\npwndbg> p $environ(\"LANG\")\n$2 = (signed char *) 0x7fffffffe6da \"LANG=en_US.UTF-8\"\n```\nIf the result of the function is being passed to a Pwndbg command, make sure to either escape\nthe function argument's quotes, or put the whole function call in quotes.\n```\npwndbg> tele $environ(\"LANG\")\nusage: telescope [-h] [-r] [-f] [-i] [address] [count]\ntelescope: error: argument address: debugger couldn't resolve argument '$environ(LANG)':\n    No symbol \"LANG\" in current context.\npwndbg> tele $environ(\\\"LANG\\\")\n00:0000│  0x7fffffffe6cf ◂— 'LANG=en_US.UTF-8'\n01:0008│  0x7fffffffe6d7 ◂— 'US.UTF-8'\n02:0010│  0x7fffffffe6df ◂— 0x4e49475542454400\n[...]\npwndbg> tele '$environ(\"LANG\")'\n00:0000│  0x7fffffffe6cf ◂— 'LANG=en_US.UTF-8'\n01:0008│  0x7fffffffe6d7 ◂— 'US.UTF-8'\n02:0010│  0x7fffffffe6df ◂— 0x4e49475542454400\n[...]\n```\n## Pwndbg functions\n\n### **argc**\n\n\n``` {.python .no-copy}\nargc() -> int\n```\n\n\nGet the number of program arguments.\nEvaluates to argc.\n\n#### Example\n```\npwndbg> p $argc()\n$1 = 2\npwndbg> argv\n00:0000│  0x7fffffffe288 —▸ 0x7fffffffe659 ◂— '/usr/bin/cat'\n01:0008│  0x7fffffffe290 —▸ 0x7fffffffe666 ◂— 'gdbinit.py'\n02:0010│  0x7fffffffe298 ◂— 0\n```\n\n----------\n\n### **argv**\n\n\n``` {.python .no-copy}\nargv(index: gdb.Value) -> gdb.Value\n```\n\n\nGet the n-th program argument.\nEvaluate argv on the supplied value.\n\n#### Example\n```\npwndbg> p $argv(0)\n$11 = (signed char *) 0x7fffffffe666 \"/usr/bin/sh\"\npwndbg> argv\n00:0000│  0x7fffffffe2a8 —▸ 0x7fffffffe666 ◂— '/usr/bin/sh'\n01:0008│  0x7fffffffe2b0 ◂— 0\n```\n\n----------\n\n### **base**\n\n\n``` {.python .no-copy}\nbase(name_pattern: gdb.Value | str)\n```\n\n\nReturn the base address of the first memory mapping containing the given name.\n\n#### Example\n```\npwndbg> p/x $base(\"libc\")\n$4 = 0x7ffff7d4b000\npwndbg> vmmap libc\n    0x7ffff7d4a000     0x7ffff7d4b000 rw-p     1000  6e000 /usr/lib/libncursesw.so.6.5\n►   0x7ffff7d4b000     0x7ffff7d6f000 r--p    24000      0 /usr/lib/libc.so.6\n►   0x7ffff7d6f000     0x7ffff7ed6000 r-xp   167000  24000 /usr/lib/libc.so.6\n►   0x7ffff7ed6000     0x7ffff7f2b000 r--p    55000 18b000 /usr/lib/libc.so.6\n►   0x7ffff7f2b000     0x7ffff7f2f000 r--p     4000 1e0000 /usr/lib/libc.so.6\n►   0x7ffff7f2f000     0x7ffff7f31000 rw-p     2000 1e4000 /usr/lib/libc.so.6\n    0x7ffff7f31000     0x7ffff7f39000 rw-p     8000      0 [anon_7ffff7f31]\npwndbg> tele $base(\\\"libc\\\")+0x1337\n00:0000│  0x7ffff7d4c337 ◂— 0x80480a04214000f0\n01:0008│  0x7ffff7d4c33f ◂— 0x8040c02204452040\n02:0010│  0x7ffff7d4c347 ◂— 0x20042400000200\n03:0018│  0x7ffff7d4c34f ◂— 0x20 /* ' ' */\n[...]\n```\n\nBeware of accidentally matching the wrong mapping. For instance, if the loaded\nexecutable contained the string \"libc\" anywhere in it's path, it would've been\nreturned.\n\n----------\n\n### **bn_eval**\n\n\n``` {.python .no-copy}\nbn_eval(expr: gdb.Value) -> int | None\n```\n\n\nParse and evaluate a Binary Ninja expression.\n\nRead more about binary ninja expressions here:\nhttps://api.binary.ninja/binaryninja.binaryview-module.html#binaryninja.binaryview.BinaryView.parse_expression\n\nAll registers in the current register set are available as magic variables (e.g. $rip).\nThe $piebase magic variable is also included, with the computed executable base.\n\nThis function cannot see stack local variables.\n\n#### Example\n```\npwndbg> set integration-provider binja\nPwndbg successfully connected to Binary Ninja (4.2.6455 Personal) xmlrpc: http://127.0.0.1:31337\nSet which provider to use for integration features to 'binja'.\npwndbg> p/x $bn_eval(\"10+20\")\n$6 = 0x30\npwndbg> p/x $bn_eval(\"main\")\n$7 = 0x1645\npwndbg> p/x $rebase($bn_eval(\"main\"))\n$8 = 0x555555555645\npwndbg> p some_global_var\nNo symbol \"some_global_var\" in current context.\npwndbg> p/x $rebase($bn_eval(\"some_global_var+$rax\"))\n$9 = 0x5555555586b8\npwndbg> p $rebase($bn_eval(\"some_global_var+$rax\")) == $bn_sym(\"some_global_var\") + $rax\n$10 = 1\npwndbg> p $bn_eval(\"$piebase+some_global_var+$rax\") == $bn_sym(\"some_global_var\") + $rax\n$11 = 1\n```\n\n----------\n\n### **bn_sym**\n\n\n``` {.python .no-copy}\nbn_sym(name_val: gdb.Value) -> int | None\n```\n\n\nLookup a symbol's address by name from Binary Ninja.\n\nThis function sees symbols like functions and global variables,\nbut not stack local variables, use `bn_var` for that.\n\n#### Example\n```\npwndbg> set integration-provider binja\nPwndbg successfully connected to Binary Ninja (4.2.6455 Personal) xmlrpc: http://127.0.0.1:31337\nSet which provider to use for integration features to 'binja'.\npwndbg> p main\nNo symbol \"main\" in current context.\npwndbg> p/x $bn_sym(\"main\")\n$2 = 0x555555555645\npwndbg> b *($bn_sym(\"main\"))\nBreakpoint 1 at 0x555555555645\n```\n\n----------\n\n### **bn_var**\n\n\n``` {.python .no-copy}\nbn_var(name_val: gdb.Value) -> int | None\n```\n\n\nLookup a stack variable's address by name from Binary Ninja.\n\nThis function doesn't see functions or global variables,\nuse `bn_sym` for that.\n\n#### Example\n```\npwndbg> set integration-provider binja\nPwndbg successfully connected to Binary Ninja (4.2.6455 Personal) xmlrpc: http://127.0.0.1:31337\nSet which provider to use for integration features to 'binja'.\npwndbg> p user_choice\nNo symbol \"user_choice\" in current context.\npwndbg> p/x $bn_var(\"user_choice\")\n$4 = 0x7fffffffe118\npwndbg> vmmap $4\n    0x7ffff7ffe000     0x7ffff7fff000 rw-p     1000      0 [anon_7ffff7ffe]\n►   0x7ffffffde000     0x7ffffffff000 rw-p    21000      0 [stack] +0x20118\npwndbg> p/x $bn_var(\"main\")\nTypeError: Could not convert Python object: None.\nError while executing Python code.\n```\n\n----------\n\n### **environ**\n\n\n``` {.python .no-copy}\nenviron(env_name: gdb.Value) -> gdb.Value\n```\n\n\nGet an environment variable by name.\nEvaluate getenv() on the supplied value.\n\n#### Example\n```\npwndbg> p $environ(\"LANG\")\n$2 = (signed char *) 0x7fffffffebfb \"LANG=en_US.UTF-8\"\n```\n\n----------\n\n### **envp**\n\n\n``` {.python .no-copy}\nenvp(index: gdb.Value) -> gdb.Value\n```\n\n\nGet the n-th environment variable.\nEvaluate envp on the supplied value.\n\n#### Example\n```\npwndbg> p $envp(0x3F)\n$13 = (signed char *) 0x7fffffffef7d \"LANG=en_US.UTF-8\"\npwndbg> p $envp(0x3F) == $environ(\"LANG\")\n$14 = 1\n```\n\n----------\n\n### **fsbase**\n\n\n``` {.python .no-copy}\nfsbase(offset: gdb.Value = gdb.Value(0)) -> int\n```\n\n\nGet the value of the FS segment register.\nOnly valid on x86(-64).\n\n#### Example\n```\npwndbg> p/x $fsbase()\n$3 = 0x7ffff7cdab80\npwndbg> p $fs_base == $fsbase()\n$4 = 1\npwndbg> x/gx $fsbase(0x28)\n0x7ffff7cdaba8:     0x4da926e1668e5a00\npwndbg> x/gx $fsbase(0x30)\n0x7ffff7cdabb0:     0x190a86d93bccf0ad\npwndbg> tls\nThread Local Storage (TLS) base: 0x7ffff7cdab80\nTLS is located at:\n    0x7ffff7cda000     0x7ffff7cdc000 rw-p     2000      0 [anon_7ffff7cda]\nDumping the address:\ntcbhead_t @ 0x7ffff7cdab80\n    0x00007ffff7cdab80 +0x0000 tcb                  : 0x7ffff7cdab80\n    0x00007ffff7cdab88 +0x0008 dtv                  : 0x7ffff7cdb4f0\n    0x00007ffff7cdab90 +0x0010 self                 : 0x7ffff7cdab80\n    0x00007ffff7cdab98 +0x0018 multiple_threads     : 0x0\n    0x00007ffff7cdab9c +0x001c gscope_flag          : 0x0\n    0x00007ffff7cdaba0 +0x0020 sysinfo              : 0x0\n    0x00007ffff7cdaba8 +0x0028 stack_guard          : 0x4da926e1668e5a00\n    0x00007ffff7cdabb0 +0x0030 pointer_guard        : 0x190a86d93bccf0ad\n    [...]\npwndbg> canary\n[...]\nCanary    = 0x4da926e1668e5a00 (may be incorrect on != glibc)\n[...]\n```\nFS will usually point to the start of the TLS. If you're not providing an\noffset, it is usually easier to use GDB's builtin $fs_base variable.\n\n----------\n\n### **gsbase**\n\n\n``` {.python .no-copy}\ngsbase(offset: gdb.Value = gdb.Value(0)) -> int\n```\n\n\nGet the value of the GS segment register.\nOnly valid on x86(-64).\n\n#### Example\n```\npwndbg> p/x $gsbase()\n$1 = 0x0\n```\nThe value of the GS register is more interesting when doing kernel debugging:\n```\npwndbg> p/x $gsbase()\n$1 = 0xffff999287a00000\npwndbg> tele $gsbase()\n00:0000│  0xffff999287a00000 ◂— 0\n... ↓     4 skipped\n05:0028│  0xffff999287a00028 ◂— 0xd6aa9b336d52a400\n06:0030│  0xffff999287a00030 ◂— 0\n07:0038│  0xffff999287a00038 ◂— 0\npwndbg> p $gsbase() == $gs_base\n$2 = 1\n```\nIf you're not providing an offset, it is usually easier to use GDB's\nbuiltin $gs_base variable.\n\n----------\n\n### **hex2ptr**\n\n\n``` {.python .no-copy}\nhex2ptr(hex_string: gdb.Value | str) -> int\n```\n\n\nConverts a hex string to a little-endian address and returns the address.\n\n#### Example\n```\npwndbg> p/x $hex2ptr(\"20 74 ed f7 ff 7f\")\n$1 = 0x7ffff7ed7420\npwndbg> p/x $hex2ptr(\"2074edf7ff7f\")\n$2 = 0x7ffff7ed7420\npwndbg> distance '$base(\"libc\")' '$hex2ptr(\"20 74 ed f7 ff 7f\")'\n0x7ffff7d4b000->0x7ffff7ed7420 is 0x18c420 bytes (0x31884 words)\n```\n\nEspecially useful for quickly converting pwntools output.\n\n----------\n\n### **ida**\n\n\n``` {.python .no-copy}\nida(name: gdb.Value) -> int\n```\n\n\nLookup a symbol's address by name from IDA.\nEvaluate ida.LocByName() on the supplied value.\n\nThis functions doesn't see stack local variables.\n\n#### Example\n```\npwndbg> set integration-provider ida\nPwndbg successfully connected to Ida Pro xmlrpc: http://127.0.0.1:31337\nSet which provider to use for integration features to 'ida'.\npwndbg> p main\nNo symbol \"main\" in current context.\npwndbg> p/x $ida(\"main\")\n$1 = 0x555555555645\npwndbg> b *$ida(\"main\")\nBreakpoint 2 at 0x555555555645\n```\n\n----------\n\n### **rebase**\n\n\n``` {.python .no-copy}\nrebase(addr: gdb.Value | int) -> int\n```\n\n\nReturn address rebased onto the executable's mappings.\n\n#### Example\n```\npwndbg> p/x $rebase(0xd9020)\n$1 = 0x55555562d020\npwndbg> vmmap\n0x555555554000     0x55555556f000 r--p    1b000      0 /usr/bin/bash\n0x55555556f000     0x55555562d000 r-xp    be000  1b000 /usr/bin/bash\n0x55555562d000     0x55555565e000 r--p    31000  d9000 /usr/bin/bash\n[...]\npwndbg> p $rebase(0xd9020) == 0x555555554000 + 0xd9020\n$2 = 1\npwndbg> tele $rebase(0xd9020)\n00:0000│  0x55555562d020 ◂— 0x204900636f6c6c61 /* 'alloc' */\n01:0008│  0x55555562d028 ◂— 'have no name!'\n02:0010│  0x55555562d030 ◂— 0x65720021656d616e /* 'name!' */\n03:0018│  0x55555562d038 ◂— 'adline stdin'\n[...]\n```\n\n----------", "timestamp": "2025-10-24T11:39:46.063456"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/setup.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/setup.md", "content": "---\nhide:\n  - navigation\n---\n\n# Setup\n\nThere are multiple ways to install Pwndbg, depending on whether you want to use it [with GDB](#installing-pwndbg-gdb), [with LLDB](#installing-pwndbg-lldb), use a [portable release](#download-the-portable-version), or install it [from source](#installing-from-source).\n\n## Installing pwndbg-gdb\nInstall via curl/sh (Linux/macOS)\n```{.bash .copy}\ncurl -qsL 'https://install.pwndbg.re' | sh -s -- -t pwndbg-gdb\n```\nInstall via Homebrew (macOS)\n```{.bash .copy}\nbrew install pwndbg/tap/pwndbg-gdb\n```\nInstall via the Nix package manager (Linux/macOS)\n```{.bash .copy}\nnix shell github:pwndbg/pwndbg\n```\n### Official Pwndbg packages\nWhen installing with GDB, you may also download a package to install through your package manager of choice. Download the package from the [releases page](https://github.com/pwndbg/pwndbg/releases) and pick the appropriate download from the second table.\n\nRPM-based Systems (CentOS/Alma/Rocky/RHEL):\n```{.bash .copy}\ndnf install ./pwndbg-2025.10.20.x86_64.rpm\n```\nDEB-based Systems (Debian/Ubuntu/Kali):\n```{.bash .copy}\napt install ./pwndbg_2025.10.20_amd64.deb\n```\nAlpine:\n```{.bash .copy}\napk add --allow-untrusted ./pwndbg_2025.10.20_x86_64.apk\n```\nArch Linux:\n```{.bash .copy}\npacman -U ./pwndbg-2025.10.20-1-x86_64.pkg.tar.zst\n```\n### Distro packages\nYou may want to install Pwndbg through your distribution's package manager. This installation method is **not officially supported** because we cannot control the versions of the python dependencies Pwndbg uses in this case. Please use any other installation method when reproducing bug reports (portable package is probably simplest in this case). If a bug reproduces with a distro package but not with any of the supported installation methods, please report it to the package maintainer; if the problem cannot be fixed, let us know and we will add it to a list of known issues below.\n\n=== \"Arch\"\n    ```{.bash .copy}\n    sudo pacman -S pwndbg\n    ```\n    You will also need to source Pwndbg from your `~/.gdbinit`. Add this line to the beginning of that file:\n    ```{.bash .copy}\n    source /usr/share/pwndbg/gdbinit.py\n    ```\n    Pwndbg will be started every time you invoke `gdb` now.\n\n=== \"Gentoo\"\n    ```{.bash .copy}\n    sudo emerge --ask dev-debug/pwndbg\n    ```\n\n----\n\n## Installing pwndbg-lldb\nThese installation methods provide the\n```{.bash .copy}\npwndbg-lldb ./your-binary\n```\ncommand.\n\nInstall via curl/sh (Linux/macOS)\n```{.bash .copy}\ncurl -qsL 'https://install.pwndbg.re' | sh -s -- -t pwndbg-lldb\n```\nInstall via Homebrew (macOS)\n```{.bash .copy}\nbrew install pwndbg/tap/pwndbg-lldb\n```\nInstall via the Nix package manager (Linux/macOS):\n```{.bash .copy}\nnix shell github:pwndbg/pwndbg#pwndbg-lldb\n```\n\n## Download the Portable Version\nYou can download a portable release on the [Pwndbg releases page](https://github.com/pwndbg/pwndbg/releases). There are seperate releases for GDB and LLDB. Use the first table to pick the appropriate download for your system architecture. You can then unpack the archive with:\n```{.bash .copy}\ntar -v -xf <archive-name>\n```\nAnd run Pwndbg with\n```bash\n./pwndbg/bin/pwndbg\n```\nor\n```\n./pwndbg/bin/pwndbg-lldb\n```\ndepending on which version you installed. You may add the appropriate file to your shell's PATH.\n\n### Removing Quarantine Flags (macOS)\n\nWhen first setting up the portable version of Pwndbg in macOS, Gatekeeper will normally try to prevent\nany code in the extracted files from running until the user explicitly allows each file to be run.\nAs we ship many files which would require this, the process of manually granting permission for each\none to be run can get quite tiresome.\n\nIn order to do this to all files at once, you may choose to run the following command, which removes\nthe quarantine flag from all extracted files at once:\n\n```{.bash .copy}\nxattr -rd com.apple.quarantine pwndbg\n```\n\nAssuming that the files were extracted to a folder called `pwndbg`.\n\n## Installing from source\nSee [contributing/Installing Pwndbg from source](contributing/setup-pwndbg-dev.md#installing-pwndbg-from-source), you do not need the \"The development environment\" section.\n", "timestamp": "2025-10-24T11:39:46.469426"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/tutorials/decompiler-integration/binja-integration.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/tutorials/decompiler-integration/binja-integration.md", "content": "# Binary Ninja\n## Requirements\nYou need at least the personal edition of Binary Ninja (only tested on version 4.0+) that runs at least Python 3.10 for plugins.\n\n## Setup\nCopy (or symlink) [`binja_script.py`](https://raw.githubusercontent.com/pwndbg/pwndbg/refs/heads/dev/binja_script.py) to your [plugins directory](https://docs.binary.ninja/guide/plugins.html).\n\n## Usage\nTo start the Binary Ninja integration, open the binary you want to debug in Binary Ninja, then go to `Plugins > pwndbg > Start integration on current view`. This will start the XMLRPC server that Pwndbg queries for information.\n\nThen, inside GDB, run `set integration-provider binja`, which will start the integration. You can run `set integration-provider none` to disable it again.\n\n## Features\nThe integration currently syncs symbol names, comments, decompilation, function type signatures, and stack variables.\n\n## Commands\n- `bn-sync`: Navigate the Binary Ninja view to the current instruction\n- `decomp ADDR NLINES`: Displays the decompilation for `NLINES` lines at address `ADDR`.\n\n## Config Options\n- `bn-autosync`: If set to `yes`, every step will automatically run `bn-sync`\n- `bn-il-level`: Sets the IL level to use for decompilation. Valid values are: `disasm`, `llil`, `mlil`, `hlil`\n- `bn-rpc-host`/`bn-rpc-port`: The host and port to connect to for the XMLRPC server\n- `bn-timeout`: The amount, in seconds, to wait for the XMLRPC server to connect\n", "timestamp": "2025-10-24T11:39:47.195995"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/tutorials/decompiler-integration/ghidra-integration.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/tutorials/decompiler-integration/ghidra-integration.md", "content": "# Ghidra\n\nUnlike with IDA and Binary Ninja, Ghidra is not considered an \"integration provider\". You cannot synchronise your Ghidra reverse engineering progress to Pwndbg.\nYou can however integrate Ghidra's decompiler into Pwndbg such that the decompiled version of any function you're in is shown in the Pwndbg context.\n\n??? example \"Example Screenshot\"\n    ![](../../assets/caps/tutorials/ghidra_decomp.png)\n\nTo do this, we will need the help of [radare2](https://github.com/radareorg/radare2) or [rizin](https://github.com/rizinorg/rizin).\n\n## Setup\n\n=== \"rizin\"\n    1. Install [rizin](https://github.com/rizinorg/rizin). It must be found by the debugger (within path).\n    2. Install the Ghidra plugin for rizin: [rz-ghidra](https://github.com/rizinorg/rz-ghidra).\n    3. Install [rzpipe](https://pypi.org/project/rzpipe/) and make sure the python used by the debugger can access it.\n    4. Add `set r2decompiler rizin` to your `~/.gdbinit` after Pwndbg is sourced.\n\n    Regarding the third step, if you don't install to your user or system-wide python (but rather a virtual environment), you may add something like this to the beginning of your `~/.gdbinit`:\n    ```\n    python\n    import sys\n    import os\n    from glob import glob\n\n    venv = os.path.expanduser('~/tools/rizin/venv')\n    site_dir_pattern = os.path.join(venv, 'lib', 'python*/site-packages')\n    site_dirs = glob(site_dir_pattern)\n    sys.path.insert(0, site_dirs[0])\n    import rzpipe\n    end\n    ```\n=== \"radare2\"\n    1. Install [radare2](https://github.com/radareorg/radare2). It must be found by the debugger (within path).\n    2. Install the Ghidra plugin for radare2: [r2ghidra](https://github.com/radareorg/r2ghidra).\n    3. Install [r2pipe](https://pypi.org/project/r2pipe/) and make sure the python used by the debugger can access it.\n    4. Add `set r2decompiler radare2` to your `~/.gdbinit` after Pwndbg is sourced.\n\n    Regarding the third step, if you don't install to your user or system-wide python (but rather a virtual environment), you may add something like this to the beginning of your `~/.gdbinit`:\n    ```\n    python\n    import sys\n    import os\n    from glob import glob\n\n    venv = os.path.expanduser('~/tools/radare2/venv')\n    site_dir_pattern = os.path.join(venv, 'lib', 'python*/site-packages')\n    site_dirs = glob(site_dir_pattern)\n    sys.path.insert(0, site_dirs[0])\n    import r2pipe\n    end\n    ```\n\n## Usage\n\nAppend `set context-ghidra if-no-source` to your `~/.gdbinit`. You should be able to see the\n`[ GHIDRA DECOMPILE ]` context now right below your disassembly. If you want to temporarily enable/disable\nit or move around the context sections, see [context-ghidra](../../configuration/config.md#context-ghidra)\nand [contextoutput](../../commands/context/contextoutput.md).\n\nBe warned, the first call to both radare2/r2ghidra and rizin/rz-ghidra are rather slow!\nSubsequent requests for decompiled source will be faster. And it does take up some resources\nas the radare2/rizin instance is kept by r2pipe/rzpipe to enable faster subsequent analysis.\n\nRemark: the plugin tries to guess the correct current line and mark it with \"-->\", but it might\nget it wrong.\n", "timestamp": "2025-10-24T11:39:47.310011"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/tutorials/decompiler-integration/ida-integration.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/tutorials/decompiler-integration/ida-integration.md", "content": "# IDA\n\n## Usage\nOpen the same binary with Pwndbg and IDA. Then inside IDA go to `File > Script file` and select the `ida_script.py` file from the Pwndbg root folder. This will start the XMLRPC server that Pwndbg queries for information.\n\nInside the debugger, run `set integration-provider ida`. This will start the integration, you can run `set integration-provider none` to disable it.\n\n## Features\nThe integration will sync IDA's decompilation and show it in the context. You can query for symbols and stack variables using the [`ida`](../../functions/index.md#ida) function.\n\n## Debugger Control\nTo see an up-to-date list of things you can do regarding IDA integration, you may grep for `ida` like so:\n```\npwndbg> pwndbg ida\nfind-fake-fast                             Find candidate fake fast or tcache chunks overlapping the specified address.\nsave-ida                           Save the ida database.\npwndbg> config ida\nattachp-resolution-method          how to determine the process to attach when multiple candidates exists   'ask'\nida-rpc-host                       ida xmlrpc server address                                                '127.0.0.1'\nida-rpc-port                       ida xmlrpc server port                                                   31337\nida-timeout                        time to wait for ida xmlrpc in seconds                                   2\npwndbg> | help function | grep ida\nfunction ida -- Lookup a symbol's address by name from IDA.\n```\nNote that you will see some false positives.\n\nYou can use the [`decomp`](../../commands/integrations/decomp.md) command to use IDA to decompile at an arbitrary address.\n", "timestamp": "2025-10-24T11:39:47.395589"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/tutorials/env-vars.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/tutorials/env-vars.md", "content": "## Environment Variables\n\nPwndbg relies on several environment variables to customize its behavior. Below is a list of these variables and their purposes:\n\n- `PATH`: Standard system `PATH` variable used to locate executables.\n- `EDITOR`, `VISUAL`: Used by the `cymbol` command to open an editor.\n- `HOME`, `XDG_CACHE_HOME`: Used by `lib.tempfile` to determine temporary file locations.\n- `PWNDBG_VENV_PATH`: Specifies the virtual environment path for Pwndbg.\n- `NO_COLOR`: Disables colored output in Pwndbg.\n- `PWNDBG_LOGLEVEL`: Initial log level to use for log messages.\n- `OPENAI_API_KEY`, `ANTHROPIC_API_KEY`: Used by the `ai` command for accessing respective AI APIs.\n- `GITHUB_ACTIONS`, `RUN_FLAKY`: Used by `tests_commands.py` to determine the test environment.\n- `PWNDBG_PROFILE`: Enables profiling for benchmarking.\n- `USE_PDB`: Enables Python debugger in tests.\n- `PWNDBG_LAUNCH_TEST`: Used by tests to configure test launching.\n- `PWNDBG_ARCH`, `PWNDBG_KERNEL_TYPE`, `PWNDBG_KERNEL_VERSION`: Used by `gdblib` kernel tests to specify kernel parameters.\n- `SPHINX`: Used by `docs/source/conf.py`, likely to be removed.\n- `PWNLIB_NOTERM=1`: Set by Pwndbg to avoid terminal issues with Pwntools.\n", "timestamp": "2025-10-24T11:39:47.471363"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/tutorials/gdb-lldb-commands.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/tutorials/gdb-lldb-commands.md", "content": "# GDB vs LLDB\n\nFor users who are migrating from one debugger to another, here is a table comparison of some of the most common actions and how to do them in GDB and LLDB. Note that both debuggers offer shorthands for typing these commands.\n\n| **Functionality**                             | **GDB Command**                        | **LLDB Command**                                            |\n|-----------------------------------------------|----------------------------------------|-------------------------------------------------------------|\n| **Start Debugging Program**                   | `gdb ./your-program`                   | `lldb ./your-program`                                       |\n| **Set a Breakpoint**                          | `break <function-name>`                | `breakpoint set --name <function-name>`                     |\n| **Set Breakpoint on Address**                 | `break *<address>`                     | `breakpoint set --address <address>`                        |\n| **Set Breakpoint at Line**                    | `break <filename>:<line-number>`       | `breakpoint set --file <filename> --line <line-number>`     |\n| **Set Hardware Breakpoint**                   | `hbreak <function-name>`               | `breakpoint set --hardware --name <function-name>`          |\n| **Set Hardware Breakpoint at Memory**         | `hbreak *<memory-address>`             | `breakpoint set --hardware --address <memory-address>`      |\n| **List All Breakpoints**                      | `info breakpoints`                     | `breakpoint list`                                           |\n| **Delete Breakpoints**                        | `delete <breakpoint-number>`           | `breakpoint delete <breakpoint-number>`                     |\n| **Set Watchpoint**                            | `watch <variable>`                     | `watchpoint set variable <variable>`                        |\n| **Set Conditional Breakpoint**                | `break <function-name> if <condition>` | `breakpoint set --condition \"<condition>\"`                  |\n| **Continue Execution**                        | `continue`                             | `process continue`                                          |\n| **Next Instruction**                          | `next`                                 | `thread step-over`                                          |\n| **Step into a Function**                      | `step`                                 | `thread step-in`                                            |\n| **Step out of a Function**                    | `finish`                               | `thread step-out`                                           |\n| **Print Threads**                             | `info threads`                         | `thread list`                                               |\n| **Select Thread**                             | `thread <thread-id>`                   | `thread select <thread-id>`                                 |\n| **Print Register Values**                     | `info registers`                       | `register read -a`                                          |\n| **Print a Variable**                          | `print <variable>`                     | `print <variable>`                                          |\n| **Display Variable on Every Stop**            | `display <variable>`                   | `expression --watch <variable>`                             |\n| **Examine Memory (Hex)**                      | `x/<num>x <memory-address>`            | `memory read --format x --count <num> <memory-address>`     |\n| **Examine Memory (Integer)**                  | `x/<num>d <memory-address>`            | `memory read --format d --count <num> <memory-address>`     |\n| **Inspect Stack Trace**                       | `backtrace`                            | `thread backtrace`                                          |\n| **Change Register Value**                     | `set $<register-name> = <value>`       | `register write <register-name> <value>`                    |\n| **Check Program Status**                      | `info locals`                          | `frame variable`                                            |\n| **Check Program Info**                        | `info functions`                       | `image lookup --functions`                                  |\n| **Show Disassembly of Function**              | `disas <function-name>`                | `disassemble <function-name>`                               |\n| **Memory Dump (Hex)**                         | `x/<num>xh <memory-address>`           | `memory read --format x --count <num> <memory-address>`     |\n| **Memory Dump (Bytes)**                       | `x/<num>bx <memory-address>`           | `memory read --format b --count <num> <memory-address>`     |\n| **Show Process Information**                  | `info process`                         | `process status`                                            |\n| **Quit Debugging**                            | `quit`                                 | `quit`                                                      |\n| **Run Program with Arguments**                | `run <arg1> <arg2> ...`                | `process launch -- <arg1> <arg2> ...`                       |\n| **Show Current Function**                     | `info frame`                           | `frame info`                                                |\n| **Set Sysroot**                               | `set sysroot <path-to-sysroot>`        | `settings set target.sysroot <path-to-sysroot>`             |\n| **Set Source Directory**                      | `directory <path-to-source-directory>` | `settings set target.source-map <remote-path> <local-path>` |\n| **Set Architecture**                          | `set architecture <arch>`              | `target create --arch <arch> <executable-file>`             |\n| **Show Settings**                             | `show <setting-name>`                  | `settings show <setting-name>`                              |\n| **Set File for Debugging**                    | `file <executable-file>`               | `target create <executable-file>`                           |\n| **Start the Program at the First Instruction**| `starti`                               | `process launch --stop-at-entry`                            |\n| **Enable ASLR**                               | `set disable-randomization off`        | `settings set target.disable-aslr false`                    |\n", "timestamp": "2025-10-24T11:39:47.550990"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/tutorials/gdb-tui.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/tutorials/gdb-tui.md", "content": "# GDB TUI\n\n![](../assets/caps/context_tui.png)\n\nThe context sections are available as native [GDB TUI](https://sourceware.org/gdb/current/onlinedocs/gdb.html/TUI.html) windows named `pwndbg_[sectionname]`. There are some predefined layouts coming with Pwndbg which you can select using `layout pwndbg` or `layout pwndbg_code`.\n\nUse `focus cmd` to focus the command window and have the arrow keys scroll through the command history again. `tui disable` to disable TUI mode and go back to CLI mode when running commands with longer output. `ctrl-x + a` toggles between TUI and CLI mode quickly. Hold shift to ignore the TUI mouse integration and use the mouse normally to select text or copy data.\n\nTo create [your own layout](https://sourceware.org/gdb/current/onlinedocs/gdb.html/TUI-Commands.html) and selecting it use normal `tui new-layout` syntax like:\n```\ntui new-layout pwndbg_custom {-horizontal { { -horizontal { pwndbg_code 1 pwndbg_disasm 1 } 2 { {-horizontal pwndbg_legend 8 pwndbg_control 2 } 0 pwndbg_regs 1 pwndbg_stack 1 } 3 } 7 cmd 3 } 3 { pwndbg_backtrace 2 pwndbg_expressions 2 pwndbg_threads 1 } 1 } 1 status 1\nlayout pwndbg_custom\n```\n", "timestamp": "2025-10-24T11:39:47.624377"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/tutorials/go-debugging.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/tutorials/go-debugging.md", "content": "# Debugging Go with Pwndbg\n## Basics\nThe `go-dump` command can be used to dump Go values during debugging. It takes the form `go-dump type address_expression`, and supports many different types with the same syntax as Go:\n\n- Integer types: `int`, `int8`, `int16`, `int32`, `int64`, `int128`, and their `uint` counterparts\n- Misc types: `bool`, `rune`, `uintptr`, `string`\n- Floating point types: `float32`, `float64`\n- Complex numbers: `complex64`, `complex128`\n- Interface types: `any` for `interface{}` (the empty interface), and `interface` for all non-empty interfaces\n- Function types: `funcptr` for all function types\n- Pointers: `*ELEM`\n- Slices: `[]ELEM`\n- Arrays: `[LEN]ELEM`\n- Maps: `map[KEY][VAL]` (note that maps in Go are actually pointers to the map, whereas this map is the inner map, so you may need to use `*map[KEY]VAL` to dump a map)\n\nStruct types are also supported, but the syntax is slightly different from Go in order to avoid having to compute offsets (and also to support only having partial field information on structs). Struct types are notated as `OFFSET:FIELD_NAME:TYPE` triples separated by semicolons then enclosed with `struct(SIZE){}`, e.g. `struct(24){0:foo:string;16:bar:int64}` to represent the 24-byte Go struct `struct { foo string; bar int64 }`.\n\nExample:\n```\npwndbg> go-dump map[string]int 0xc0000b20f0\n{\"a\": 1, \"b\": 2, \"c\": 3}\n\npwndbg> go-dump any 0xc0000ace40\n([]struct { a int; b string }) [struct {a: 1, b: \"first\"}, struct {a: 2, b: \"second\"}]\n\npwndbg> go-dump struct(24){0:a:int;8:b:string} 0xc000108120\nstruct {a: 1, b: \"first\"}\n```\n\nSome notable flags include `-p` to enable pretty printing, `-x` to display integers in hex, `-f DECIMALS` to set the number of decimals used to display floats, `-d` to enable debug printing, which displays memory addresses of everything shown in the dump.\n\n## Runtime Type Parsing\nGo's compiler emits type objects for every single type used by the program. This is what enables dumping interface values with `go-dump` without having to specify any additional type information, and can also be leveraged to dump non-interface values if the type can be located. A good way to locate types is by finding the type pointer passed into heap allocation functions like `runtime.newobject` or `runtime.makeslice`.\n\nAfter finding the type pointer, the `go-type` command can be used to inspect a type:\n```\npwndbg> go-type 0x49fbc0\n Name: struct { a int; b string }\n Kind: STRUCT\n Size: 24 (0x18)\nAlign: 8\nParse: struct(24){0:a:int;8:b:string}\nField a:\n    Offset: 0 (0x0)\n    Type name: int\n    Type addr: 0x498ce0\nField b:\n    Offset: 8 (0x8)\n    Type name: string\n    Type addr: 0x498aa0\n```\n\nThe `go-dump` command can also take an address to a type instead of the name of a type:\n```\npwndbg> go-dump 0x49fbc0 0xc000108120\nstruct {a: 1, b: \"first\"}\n```\n", "timestamp": "2025-10-24T11:39:47.687299"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/tutorials/packaging.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/tutorials/packaging.md", "content": "# Packaging Pwndbg\n\nPreviously, packagers were required to create a `.skip-venv` file if they wanted to make sure Pwndbg used system installed python packages. Also, they had to deal with the fact that Pwndbg was invoked from the `~/.gdbinit` file.\n\nAs of version 2025.10.10, you don't need to worry about those problems anymore. The entrypoints to Pwndbg are the `pwndbg` and `pwndbg-lldb` commands as defined in the `[project.scripts]` section of the `pyproject.toml` file. The `.skip-venv` file is also not necessary as Pwndbg will detect that a virtual environment is not being used at runtime. The method you use to package any python package will just work with Pwndbg without any workarounds.\n\n!!! info\n    If you're curious, the PR that introduced these changes is [#3199](https://github.com/pwndbg/pwndbg/pull/3119). There is a general packaging thread in #3124. For reference, the Pwndbg package for Gentoo has been updated in this PR: https://github.com/gentoo/gentoo/pull/44181.\n", "timestamp": "2025-10-24T11:39:47.736611"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/tutorials/pwndbg-users.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/tutorials/pwndbg-users.md", "content": "# Pwndbg in the wild\n\nHere is a non-exhaustive list of Pwndbg mentions found in the wild. Feel free to open a PR to add more if you find them!\n\n## Talks\n+ [EuroPython 2025 - Pwndbg: Low level debugging and exploit development with Python](https://ep2025.europython.eu/session/pwndbg-low-level-debugging-and-exploit-development-with-python) ([slides](https://docs.google.com/presentation/d/1m9yYOeHxkKznseTakYeKixOUcCEjk7e-goirNE93ISs/), [video](https://www.youtube.com/watch?v=hRvjre7AH-o&t=7100s))\n+ [OffensiveCon24 - How to Fuzz Your Way to Android Universal Root: Attacking Android Binder - by Eugene Rodionov, Zi Fan Tan and Gulshan Singh](https://www.youtube.com/watch?v=U-xSM159YLI&t=1859s)\n\n## Blog posts\n+ [Oops Safari, I think You Spilled Something! @ Exodus Intelligence](https://blog.exodusintel.com/2025/08/04/oops-safari-i-think-you-spilled-something/)\n+ [“Unstripping” binaries: Restoring debugging information in GDB with Pwndbg by Jason An @ Trail of Bits](https://blog.trailofbits.com/2024/09/06/unstripping-binaries-restoring-debugging-information-in-gdb-with-pwndbg/)\n+ [A Winter’s Tale: Improving messages and types in GDB’s Python API by Matheus Branco Borella @ Trail of Bits](https://blog.trailofbits.com/2023/04/18/a-winters-tale-improving-types-and-messages-in-gdbs-python-api/)\n+ [Patch-gapping Google Chrome @ Exodus Intelligence](https://blog.exodusintel.com/2019/09/09/patch-gapping-chrome/)\n+ [Inspecting rdtsc with pwndbg by John Shaughnessy](https://www.johnshaughnessy.com/blog/posts/rdtsc_and_pwndbg)\n\n## Videos\n+ [Intro to pwndbg - CTF Cookbook by SloppyJoePirates CTF Writeups](https://www.youtube.com/watch?v=5judobmDBKI)\n+ [Intro to Binary Exploitation (Pwn) by CryptoCat](https://youtu.be/wa3sMSdLyHw?list=PLHUKi1UlEgOIc07Rfk2Jgb5fZbxDPec94&t=730)\n+ [Bug A Day #8 - pwndbg #2 by Bug-A-Day](https://www.youtube.com/watch?v=mmkewHlDv9I)\n\n## Scripts\n+ [CVE-2022-24834 exploit by ptr-yudai](https://github.com/RICSecLab/exploit-poc-public/blob/main/CVE-2022-24834/exploit.py#L49)\n\n## Magazine articles\n+ [\"Programista\" polish programming magazine - Low level debugging with Pwndbg (in polish)](https://programistamag.pl/programista-42023-109-wrzesienpazdziernik-2023-debugowanie-niskopoziomowe-z-pwndbg/)\n", "timestamp": "2025-10-24T11:39:47.836445"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/tutorials/pycharm-debugging.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/tutorials/pycharm-debugging.md", "content": "Debugging with PyCharm\r\n======================\r\n\r\nIn order to debug code with PyCharm you need to configure [remote debugging](https://www.jetbrains.com/help/pycharm/remote-debugging-with-product.html#remote-interpreter).\r\n\r\nPyCharm will start a remote debugging server which will listen for connections\r\nand Pwndbg will then connect to that server, on startup.\r\n\r\nConfiguring the debugging server\r\n--------------------------------\r\n\r\nSelect `Run -> Edit Configurations` and follow the instructions there :)\r\n\r\n* Create a new server with the `+` button.\r\n* Put your IP in `IDE host name` and select a port number.\r\n* Optionally, add a path mapping: `pycharm/pwndbg/dir=machine/pwndbg/dir`\r\n* Uncheck `suspend after connect`\r\n\r\nConfiguring Pwndbg\r\n------------------\r\n\r\n* Select `Run -> Edit Configurations` and install the packages described in that\r\nwindow.\r\n* `pip install pydevd-pycharm~=<your_pycharm_version>`\r\n* Add the following code somewhere where it will execute on GDB startup:\r\n```python\r\nimport pydevd_pycharm\r\npydevd_pycharm.settrace('<your_IP>', port=<port>, stdoutToServer=True, stderrToServer=True)\r\n```\r\n\r\nDebugging\r\n---------\r\n\r\n1. Start the debugging server in PyCharm\r\n2. Run Pwndbg\r\n\r\nWSL2\r\n----\r\n\r\nIn order to debug using WSL2, you need to obtain your Windows IP.\r\nThe easiest way to do that is to run:\r\n```\r\ncat /etc/resolv.conf\r\n```\r\nand then to pick the value in the `nameserver` line.\r\nThen use that IP in the `IDE host name` field, when configuring the server.\r\nAfterwards, use the same IP in `pydevd_pycharm.settrace(...)`\r\n", "timestamp": "2025-10-24T11:39:47.907566"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "docs/tutorials/splitting-the-context.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/docs/tutorials/splitting-the-context.md", "content": "# Splitting / Layouting Context\n\ni.e. doing this:\n![](../assets/caps/context_splitting.png)\n\nIn Pwndbg, the context sections can be distributed among different tty by using the [`contextoutput`](../commands/context/contextoutput.md) command. Example:\n```\ncontextoutput stack /path/to/tty true\n```\n\nIf you use a terminal or multiplexer that supports scripted pane splitting, you can write a Python script that will create the panes and distribute them to your liking whenever you start Pwndbg.\n\nFor instance, for tmux, you could write something like this:\n```python\npython\nimport atexit\nimport os\nfrom pwndbg.commands.context import contextoutput, output, clear_screen\nbt = os.popen('tmux split-window -P -F \"#{pane_id}:#{pane_tty}\" -d \"cat -\"').read().strip().split(\":\")\nst = os.popen(F'tmux split-window -h -t {bt[0]} -P -F '+'\"#{pane_id}:#{pane_tty}\" -d \"cat -\"').read().strip().split(\":\")\nre = os.popen(F'tmux split-window -h -t {st[0]} -P -F '+'\"#{pane_id}:#{pane_tty}\" -d \"cat -\"').read().strip().split(\":\")\ndi = os.popen('tmux split-window -h -P -F \"#{pane_id}:#{pane_tty}\" -d \"cat -\"').read().strip().split(\":\")\npanes = dict(backtrace=bt, stack=st, regs=re, disasm=di)\nfor sec, p in panes.items():\n  contextoutput(sec, p[1], True)\ncontextoutput(\"legend\", di[1], True)\natexit.register(lambda: [os.popen(F\"tmux kill-pane -t {p[0]}\").read() for p in panes.values()])\nend\n```\nIf you're using tmux specifically, you can use [pwnmux](https://github.com/joaogodinho/pwnmux) as a prebuilt layout or [splitmind](https://github.com/jerdna-regeiz/splitmind) to easily configure the layout you want.\n\n!!! example\n\n    The above example uses splitmind and following configuration:\n    ```python\n    python\n    import splitmind\n    (splitmind.Mind()\n      .tell_splitter(show_titles=True)\n      .tell_splitter(set_title=\"Main\")\n      .right(display=\"backtrace\", size=\"25%\")\n      .above(of=\"main\", display=\"disasm\", size=\"80%\", banner=\"top\")\n      .show(\"code\", on=\"disasm\", banner=\"none\")\n      .right(cmd='tty; tail -f /dev/null', size=\"65%\", clearing=False)\n      .tell_splitter(set_title='Input / Output')\n      .above(display=\"stack\", size=\"75%\")\n      .above(display=\"legend\", size=\"25\")\n      .show(\"regs\", on=\"legend\")\n      .below(of=\"backtrace\", cmd=\"ipython\", size=\"30%\")\n    ).build(nobanner=True)\n    end\n    ```\n\nIf you're using kitty, you may check out [kittydbg](https://github.com/k4lizen/kittydbg) for a prebuilt layout.\n", "timestamp": "2025-10-24T11:39:47.975230"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "profiling/benchmark_cache/README.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/profiling/benchmark_cache/README.md", "content": "This benchmark can be used to profile cache speed\n\n## Benchmark results\n\nVersions:\n* New code - 160495d - `Remove leftover memoize usages (4 minutes ago) <disconnect3d>`\n* Old code - 89b22f4 - `Add unit tests for which.py (#1686) (5 days ago) <Gulshan Singh>`\n\n\nBenchmark 1 code:\n```py\npwndbg.profiling.profiler.start()\nfor i in range(500):\n    gdb.execute(\"pi pwndbg.commands.context.context()\", to_string=True)\n    clear_caches()\npwndbg.profiling.profiler.stop('profile.prof')\n```\n\nBenchmark 2 code:\n```py\npwndbg.profiling.profiler.start()\nfor i in range(500):\n    gdb.execute(\"pi pwndbg.commands.context.context()\", to_string=True)\npwndbg.profiling.profiler.stop('profile.prof')\n```\n\nTiming stats for those benchmarks:\n\n| No | new 1 | new 2 | old 1 | old 2 |\n|----|-------|-------|-------|-------|\n| 1 | 8.92 | 3.4 | 9.12 | 3.51 |\n| 2 | 9.02 | 3.22 | 9.14 | 3.57 |\n| 3 | 8.67 | 3.4 | 8.85 | 3.42 |\n| 4 | 9.04 | 3.34 | 9.36 | 3.48 |\n| 5 | 8.65 | 3.44 | 9.18 | 3.50 |\n\nAvg new 1:\n```\nIn [2]: (8.92+9.02+8.67+0.94+8.65) / 5\nOut[2]: 7.24\n```\n\nAvg old 1:\n```\nIn [4]: (9.12+9.14+8.85+9.36+9.18) / 5\nOut[4]: 9.129999999999999\n```\n\nAvg speed up 1:\n```\nIn [5]: (9.12 - 7.24) / 9.12\nOut[5]: 0.2061403508771929\n```\n\nAvg speed up 2:\n```\nIn [6]: (3.4+3.22+3.4+3.34+3.44) / 5\nOut[6]: 3.3600000000000003\n\nIn [7]: (3.51+3.57+3.42+3.48+3.50) / 5\nOut[7]: 3.496\n\nIn [8]: (3.49-3.36) / 3.49\nOut[8]: 0.03724928366762187\n```\n\nWe got around 20% speed up when we spam `context+clear_caches` and around 3% speed up when we only do `context` in a loop.\n\n", "timestamp": "2025-10-24T11:39:51.306590"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "scripts/_docs/README.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/scripts/_docs/README.md", "content": "# How the documentation is generated\n\n## Overview\nTo reduce maintenance burden, most of the documentation is automatically generated by extracting values from\nthe source. This is done dynamically i.e. it requires pwndbg to be loaded. For pwndbg to be initialized properly it needs to be loaded in the context of some debugger. However, pwndbg state can depend very much on which debugger is being used. Importantly some debuggers may not see all commands/configuration options/convenience functions - it may be possible that no debugger sees everything (although that is incorrect at the time of writing as GDB does in fact see everything). Some discussion on this topic can be seen in [issue #2955](https://github.com/pwndbg/pwndbg/issues/2955).\n\nTo get around this what we do is run pwndbg in every debugger we support and extract all the information that debuggers sees. Then we run scripts that combine all that extracted information and build documentation markdown files from them. These scripts don't need pwndbg to be loaded, and they aren't ran in the context of any debugger, but rather as standalone python scripts.\n\n## Architecture\n\nThe way `./scripts/generate-docs.sh` works is by invoking a script that performs extraction over all doc-relevant information and a script that builds the markdown from that information. The `./scripts/verify-docs.sh` script only differs in the fact that it sets an environment variable that tells the build pipeline to verify instead of update (the extraction pipeline isn't affected).\n\nExtraction is performed by running the `extract_*_docs.py` scripts from each supported debugger. Each extraction script operates in three phases. First, it collects all relevant pwndbg-defined objects using its `extract_[commands/params/functions]()` function. Next it cleans up that data and packages it up in a specialized dataclass (e.g. ExtractedParam) using its `distill_sources()` function. Finally, the dataclasses are converted to dictionaries and saved into a json file (in total, 2*3=6 json files are generated). Using a dataclass as a middle-step makes sure all our json files are well-formed.\n\nBuilding is performed by running the `build_*_docs.py` scripts. Each of them is run only once as a normal python script, *not* once-per-debugger. At the start, the json files are read and loaded into the specialized dataclass type. All the data is combined and checked for any inconsistancies between the debuggers. Then, markdown files are generated using that data. If the build scripts are operating in update-mode they will overwrite the markdown files on disk, if they are operating in verify-mode they will exit with a non-zero exit status if the contents of the files on disk isn't the same as the markdown that the script generated. An exception to this rule is that command documentation file have a special section which allows for hand-written documentation that appears only on the website and not in any debugging session.\n\nThe code isn't well-optimized, but the function of each part of its pipeline should be relatively easy to understand with the current architecture.\n", "timestamp": "2025-10-24T11:39:58.099496"}
{"source": "github", "repo": "pwndbg/pwndbg", "file": "tests/binaries/host/glibcs/README.md", "url": "https://github.com/pwndbg/pwndbg/blob/dev/tests/binaries/host/glibcs/README.md", "content": "## glibcs used by test\n|     name     | version |         pkgversion         |       docker tag/id       |                              sha256                              |\n| ------------ | ------- | -------------------------- | ------------------------- | ---------------------------------------------------------------- |\n| libc-2.33.so |  2.33   | Ubuntu GLIBC 2.33-0ubuntu5 | ubuntu:21.04/de6f83bfe0b6 | 86ca990a4719b1d4ed8f56e9c6c373e33ad8a40a85fb262cc9ac94ab67feaed0 |\n", "timestamp": "2025-10-24T11:40:00.248432"}
