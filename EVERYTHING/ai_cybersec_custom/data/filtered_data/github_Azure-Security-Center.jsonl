{"source": "github", "repo": "Azure/Azure-Security-Center", "file": "Legacy Log Analytics dashboards/NotableEventsQueries.md", "url": "https://github.com/Azure/Microsoft-Defender-for-Cloud/blob/main/Legacy%20Log%20Analytics%20dashboards/NotableEventsQueries.md", "content": "# Notable events queries\n\nThe following queries are used to populate the notable events dashboards.\nIn addition, the notable events dashboard queries are available under \"Saved searches\" in your workspace. They appear in 3 categories:\n\n- [Security Critical Notable Issues](#Security-Critical-Notable-Issues)\n- [Security Warning Notable Issues](#Security-Warning-Notable-Issues)\n- [Security Info Notable Issues](#Security-Info-Notable-Issues)\n\n## Security Critical Notable Issues\n\n### Computer with guest account logons\n\n`SecurityEvent\n| where EventID == 4624 and TargetUserName == 'Guest' and LogonType in (10, 3)\n| summarize count() by Computer`\n\n### Computers missing security updates\n\n`Update\n| where UpdateState == 'Needed' and Optional == false and Classification == 'Security Updates' and Approved != false\n| summarize count() by Computer`\n\n### Computers with detected threats\n\n`ProtectionStatus\n| summarize (TimeGenerated, ThreatStatusRank) = argmax(TimeGenerated, ThreatStatusRank) by Computer\n| where ThreatStatusRank > 199 and ThreatStatusRank != 470`\n\n### Distinct malicious IP addresses accessed\n\n`union isfuzzy=true (WireData\n| where Direction == 'Outbound'), (WindowsFirewall\n| where CommunicationDirection == 'SEND'), (CommonSecurityLog\n| where CommunicationDirection == 'Outbound')\n| where isnotempty(MaliciousIP)\n| summarize by MaliciousIP`\n\n### High priority Active Directory assessment security recommendations\n\n`let schemaColumns = datatable(TimeGenerated:datetime, RecommendationId:string)[];\nunion isfuzzy=true schemaColumns, (ADAssessmentRecommendation\n| where FocusArea == 'Security and Compliance' and RecommendationResult == 'Failed' and RecommendationScore>=35)\n| summarize arg_max(TimeGenerated, *) by RecommendationId`\n\n### High priority SQL assessment security recommendations\n\n`let schemaColumns = datatable(TimeGenerated:datetime, RecommendationId:string)[];\nunion isfuzzy=true schemaColumns, (SQLAssessmentRecommendation\n| where FocusArea == 'Security and Compliance' and RecommendationResult == 'Failed' and RecommendationScore>=35)\n| summarize arg_max(TimeGenerated, *) by RecommendationId`\n\n### Computers missing critical updates\n\n`Update\n| where UpdateState == 'Needed' and Optional == false and Classification == 'Critical Updates' and Approved != false\n| summarize count() by Computer`\n\n## Security Warning Notable Issues\n\n### Computers missing critical updates\n\n`Update\n| where UpdateState == 'Needed' and Optional == false and Classification == 'Critical Updates' and Approved != false\n| summarize count() by Computer`\n\n### Computers with insufficient protection\n\n`ProtectionStatus\n| summarize (TimeGenerated, ProtectionStatusRank) = argmax(TimeGenerated, ProtectionStatusRank) by Computer\n| where ProtectionStatusRank > 199 and ProtectionStatusRank != 550`\n\n### Computers with system audit policy changes\n\n`SecurityEvent\n| where EventID == 4719\n| summarize count() by Computer`\n\n### Domain security policy changes\n\n`SecurityEvent\n| where EventID == 4739\n| summarize count() by DomainPolicyChanged`\n\n### Logons with a clear text password\n\n`SecurityEvent\n| where EventID == 4624 and LogonType == 8\n| summarize count() by TargetAccount`\n\n### Low priority AD assessment security recommendations\n\n`let schemaColumns = datatable(TimeGenerated:datetime, RecommendationId:string)[];\nunion isfuzzy=true schemaColumns, (ADAssessmentRecommendation\n| where FocusArea == 'Security and Compliance' and RecommendationResult == 'Failed' and RecommendationScore<35)\n| summarize arg_max(TimeGenerated, *) by RecommendationId`\n\n### Low priority SQL assessment security recommendations\n\n`let schemaColumns = datatable(TimeGenerated:datetime, RecommendationId:string)[];\nunion isfuzzy=true schemaColumns, (SQLAssessmentRecommendation\n| where FocusArea == 'Security and Compliance' and RecommendationResult == 'Failed' and RecommendationScore<35)\n| summarize arg_max(TimeGenerated, *) by RecommendationId`\n\n### Members added To security-enabled groups\n\n`SecurityEvent\n| where EventID in (4728, 4732, 4756)\n| summarize count() by SubjectAccount`\n\n### Suspicious executables\n\n`SecurityEvent\n| where EventID == 8002 and Fqbn == '-'\n| summarize ExecutionCountHash=count() by FileHash\n| where ExecutionCountHash <= 5`\n\n## Security Info Notable Issues\n\n### Accounts failed to log on\n\n`SecurityEvent\n| where EventID == 4625\n| summarize count() by TargetAccount`\n\n### Accounts failed to login (Linux)\n\n`LinuxAuditLog\n| where RecordType == 'user_login' and res != 'success'\n| summarize count() by acct`\n\n### Change or reset passwords attempts\n\n`SecurityEvent\n| where EventID in (4723, 4724)\n| summarize count() by TargetAccount`\n\n### Computers with cleaned event logs\n\n`SecurityEvent\n| where EventID in (1102, 517) and EventSourceName == 'Microsoft-Windows-Eventlog'\n| summarize count() by Computer`\n\n### Computers with failed Linux user password change\n\n`Syslog\n| where Facility == 'authpriv' and ((SyslogMessage has 'passwd:chauthtok' and SyslogMessage has 'authentication failure') or SyslogMessage has 'password change failed')\n| summarize count() by Computer`\n\n### Computers with failed ssh logons\n\n`Syslog\n| where (Facility == 'authpriv' and SyslogMessage has 'sshd:auth' and SyslogMessage has 'authentication failure') or (Facility == 'auth' and ((SyslogMessage has 'Failed' and SyslogMessage has 'invalid user' and SyslogMessage has 'ssh2') or SyslogMessage has 'error: PAM: Authentication failure'))\n| summarize count() by Computer`\n\n### Computers with failed su logons\n\n`Syslog\n| where (Facility == 'authpriv' and SyslogMessage has 'su:auth' and SyslogMessage has 'authentication failure') or (Facility == 'auth' and SyslogMessage has 'FAILED SU')\n| summarize count() by Computer`\n\n### Computers with failed sudo logons\n\n`Syslog\n| where (Facility == 'authpriv' and SyslogMessage has 'sudo:auth' and (SyslogMessage has 'authentication failure' or SyslogMessage has 'conversation failed')) or ((Facility == 'auth' or Facility == 'authpriv') and SyslogMessage has 'user NOT in sudoers')\n| summarize count() by Computer`\n\n### Computers with new Linux group created\n\n`Syslog\n| where Facility == 'authpriv' and SyslogMessage has 'new group'\n| summarize count() by Computer`\n\n### Computers with users added to a Linux group\n\n`Syslog\n| where Facility == 'authpriv' and SyslogMessage has 'to group' and (SyslogMessage has 'add' or SyslogMessage has 'added')\n| summarize by Computer`\n\n### Distinct clients resolving malicious domains\n\n`let schemaColumns = datatable(ClientIP:string)[];\nunion isfuzzy=true schemaColumns, (DnsEvents\n| where SubType == 'LookupQuery' and isnotempty(MaliciousIP))\n| summarize count() by ClientIP`\n\n### Distinct paths of Executed Commands (Linux)\n\n`LinuxAuditLog\n| where RecordType == 'syscall' and syscall == 'execve'\n| summarize count() by exe`\n\n### Executed Commands (Linux)\n\n`LinuxAuditLog\n| where RecordType == 'syscall' and syscall == 'execve'\n| summarize count() by cmd`\n\n### Loading or Unloading of Kernel modules (Linux)\n\n`LinuxAuditLog\n| where key == 'kernelmodules' and RecordType != 'CONFIG_CHANGE'`\n\n### Locked accounts\n\n`SecurityEvent\n| where EventID == 4740\n| summarize count() by TargetAccount`\n\n### Remote procedure call(RPC) attempts\n\n`SecurityEvent\n| where EventID == 5712\n| summarize count() by Computer`\n\n### Security groups created or modified\n\n`SecurityEvent\n| where EventID in (4727, 4731, 4735, 4737, 4754, 4755)\n| summarize count() by TargetAccount`\n\n### User accounts created or enabled\n\n`SecurityEvent\n| where EventID in (4720, 4722)\n| summarize by TargetAccount`", "timestamp": "2025-10-21T22:03:59.034707"}
{"source": "github", "repo": "Azure/Azure-Security-Center", "file": "SECURITY.md", "url": "https://github.com/Azure/Microsoft-Defender-for-Cloud/blob/main/SECURITY.md", "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.7 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://aka.ms/opensource/security/definition), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://aka.ms/opensource/security/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/opensource/security/pgpkey).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://aka.ms/opensource/security/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://aka.ms/opensource/security/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://aka.ms/opensource/security/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->\n", "timestamp": "2025-10-21T22:04:03.926359"}
