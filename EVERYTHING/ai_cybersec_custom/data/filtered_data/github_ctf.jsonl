{"source": "github", "repo": "p4-team/ctf", "file": "2018-03-24-securinets/crypto_quality/description.txt", "url": "https://github.com/p4-team/ctf/blob/master/2018-03-24-securinets/crypto_quality/description.txt", "content": "Hello Every one,\nWe didn't know what to do, so we are asking for your help.\n\nA friend of us sent us the following text:\n\nI used an elliptic curve encrytion for the first time.\nThe only thing that i kown about elliptic curve is that a number K must always be hidden.\nso i made multiple encryption to send some information.\n\nHere is all the informations about the elliptic curve that i used excep the K number.\n\nThe elliptic curve is : \ny^2 = x^3 + A*x + B\nA = 658974\nSorry i forget the B :/ , I just remember that it's most significant number is  6\n\nAs an order of a finite field must be a prime power, i used p = 962280654317 (FiniteField(p)).\nas a starter point, i used the generator G for this elliptic curve: (518459267012 : 339109212996 : 1)\nand each time i reuse it to encrypt again\n\nlet my secret message be K .\nfor exemple I divided my K to 2 elements k1 and k2\nthen Q1 is k1*G\nand Q2 is k2*G\n\nhere are the Qi that i got:\n\n[(656055339629 : 670956206845 : 1), \n(714432985374 : 30697818482 : 1), \n(519532969453 : 833497145865 : 1), \n(606806384185 : 353033449641 : 1), \n(370553209582 : 211121736115 : 1), \n(95617246846 : 666814491609 : 1), \n(474872055371 : 795112698430 : 1), \n(249845085299 : 222352033875 : 1), \n(850954431245 : 810446463695 : 1), \n(188731559428 : 877002121896 : 1), \n(168665615402 : 464872506873 : 1), \n(26722558561 : 269217869309 : 1), \n(16403346294 : 478534963882 : 1), \n(539749282946 : 332444159141 : 1), \n(932295517649 : 23439478940 : 1), \n(765194933041 : 920187938377 : 1), \n(853124087439 : 845601917928 : 1), \n(246454416048 : 212483699689 : 1), \n(312547608490 : 688107262695 : 1), \n(43261158649 : 439444472742 : 1), \n(320785434805 : 477080449838 : 1), \n(741706320740 : 672809544395 : 1), \n(361762297756 : 858805805323 : 1), \n(782235980044 : 600673464737 : 1), \n(69196762074 : 327427680437 : 1), \n(876001563166 : 573218279075 : 1), \n(117946101727 : 954797129239 : 1), \n(771781111553 : 314018907599 : 1), \n(579549799021 : 322325160055 : 1), \n(857081196493 : 464260539273 : 1), \n(852938568103 : 429083796488 : 1), \n(850954431245 : 810446463695 : 1), \n(55203632714 : 255470537391 : 1), \n(600464434215 : 605840305721 : 1), \n(620532163623 : 575613893944 : 1), \n(215810002861 : 481354983411 : 1), \n(538481263994 : 666638294130 : 1), \n(528666082457 : 895034116069 : 1), \n(296218553972 : 899557390183 : 1), \n(428618251485 : 445768511836 : 1), \n(632412058600 : 685699421425 : 1), \n(634041855232 : 495546745721 : 1), \n(570481762204 : 252944477333 : 1), \n(760959783781 : 435626456209 : 1)]\n", "timestamp": "2025-10-21T13:32:10.150943"}
